$(function() {
    var c = ["DAYS7", "DAYS30", "DAYS60"];
    var l = $("#rulesContainer");
    var af = $(".waitContainer");
    var G = $("#vennDiagram");
    var M = $("#venn-wait");
    var a = $("#rule-wait");
    var Q = 1;
    var R = $("#pageInfo");
    var v = R.attr("data-timeRange") || "DAYS30";
    var q = "actualData";
    var k = R.attr("data-editmode") == "true";
    var Y = R.attr("data-copymode") == "true";
    var B = R.attr("data-locale");
    var s = R.attr("data-path");
    var U = R.data("souce-id");
    var o = s + R.attr("data-sid");
    var ag = [];
    var K = {SOURCE: {ANALYTICS: "analytics",MARKETING_CLOUD: "mac"},ANALYTICS: {ATTRIBUTE_TYPE: {DIMENSION: "dimension",EVENTS: "events"}}};
    var ah = {};
    var y = null;
    $(document).on("keyup", ".chooseDimension .evartext", function(ai) {
        E(ai)
    });
    $(document).on("selected", ".rule-container .coral-Select", function() {
        m($(this))
    });
    $(document).on("selected", ".rule-container .coral-SelectList", function() {
        if (!$(this).hasClass("js-coral-Autocomplete-selectList")) {
            m($(this))
        }
    });
    $(document).on("selected", ".rule-container .coral-Autocomplete", function() {
        m($(this))
    });
    $(document).on("click", ".addrule-icon-container .al-add-icon", D);
    $(document).on("click", ".deleteRule-icon-container .al-close-icon", H);
    $(document).on("click", "#open-analytics-segment", n);
    $(document).on("click", ".related-segments-container .cell", F);
    $(document).on("macSegment:selected", A);
    $(document).on("click", ".toggleRuleDefinition", O);
    $(document).on("click", "#save-segment", N);
    $(document).on("click", "#max-segment-warning-modal .manage-segment-link", ab);
    $(document).on("selected", ".chooseDimension .select", e);
    $(document).on("selected", ".chooseDimension .autocomplete", e);
    $(document).on("selected", ".chooseEvent .coral-Select", e);
    $(document).on("selected", ".operatorlist", e);
    $(document).on("selected", ".rule-operator .select", V);
    $(document).on("click", "#bottomPopover li a", function() {
        $(this).closest(".coral-Popover").data("popover").hide();
        u($(event.target))
    });
    $(document).on("focusin", ".valuelist .al-textfield", P);
    $(document).on("click", ".exit .close", r);
    CUI.Autocomplete.prototype._setSuggestions = function() {
        var ai = this;
        if (this._suggestionsBtn.length) {
            this._suggestionsBtn.on("click.autocomplete", function(aj) {
                if (!ai._selectListWidget.get("visible")) {
                    ai.showSuggestions(ai._input.val(), true, ai._selectListWidget);
                    aj.stopPropagation()
                }
            });
            this._input.addClass("autocomplete-has-suggestion-btn")
        }
    };
    function P(aj) {
        if (y) {
            y.hide();
            delete y
        }
        var ai = $(aj.target).closest(".step");
        ai.find(".coral-Tooltip").remove();
        y = new CUI.Tooltip({element: "#myTooltip",type: "info",target: $(aj.target).closest("div.valuelist"),autoDestroy: false,arrow: "top",content: Granite.I18n.get("There are no values corresponding to the selected evar. Please enter the value", null, "AL: "),delay: 500,visible: false});
        y.show();
        ai.find(".coral-Tooltip").css("display", "block").fadeOut(10000)
    }
    function ad() {
        $("#save-segment").attr("disabled", true);
        $(".icon-add").addClass("al-hidden")
    }
    function I() {
        $("#save-segment").removeAttr("disabled");
        var ai = $(".icon-add");
        if (ai.length > 0) {
            $($(".icon-add")[ai.length - 1]).removeClass("al-hidden")
        }
    }
    function u(al) {
        if (!G.is(":visible")) {
            af.removeClass("al-hidden")
        }
        ad();
        var ak = (al) ? (al.attr("data-id") || v) : v;
        v = ak;
        var am = l.find(".rule-container"), aj = [], ai = [];
        $.each(am, function(ap, an) {
            var aq = L($(an));
            var ao = h(aq.rule, ap);
            $(an).find("div.valueContainer").css("border-left", "0.2rem solid " + ao);
            var ar = JSON.parse(aq.segmentSize || "{}");
            var at = aq.sizeDataType || "";
            if (!at || !ar[v]) {
                if (aq.sid) {
                    $(an).attr("data-sid", aq.sid)
                }
                aj.push({sid: aq.sid || aq.rule,metadata: aq})
            }
        });
        if (aj.length == 0) {
            S();
            return
        }
        ai.push(v.replace("DAYS", ""));
        M.removeClass("al-hidden");
        $.ajax({url: s,type: "GET",data: {action: "fetch_segment_size",segmentData: JSON.stringify(aj),timeRange: JSON.stringify(ai)}}).done(function(ap) {
            var ao = ap && ap.messages;
            if (ao && ao.length > 0 && ao[0].type == "error") {
                $("#alert-box").show().find(".coral-Alert-message").html(ao[0].content);
                M.addClass("al-hidden")
            } else {
                if (ap && ap.response) {
                    var an = ap.response;
                    $.each(am, function(au, at) {
                        var aq = an[$(at).attr("data-rule")] || an[$(at).attr("data-sid")];
                        if (aq != undefined) {
                            var ar = JSON.parse($(at).attr("data-size") || "{}");
                            var ax = $(at).attr("data-type") || "";
                            var aw = "30";
                            for (var av = 0;
                                 av < c.length;
                                 av++) {
                                if (aq.size[c[av]]) {
                                    ar[c[av]] = aq.size[c[av]]
                                }
                            }
                            ax = aq.sizeDataType || ax;
                            aw = aq.daysLeft || aw || "30";
                            $(at).attr("data-size", JSON.stringify(ar));
                            $(at).attr("data-type", ax);
                            $(at).attr("days-left", aw)
                        }
                    });
                    af.addClass("al-hidden");
                    V()
                }
            }
        })
    }
    function F() {
        var ai = $(this).attr("data-path");
        if (ai) {
            window.location.href = ai + ".edit.html"
        }
        return false
    }
    function O() {
        var ai = $(this).parents(".rule-container");
        ai.find(".rule-content").toggleClass("al-hidden");
        ai.find(".rule-definition").toggleClass("al-hidden")
    }
    function n() {
        var ai = $(this).attr("data-path");
        if (ai) {
            window.location.href = ai
        }
    }
    function J(ak) {
        var al = ak.find(".rule-content"), ai = al.find(".segmentPart"), aj = ak.find(".rule-definition");
        aj.empty().removeClass("al-hidden");
        $.each(ai, function(an, am) {
            var ao = $(am).find(":selected").val();
            $('<i class="coral-Icon coral-Icon--chevronRight al-rule-chevronRight coral-Icon--sizeXS"></i>').appendTo(aj);
            $('<span class="toggleRuleDefinition"></span>').html(ao).appendTo(aj)
        });
        al.addClass("al-hidden")
    }
    function A(ai, am) {
        var ao = $(am), aq = ao.find(".mac-segments"), ak = ao.find(".mac-segments .is-highlighted"), aj = ao.find(".description"), ap = ak.attr("data-segmentRule"), ar = ak.attr("data-sid"), an = aq.find(".coral-SelectList").data("selectList"), al = aq.find(".coral-Select-button");
        aj.html(ak.attr("data-description"));
        ao.attr("data-rule", ap);
        ao.attr("data-size", "{}");
        ao.attr("data-type", "");
        ao.attr("data-sid", ar);
        u();
        al.find("span").text(ak.attr("data-name"));
        al.addClass("is-selected");
        al.attr("data-description", ak.attr("data-description"));
        al.attr("data-name", ak.attr("data-name"));
        al.attr("data-rule", ak.attr("data-rule"));
        al.attr("data-sid", ak.attr("data-sid"));
        al.attr("data-size", ak.attr("data-size"));
        al.attr("data-type", ak.attr("data-type") || "");
        al.attr("days-left", ak.attr("days-left") || "30");
        if (an) {
            an.hide()
        }
    }
    function V() {
        X();
        S()
    }
    function p(ak) {
        var am = $("#segment-summary"), aj = $("<div></div>"), an, ai = "";
        for (var al = 0;
             al < ak.rules.length;
             al++) {
            an = ak.rules[al];
            if (al > 0) {
                ai = ak.operators[al - 1];
                $("<span></span>").html(" " + ai + " ").appendTo(aj)
            }
            $("<span>(</span>").appendTo(aj);
            if (an.source == K.SOURCE.ANALYTICS) {
                $("<span>Raw Analytics Data</span>").appendTo(aj);
                if (an.reportSuite && an.reportSuite.name) {
                    $("<span></span>").html(Granite.I18n.get(" using ", null, "AL: Before this term comes the Attribute Source name and after this term, comes the selected Report Suite")).appendTo(aj);
                    $("<span></span>").html(an.reportSuite.name).appendTo(aj)
                }
                $("<span>)</span>").appendTo(aj);
                if (an.attribute && an.attribute.key && an.attribute.operator && an.attribute.value && an.attribute.value.name) {
                    $("<span></span>").html(Granite.I18n.get(" Visitors where ", null, "AL: Before this comes the Audience Summary, and after this term, comes the Rules of the Audience")).appendTo(aj);
                    $("<span></span>").addClass("highlight").html(an.attribute.key.name).appendTo(aj);
                    $("<span></span>").html(" " + an.attribute.operator + " ").appendTo(aj);
                    $("<span></span>").addClass("highlight").html(an.attribute.value.name).appendTo(aj)
                }
                $("</br>").appendTo(aj)
            }
            if (an.source == K.SOURCE.MARKETING_CLOUD) {
                $("<span>Marketing Cloud</span>").appendTo(aj);
                $("<span>)</span>").appendTo(aj);
                if (an.attribute) {
                    $("<span></span>").addClass("highlight").html(an.attribute.description).appendTo(aj)
                }
            }
        }
        am.html(aj.html())
    }
    function m(at) {
        ad();
        var an = at.find(":selected").length != 0 ? at.find(":selected") : at.find(".is-highlighted"), ar = at.parents(".rule-container"), al = an.attr("data-templatePath") || at.attr("data-templatePath"), am = at.parents(".step").next(".nextStepsContainer"), ap = at.attr("data-triggerEvent");
        var aq = an.closest(".al-autocomplete").find(".evarIEalignment");
        if (aq.length > 0) {
            aq.val(aq.val())
        }
        if ($(".mac-segment-container").length > 0) {
            var au = at.find("button").first();
            var av = au.text();
            av = av.trim();
            au.text("");
            au.append("<span class=buttontext>" + av + "</span>")
        }
        var aj = ar.find(".rule-content");
        var ai = aj.attr("class");
        if (ai.trim().split(" ").length > 1) {
            var ak = ai.trim().split(" ")[2];
            if (ak === "seconddd") {
                aj.removeClass("seconddd").addClass("thirddd")
            }
        } else {
            aj.addClass("seconddd")
        }
        am.empty();
        at.parents(".rule-content").next(".lastStepContainer").empty();
        if (an.hasClass("lastStep")) {
            am = at.parents(".rule-content").next(".lastStepContainer");
            J(ar)
        }
        var ao = z(false);
        p(ao);
        if (!al) {
            ap && $(document).trigger(ap, ar, an.val());
            return false
        }
        a.removeClass("al-hidden");
        j({url: al,data: L(ar),contentType: "json",dataType: "text"}, function(aw) {
            am.html(aw);
            a.addClass("al-hidden");
            am.trigger("cui-contentloaded");
            ap && $(document).trigger(ap, ar, an.val())
        })
    }
    function j(am, al, ak) {
        if (!am.url) {
            console.error("Please specify url for fetching data");
            return ""
        }
        am.data = am.data || {};
        al = al || function() {
        };
        ak = ak || function() {
            console.error("Failed to get data with options", am)
        };
        var ai = am.url + "?requestData=" + JSON.stringify(am.data);
        if (AL.xhrCache.exist(ai)) {
            al.call(null, AL.xhrCache.get(ai));
            return false
        }
        var aj = {};
        aj.requestData = JSON.stringify(am.data);
        if (am.action) {
            aj.action = am.action
        }
        $.ajax({url: am.url,method: am.method || "GET",data: aj,contentType: "application/json",dataType: am.dataType || "json"}).done(function(an) {
            AL.xhrCache.set(ai, an, al)
        }).fail(ak)
    }
    function L(al, aj) {
        var ak = al.find(".attributeSource").find(":selected"), ai = ak.attr("data-name");
        if (aj && !ai) {
            ag.push({status: "error",el: al,message: Granite.I18n.get("Please select Attribute Source", null, "AL: ")})
        }
        if (ai == K.SOURCE.ANALYTICS) {
            return x(al, aj)
        }
        if (ai == K.SOURCE.MARKETING_CLOUD) {
            return aa(al, aj)
        }
    }
    function aa(ar, al) {
        var ai = ar.find(".mac-segments").find(".is-highlighted").length > 0 ? ar.find(".mac-segments").find(".is-highlighted") : ar.find(".mac-segments").find(".is-selected"), ap = ar.attr("data-rule"), aj = ar.attr("data-size") || "", am = ai.attr("data-name") || "", an = ai.attr("data-description") || "", at = ai.attr("data-sid") || "", aq = {}, ao = ar.attr("data-type") || "", ak = ar.attr("days-left") || "30";
        if (al && !am) {
            ag.push({status: "error",el: ar,message: Granite.I18n.get("Please select an audience", null, "AL: ")})
        }
        aq.source = K.SOURCE.MARKETING_CLOUD;
        aq.attribute = {name: am,description: an};
        aq.rule = ap;
        aq.sid = at;
        aq.segmentSize = aj;
        aq.sizeDataType = ao;
        aq.daysLeft = ak;
        return aq
    }
    function x(av, aA) {
        var ak = av.find(".reportSuites").find(":selected"), ao = av.attr("data-rule"), al = av.attr("data-size"), aq = ak.attr("data-name") || "", ax = av.find(".attributeTypes").find(":selected"), ay = ax.attr("data-name") || "", aj = av.attr("data-type") || "", ar = av.attr("days-left") || "30", ai, am, ap, aw, at, au, an, az = {};
        if (ay == K.ANALYTICS.ATTRIBUTE_TYPE.DIMENSION) {
            ai = av.find(".chooseDimension");
            am = ai.find(".keylist").find(".is-highlighted");
            if (am.length < 1) {
                am = ai.find(".keylist input")
            }
            ap = am.attr("data-id") || "";
            aw = ai.find(".operatorlist").find(":selected");
            at = aw.attr("data-name") || "";
            au = ai.find(".valuelist").find(".evartext");
            if (au.length > 0) {
                an = au.val() || ""
            }
        }
        if (ay == K.ANALYTICS.ATTRIBUTE_TYPE.EVENTS) {
            ai = av.find(".chooseEvent");
            au = ai.find(".eventList").find(":selected");
            an = au.attr("data-name") || "";
            ap = au.attr("data-id") || ""
        }
        if (aA) {
            if (!aq) {
                ag.push({status: "error",el: av,message: Granite.I18n.get("Please select Report Suite", null, "AL: ")})
            }
            if (!ay) {
                ag.push({status: "error",el: av,message: Granite.I18n.get("Please select Attribute Type", null, "AL: ")})
            }
            if (ay == "dimension" && !ap) {
                ag.push({status: "error",el: av,message: Granite.I18n.get("Please select Attribute Key", null, "AL: ")})
            }
            if (ay == "dimension" && !at) {
                ag.push({status: "error",el: av,message: Granite.I18n.get("Please select operator", null, "AL: ")})
            }
            if (ay == "dimension" && !an) {
                ag.push({status: "error",el: av,message: Granite.I18n.get("Please select Attribute Value", null, "AL: ")})
            }
            if (ay == "events" && !an) {
                ag.push({status: "error",el: av,message: Granite.I18n.get("Please select an event", null, "AL: ")})
            }
            if ((at == "Less than" || at == "Greater Than") && isNaN(parseInt(an))) {
                ag.push({status: "error",el: av,type: "InvalidOperatorChosen",message: Granite.I18n.get("Please select an integer type value", null, "AL: ")})
            }
        }
        az.source = K.SOURCE.ANALYTICS;
        az.reportSuite = {};
        az.reportSuite["id"] = ak.attr("data-id") || "";
        az.reportSuite["name"] = aq;
        if (ay == K.ANALYTICS.ATTRIBUTE_TYPE.DIMENSION) {
            az.attributeType = K.ANALYTICS.ATTRIBUTE_TYPE.DIMENSION;
            az.attribute = {};
            az.attribute["key"] = {id: ap,name: am.text() || am.val() || ""};
            az.attribute["operator"] = at;
            az.attribute["value"] = {name: an}
        }
        if (ay == K.ANALYTICS.ATTRIBUTE_TYPE.EVENTS) {
            az.attributeType = K.ANALYTICS.ATTRIBUTE_TYPE.EVENTS;
            az.attribute = {};
            az.attribute["key"] = {name: "events"};
            az.attribute["operator"] = "matchesregex";
            az.attribute["value"] = {name: an,id: ap}
        }
        az.rule = ao;
        az.segmentSize = al;
        az.sizeDataType = aj;
        az.daysLeft = ar;
        return az
    }
    function b() {
        var ai = $("#max-rules-warning-modal");
        var ak = !!ai.find(".modal-body").length;
        if (!ak) {
            var aj = "<p>" + Granite.I18n.get("You have reached your maximum allowable rules in Audience Library", null, "AL: ") + ".";
            aj += Granite.I18n.get("If you would like to use more than 5 rules, you need to buy Adobe Audience Manager", null, "AL: ") + ".</p>";
            ai.modal({header: Granite.I18n.get("Audience Rules Max", null, "AL: Maximum number of rules allowed for an audience"),content: aj,buttons: [{label: Granite.I18n.get("Cancel", null, "AL: "),click: "hide"}, {label: '<a href="http://www.adobe.com/in/products/audiencemanager.html" target="_blank">' + Granite.I18n.get("Get Audience Manager", null, "AL: ") + "</a>",className: "primary",click: "hide"}]})
        }
        ai.modal("show")
    }
    function D() {
        ad();
        if (Q >= AL._MAX_NUMBER_OF_RULES) {
            b();
            return false
        }
        var ai = $("#empty-rule-template").html(), aj = $(ai).find(".rule-content").removeClass("al-hidden").end();
        l.find(".rules").append(aj);
        Q++;
        aj.trigger("cui-contentloaded")
    }
    function H() {
        ad();
        var ai = $(this).parents(".rule-container");
        var aj = ai.attr("data-rule");
        ai.remove();
        Q--;
        w(aj);
        S()
    }
    var f = null;
    function ae(al) {
        f = null;
        var aj = $(al.target).parent().find("li");
        var ak = $(al.target).parent().find("ul").find(".hidden");
        if (aj.length == ak.length && $(al.target).val().length != 0) {
            var ai = z(false);
            p(ai);
            e($(al.target))
        }
    }
    function E(ak) {
        var ai = $(ak.target).parent().find("li");
        var aj = $(ak.target).parent().find("ul").find(".hidden");
        if (ai.length == aj.length) {
            if (f != null) {
                clearTimeout(f)
            }
            f = setTimeout(function() {
                ae(ak)
            }, 2000)
        }
    }
    function e(al) {
        ad();
        var ak = $(this), ai = ak.parents(".rule-container"), aj;
        if (ai.length == 0) {
            ai = al.closest(".rule-container")
        }
        ag = [];
        aj = L(ai, true);
        if (ag.length > 0) {
            if (ag[0].type == "InvalidOperatorChosen") {
                $("#alert-box").show().find(".coral-Alert-message").html(ag[0].message)
            }
            return false
        }
        M.removeClass("al-hidden");
        $.ajax({url: s,type: "POST",data: {action: "create_trait",data: JSON.stringify({metadata: aj,dataSourceId: U,key: aj.attribute.key.id || aj.attribute.key.name,operator: aj.attribute.operator,value: aj.attribute.value.id || aj.attribute.value.name})}}).done(function(ao) {
            var an = "";
            var am = ao && ao.messages;
            if (am && am.length > 0 && am[0].type == "error") {
                $("#error-segmentList-modal").show().find(".message").html(am[0].content);
                M.addClass("al-hidden")
            } else {
                if (ao && ao.response && ao.response.traitId) {
                    an = ao.response.traitId;
                    ai.attr("data-rule", an);
                    ai.attr("data-size", "{}");
                    ai.attr("data-type", "");
                    u()
                }
            }
        })
    }
    function h(ak, aj) {
        if (ah[ak]) {
            return ah[ak]
        }
        var ai = AL._RULES_COLOR_ARRAY[aj];
        ah[ak] = ai;
        return ai
    }
    function w(ak) {
        if (ah[ak]) {
            var ai = ah[ak];
            var aj = AL._RULES_COLOR_ARRAY.indexOf(ai);
            AL._RULES_COLOR_ARRAY.splice(aj, 1);
            AL._RULES_COLOR_ARRAY.push(ai);
            delete ah[ak]
        }
    }
    function T() {
        var aj = [];
        for (var ai in ah) {
            if (ah.hasOwnProperty(ai)) {
                aj.push(ah[ai])
            }
        }
        return aj
    }
    function X(aj) {
        var ai = aj || (z())["segmentRule"];
        $.ajax({url: s,type: "POST",data: {action: "get_related_audiences",data: JSON.stringify({segmentRule: ai})}}).done(function(am) {
            var al = [];
            var ak = $(".related-segments-container").find(".row").empty();
            if (am && am.response && am.response.items) {
                ak.closest(".box").removeClass("faded-box");
                $(".related-segments-container").removeClass("al-hidden");
                al = am.response.items;
                al.forEach(function(ao, an) {
                    if (an > 4) {
                        return
                    }
                    var aq = $("<a></a>").attr("href", "#related-segments-popover"), ap = $("<div></div>").addClass("cell").attr("data-path", ao.path).appendTo(aq);
                    $("<p></p>").addClass("name").html(ao.name).appendTo(ap);
                    $("<p></p>").addClass("description").html(ao.description).appendTo(ap);
                    aq.appendTo(ak)
                })
            }
        })
    }
    function i() {
        var ai = $("#max-segment-warning-modal");
        var ak = !!ai.find(".modal-body").length;
        if (!ak) {
            var aj = "<p>" + Granite.I18n.get("You have reached your maximum allowable native audiences that can be created in the Audience Library", null, "AL: ") + ".</p>";
            aj += "<p>" + Granite.I18n.get("If you would like to build more than 50 native audiences, you need to upgrade to a premium account or delete an existing native audience", null, "AL: ") + ".</p>";
            aj += '<p><a class="manage-segment-link">' + Granite.I18n.get("Manage Marketing Cloud Audiences", null, "AL: ") + "</a></p>";
            ai.modal({header: Granite.I18n.get("Native Audiences Max", null, "AL: Maximum number of Audiences created natively using the Audience Library"),content: aj,buttons: [{label: Granite.I18n.get("Cancel", null, "AL: "),click: "hide"}, {label: Granite.I18n.get("Get Premium", null, "AL: "),className: "primary",click: "hide"}]})
        }
        ai.modal("show")
    }
    function z(an) {
        var aj = $(".segment-info"), al = _g.XSS.getXSSValue(aj.find(".segment-title").val()), aq = _g.XSS.getXSSValue(aj.find(".segment-des").val()), ap = l.find(".rule-container"), ak = l.find(".rule-operator").find(":selected"), ai = R.attr("data-size"), at = "", ar = [], ao = "", am = [];
        if (an && !al) {
            ag.push({status: "error",el: aj.find(".segment-title"),message: Granite.I18n.get("Please enter Audience Name", null, "AL: ")})
        }
        if (an && !aq) {
            ag.push({status: "error",el: aj.find(".segment-des"),message: Granite.I18n.get("Please enter Audience Description", null, "AL: ")})
        }
        $.each(ap, function(av, au) {
            var aw = L($(au), an);
            ar.push(aw)
        });
        $.each(ak, function(av, aw) {
            if (av != 0) {
                var au = aw.getAttribute("data-name");
                am.push(au);
                ao += (au == "and") ? "&" : "";
                ao += (au == "or") ? "|" : ""
            }
            ao += av
        });
        $.each(ar, function(au, aw) {
            var av = ar[au];
            if (av) {
                if (au != 0) {
                    at += " " + am[au - 1].toUpperCase() + " "
                }
                at += av.rule
            }
        });
        return {name: al,description: aq,rules: ar,operators: am,segmentRule: at,segmentSize: ai,defaultTimeRange: v,notation: ao}
    }
    function N() {
        ag = [];
        var ak = true, ai = z(ak);
        ai.path = Y ? s : o;
        if (ag.length > 0) {
            $("#alert-box").show().find(".coral-Alert-message").html(ag[0].message);
            return false
        }
        var al = k ? "update_audience" : "create_audience";
        var aj = {action: al,dataSourceId: U,data: JSON.stringify(ai),_charset_: "utf-8"};
        af.removeClass("al-hidden");
        $(this).attr("disabled", true);
        var am = $(this);
        $.ajax({url: k ? o : s,type: "POST",data: aj}).done(function(an) {
            var ao = an && an.messages;
            if (ao && ao.length > 0 && ao[0].type == "error") {
                $("#alert-box").show().find(".coral-Alert-message").html(ao[0].content)
            } else {
                $(".back").trigger("click")
            }
            am.attr("disabled", false);
            af.addClass("al-hidden")
        })
    }
    function ab() {
        $(".deleteSegmentDialog").removeClass("al-hidden");
        $(this).parents(".modal").modal("hide")
    }
    function ac(am, ak) {
        var al = {x: [],y: [],series: []};
        am = JSON.parse(am) || {};
        for (var aj in am) {
            var ai = parseInt(aj.substring(4)), an = new Date();
            an.setDate(an.getDate() - ai);
            al.x.push(new Date(an.getFullYear(), an.getMonth(), an.getDate()));
            al.y.push(am[aj]);
            al.series.push(ak)
        }
        return al
    }
    function C(ai) {
        var ak = {x: [],y: [],series: []}, am, al = ai.rules;
        var aj = 1;
        al.forEach(function(an) {
            var ao = an.segmentSize;
            if (ao) {
                am = ac(ao, "Rule " + aj);
                ak.x = ak.x.concat(am.x);
                ak.y = ak.y.concat(am.y);
                ak.series = ak.series.concat(am.series)
            }
            aj++
        });
        return ak
    }
    function S() {
        var ao = $(".diagram-container"), aj = ao.hasClass("venn"), ak = z(false), an = ak.segmentSize, ai = ak.segmentRule, am;
        ao.removeClass("al-hidden");
        al();
        function al() {
            var aB = z(false), au = aB.segmentSize, aG = aB.segmentRule, at = aB.notation, aH = {sets: [],overlaps: [],notation: at}, aF, aE, ay, ap, aq = [], aC = false;
            for (aF = 0;
                 aF < aB.rules.length;
                 aF++) {
                var av = "Rule " + (aF + 1);
                var az = "";
                var ax = aB.rules[aF]["sizeDataType"] != q;
                if (aB.rules[aF]["source"] == "analytics") {
                    av = aB.rules[aF]["attribute"]["value"]["name"] || "Rule " + (aF + 1)
                } else {
                    if (aB.rules[aF]["source"] == "mac") {
                        av = aB.rules[aF]["attribute"]["name"] || "Rule " + (aF + 1)
                    }
                }
                az = Granite.I18n.get("{0} : Actual Data", av, "AL: ");
                var ar = aB.rules[aF]["segmentSize"];
                if (ar) {
                    ar = JSON.parse(ar);
                    if (ax) {
                        var aw = aB.rules[aF]["daysLeft"] || "30";
                        aC = true;
                        az = Granite.I18n.get("{0} : Historical Estimate {1} (Data collection is in progress. Actual Data will be available in {2} days)", [av, ar[v], aw], "AL: ")
                    } else {
                        aq.push({setId: aH.sets.length,segmentRule: aB.rules[aF]["rule"]})
                    }
                    var aD = ax ? Granite.I18n.get("collecting data", null, "AL: ") : "";
                    var aA = parseInt(ar[v] || 0);
                    if (aA == 0) {
                        aD = Granite.I18n.get("collecting data (size : 0)", null, "AL: ")
                    }
                    ay = {label: av,size: aA,predicted: ax,tooltip: az,sizeText: ax ? aD : ""};
                    aH.sets.push(ay)
                }
            }
            M.removeClass("al-hidden");
            $.ajax({url: s,type: "POST",data: {action: "calculate_fetch_overlap_size",data: JSON.stringify({sets: aq})}}).done(function(aM) {
                var aL = [];
                if (aM && aM.response && aM.response.rules && aM.response.rules.length) {
                    aL = aM.response.rules;
                    for (var aK = 0;
                         aK < aL.length;
                         aK++) {
                        aL[aK]["size"] = JSON.parse(aL[aK]["size"])[v] || 0
                    }
                    aH.overlaps = aL
                }
                var aJ = "";
                switch (v) {
                    case c[0]:
                        aJ = Granite.I18n.get("Last 7 Days", null, "AL: ");
                        break;
                    case c[1]:
                        aJ = Granite.I18n.get("Last 30 Days", null, "AL: ");
                        break;
                    case c[2]:
                        aJ = Granite.I18n.get("Last 60 Days", null, "AL: ");
                        break
                }
                $(".venn-chart-time").html(aJ);
                $("g circle").remove();
                cloudViz.venn({parent: d3.select("#vennDiagram").node(),data: aH,colors: T(),autoResize: true,interactive: true,height: 300,width: "100%",distance: 5,locale: B}).render();
                if (aL.length == 0) {
                    var aI = $("#vennDiagram g rect");
                    aI.attr("style", "pointer-events:none")
                }
                if (aC) {
                    $("#vennDiagram").find(".cv-legend-highlight-entry").find(".cv-legend-num").html(Granite.I18n.get("collecting data", null, "AL: "))
                }
                $(".cv-legend-title").addClass("buttontext");
                M.addClass("al-hidden");
                af.addClass("al-hidden")
            })
        }
        $(".segment-info").addClass("withDiagram");
        I()
    }
    function d() {
        var ai = $(".diagram-container");
        ai.toggleClass("venn");
        S()
    }
    function r() {
        $(".back").trigger("click")
    }
    var W = l.attr("data-segmentRule");
    if (W && W.length) {
        X(W)
    } else {
        if (k || Y) {
            ad();
            var g = k ? "edit" : "copy";
            s = s.replace(/\/$/, "");
            var t = s + ".rules." + g + ".html";
            t = location.pathname.replace("." + g + ".html", ".rules." + g + ".html");
            var Z = $(".rules", l);
            $.get(t, function(ai) {
                Z.html(ai).trigger("cui-contentloaded");
                u()
            }).fail(function() {
                Z.html("")
            })
        }
    }
});
$(function() {
    var b = $(".segmentListContainer"), c = $("#delete-segment");
    b.find(".listItem").click(a);
    $(".deleteSegmentDialog .drawer button").click(d);
    function a(g) {
        var f, e = $(g.currentTarget);
        e.toggleClass("selected");
        f = b.find(".listItem.selected");
        var h = (f.length == 0) ? "disabled" : false;
        c.attr("disabled", h)
    }
    function d(e) {
        $(e.currentTarget).parents(".deleteSegmentDialog").addClass("al-hidden")
    }
});
$(function() {
    var e = AL._tenantHome + "/audiences/folder";
    var h = "/audiencelibrary/" + AL._tenant + "/audiences/folder";
    var b = $(".waitContainer");
    var l = "data-lazy-load";
    var c = "data-load-type";
    var f = {type: "dynamic",datapagesize: 1,relatedElement: undefined,loadData: j};
    $(document).on("click", ".rule-container .select button", a);
    $(document).on("click", ".rule-container .al-select button", a);
    $(document).click(g);
    $(document).on("click", ".mac-segments .coral-Select-button", function(n) {
        m(n)
    });
    function m(r) {
        r.stopPropagation();
        var n = $(r.target).closest(".mac-segments"), q = $(r.target).closest(".mac-segments").find(".coral-SelectList"), o = $(r.target).closest(".mac-segments").find(".coral-Select-button");
        f.relatedElement = o;
        q.selectList(f);
        var p = q.data("selectList");
        p.toggleVisibility()
    }
    function g() {
        $(".select.lazy-load").data("open", false)
    }
    function i(n) {
        n.attr(l, "true");
        n.find("button").removeClass("active");
        k()
    }
    function d(o, r, q) {
        if (!q.response || !q.response.items || !q.response.items.length || (q.response.items.length == 0)) {
            i(r);
            return
        }
        var p = r.find("select");
        r.removeData("select").find("ul").remove();
        if (p.length == 0) {
            p = $("<select/>").appendTo(r)
        }
        for (var n = 0;
             n < q.response.items.length;
             n++) {
            var s = $("<option/>").attr({"data-id": q.response.items[n].itemId,"data-name": q.response.items[n].itemName}).html(q.response.items[n].itemName);
            if (q.response.items[n].templatePathUrl) {
                s.attr(" data-templatePath", q.response.items[n].templatePathUrl)
            }
            p.append(s)
        }
        r.select();
        if (r.data("open") == true) {
            r.find("button").trigger("click")
        } else {
            r.find("button").removeClass("active")
        }
    }
    function a(n) {
        var s = $(this), p = s.parents(".rule-container"), q = s.closest(".al-select"), o, r = {};
        dataToBeSent = {};
        if (q.attr(l) != "true" || !(o = q.attr(c))) {
            return
        }
        n.stopPropagation();
        g();
        q.data("open", true);
        b.removeClass("al-hidden");
        q.attr(l, "false");
        r = AL.buildRuleObject(p);
        r[c] = o;
        dataToBeSent.requestData = JSON.stringify(r);
        dataToBeSent.action = "fetch_lazy_load_data";
        $.ajax({url: e,method: "GET",data: dataToBeSent,contentType: "application/json",dataType: "json"}).done(function(t) {
            b.addClass("al-hidden");
            d(o, q, t)
        }).fail(function(t) {
            i(q)
        })
    }
    function k(n) {
        $("#alert-box").show().find(".message").html(Granite.I18n.get("Logged in user does not have appropriate permissions to view audiences. Please contact System Administrator to get permissions.", null, "AL: "))
    }
    function j(p, o) {
        var s = this;
        var r = false;
        var n = $("#pageInfo").attr("data-sid");
        var q = $.get(h + ".list.html", {page: p,sid: n}, null, "html");
        q.done(function(t) {
            $selectElement = s.$element.parent();
            if (p == 0) {
            }
            $selectElement.find("ul").append(t);
            s._makeAccessible();
            if ($(t).length == 0) {
                r = true
            }
            q.always(function() {
                s._loadingComplete = r
            })
        }).fail(function(t) {
            if (arguments[2] && arguments[2] !== "abort") {
                k(t)
            }
        });
        return q
    }
});
$(function() {
    AL = AL || {};
    var a = {SOURCE: {ANALYTICS: "analytics",MARKETING_CLOUD: "mac"},ANALYTICS: {ATTRIBUTE_TYPE: {DIMENSION: "dimension",EVENTS: "events"}}};
    AL.buildRuleObject = function(e, c) {
        var d = e.find(".attributeSource").find(":selected"), b = d.attr("data-name");
        if (c && !b) {
            validationResults.push({status: "error",el: e,message: Granite.I18n.get("Please select Attribute Source", null, "AL: ")})
        }
        if (b == a.SOURCE.ANALYTICS) {
            return this.buildRuleObjectForAnalytics(e, c)
        }
        if (b == a.SOURCE.MARKETING_CLOUD) {
            return this.buildRuleObjectForMAC(e, c)
        }
    };
    AL.buildRuleObjectForAnalytics = function(j, d) {
        var b = j.find(".mac-segments").find(":selected"), h = j.attr("data-rule"), c = j.attr("data-size") || "", e = b.attr("data-name") || "", f = b.attr("data-description") || "", k = b.attr("data-sid") || "", i = {}, g = j.attr("data-type") || "{}";
        if (d && !e) {
            validationResults.push({status: "error",el: j,message: Granite.I18n.get("Please select an audience", null, "AL: ")})
        }
        i.source = a.SOURCE.MARKETING_CLOUD;
        i.attribute = {name: e,description: f};
        i.rule = h;
        i.sid = k;
        i.segmentSize = c;
        i.sizeDataType = g;
        return i
    };
    AL.buildRuleObjectForAnalytics = function(r, k) {
        var m = r.find(".reportSuites").find(":selected"), p = r.attr("data-rule"), d = r.attr("data-size"), e = m.attr("data-name") || "", h = r.find(".attributeTypes").find(":selected"), g = h.attr("data-name") || "", o = r.attr("data-type") || "{}", l, b, i, n, c, j, f, q = {};
        if (g == a.ANALYTICS.ATTRIBUTE_TYPE.DIMENSION) {
            l = r.find(".chooseDimension");
            b = l.find(".keylist").find(":selected");
            i = b.attr("data-id") || "";
            n = l.find(".operatorlist").find(":selected");
            c = n.attr("data-name") || "";
            j = l.find(".valuelist").find(":selected");
            if (j.length > 0) {
                f = j.attr("data-name") || ""
            } else {
                f = l.find(".evartext").val()
            }
        }
        if (g == a.ANALYTICS.ATTRIBUTE_TYPE.EVENTS) {
            l = r.find(".chooseEvent");
            j = l.find(".eventList").find(":selected");
            f = j.attr("data-name") || "";
            i = j.attr("data-id") || ""
        }
        if (k) {
            if (!e) {
                validationResults.push({status: "error",el: r,message: Granite.I18n.get("Please select Report Suite", null, "AL: ")})
            }
            if (!g) {
                validationResults.push({status: "error",el: r,message: Granite.I18n.get("Please select Attribute Type", null, "AL: ")})
            }
            if (g == "dimension" && !i) {
                validationResults.push({status: "error",el: r,message: Granite.I18n.get("Please select Attribute Key", null, "AL: ")})
            }
            if (g == "dimension" && !c) {
                validationResults.push({status: "error",el: r,message: Granite.I18n.get("Please select operator", null, "AL: ")})
            }
            if (g == "dimension" && !f) {
                validationResults.push({status: "error",el: r,message: Granite.I18n.get("Please select Attribute Value", null, "AL: ")})
            }
            if (g == "events" && !f) {
                validationResults.push({status: "error",el: r,message: Granite.I18n.get("Please select an event", null, "AL: ")})
            }
            if ((c == "Less than" || c == "Greater Than") && isNaN(parseInt(f))) {
                validationResults.push({status: "error",el: r,type: "InvalidOperatorChosen",message: Granite.I18n.get("Please select an integer type value", null, "AL: ")})
            }
        }
        q.source = a.SOURCE.ANALYTICS;
        q.reportSuite = {};
        q.reportSuite["id"] = m.attr("data-id") || "";
        q.reportSuite["name"] = e;
        if (g == a.ANALYTICS.ATTRIBUTE_TYPE.DIMENSION) {
            q.attributeType = a.ANALYTICS.ATTRIBUTE_TYPE.DIMENSION;
            q.attribute = {};
            q.attribute["key"] = {id: i,name: b.val() || ""};
            q.attribute["operator"] = c;
            q.attribute["value"] = {name: f}
        }
        if (g == a.ANALYTICS.ATTRIBUTE_TYPE.EVENTS) {
            q.attributeType = a.ANALYTICS.ATTRIBUTE_TYPE.EVENTS;
            q.attribute = {};
            q.attribute["key"] = {name: "event"};
            q.attribute["operator"] = "equals";
            q.attribute["value"] = {name: f,id: i}
        }
        q.rule = p;
        q.segmentSize = d;
        q.sizeDataType = o;
        return q
    }
});
$(function() {
    $(document).on("mouseover", ".diagram svg", a);
    $(document).on("mouseover", "#vennDiagram g circle", b);
    $(document).on("mouseout", "#vennDiagram g circle", d);
    $(document).on("click", ".diagram-container .al-vennCalendar", function(f) {
        var e = $("#bottomPopover"), g = e.find("> div.coral-Popover-content");
        g.height(g.find("ul.coral-SelectList").height())
    });
    var c = -1;
    function b(f) {
        var g = $(".circletooltip");
        g.removeClass("al-hidden");
        g.html($(f.target).attr("tooltip"));
        var e = g.width();
        f.stopPropagation();
        if (f.clientX - c >= 0) {
            g.removeClass("arrow-left");
            g.addClass("arrow-right");
            g.css({left: (f.clientX - e - 30) + "px",top: (f.clientY - 40) + "px",position: "absolute"})
        } else {
            g.addClass("arrow-left");
            g.removeClass("arrow-right");
            g.css({left: (f.clientX) + "px",top: (f.clientY - 40) + "px",position: "absolute"})
        }
    }
    function d(e) {
        var f = $(".circletooltip");
        f.addClass("al-hidden");
        c = e.clientX
    }
    function a(e) {
        c = e.clientX
    }
});
