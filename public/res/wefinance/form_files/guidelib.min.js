(function(c,j){Function.prototype.bind=Function.prototype.bind||function(e){var n=this;
return function(){n.call(e,arguments)
}
};
var m=function(){var n=[];
var o=[];
var e=[];
this.errors=false;
this.data;
this.addMessage=function(q,r,p){this.errors=true;
n.push(r);
e.push(p);
o.push(q)
};
this.getNextMessage=function(){if(o.length==0){return null
}return{code:o.pop(),somExpression:e.pop(),message:n.pop()}
}
};
var f="1.0";
var b=function(){this._$target=null;
this._guide=null;
this._guideView=null;
this._version=f;
this._guideInitHandler={};
c(window).bind("guideModelInitialized",this._guideModelInitialized.bind(this));
c(window).bind("guideInitialized",this._guideInitialized.bind(this));
c(window).bind("guideInitializationError",this._guideError);
this._guideDoc=window.document;
this.userConfig={}
};
var d=false;
var i="/tmp/fd/af";
var h=function(n){var e=true;
c.ajax({url:guideBridge._getGuidePathUrl(".af.tempstorageprovider.jsp"),type:"POST",async:false,data:{uuidPath:i+"/"+n},error:function(o){guideBridge._guide.logger().log(o);
e=false
}});
return e
};
var k=function(e){if(typeof(console)=="undefined"){return
}var n=e.getNextMessage();
while(n){this._guide.logger().log(n.message);
n=e.getNextMessage()
}};
var a=function(n,o){if(n&&n.length>0){for(var e=0;
e<n.length;
e++){o.addMessage(0,n[e],"")
}return false
}return true
};
c.extend(b.prototype,{GUIDE_PATH:"guidePath",GUIDE_NAME:"guideName",GUIDE_DESC:"guideDesc",GUIDE_TYPE:"guideType",isConnected:function(){if(this._guide){return true
}return false
},connect:function(n,e){e=e||guideBridge;
if(this.isConnected()){n.call(e)
}else{this._guideInitHandler.handler=this._guideInitHandler.handler||[];
this._guideInitHandler.handler.push(n);
this._guideInitHandler.context=this._guideInitHandler.context||[];
this._guideInitHandler.context.push(e)
}},_guideModelInitialized:function(n){this._guide=n.guide
},_guideInitialized:function(o){if(this._guideInitHandler.handler){for(var n=0;
n<this._guideInitHandler.handler.length;
n++){this._guideInitHandler.handler[n].call(this._guideInitHandler.context[n])
}}window.guideBridge.trigger("bridgeInitializeComplete",guidelib.event.GuideModelEvent.createEvent("bridgeInitializeComplete",guideBridge))
},_setGuideView:function(e){this._guideView=e
},_guideError:function(n){this._guide.logger().debug("AF",n)
},_checkGuide:function(e){if(!this._guide){e.addMessage(1,"Guide Dom not Initialized","");
return false
}return true
},getBridgeVersion:function(){return this._version
},registerConfig:function(n,e){var o=new m();
o.data=this.userConfig[n];
this.userConfig[n]=e;
o.completed=true;
return o
},customContextProperty:function(p,o){var e=guidelib.runtime.guideContext.customPropertyMap||{};
if(j.isUndefined(o)){return e[p]
}else{var n=e[p];
e[p]=o;
guidelib.runtime.guideContext.customPropertyMap=e;
return n
}},getNavigablePanel:function(e){return this._guideView.getSomOnNavigableAncestor(e)
},setProperty:function(o,n,e){if(!n){return
}if(!j.isArray(o)||!j.isArray(e)){return
}if(o.length!==e.length){return
}var p=this;
j.each(o,function(r,q){var s=p.resolveNode(r);
if(s){s[n]=e[q]
}else{p._guide.logger().log("som not valid:"+r)
}});
if(!this._guide._currentContext){this._guide.runPendingExpressions()
}},getDataXML:function(e){e=e||{};
var n=new m();
if(!e.guideState&&!this._checkGuide(n)){e.error.call(e.context,n);
return
}this._submitInternal({success:function(p){var o=p||{};
n.completed=true;
if(e.boundData){n.data=o.xfaValue||o.xsdValue
}else{n.data=o.dataXml
}if(j.isFunction(e.success)){e.success.call(e.context,n)
}},error:function(r,o,p){var q="Error in getDataXML";
n.completed=false;
n.addMessage(2,q,"");
if(j.isFunction(e.error)){e.error.call(e.context,n)
}},guideState:e.guideState,fileUploadPath:e.fileUploadPath})
},getElementProperty:function(n){var q=n.somExpressions;
var e=n.propertyName;
var r=new m();
if(!this._checkGuide(r)){return r
}r.data=[];
for(var p=0;
p<q.length;
p++){var o=this.resolveNode(q[p]);
if(o==null){r.addMessage(0,"No element "+q[p]+" exists",q[p]);
r.data.push(null)
}else{r.completed=true;
r.data.push(o[e])
}}return r
},_getGuideDomElement:function(e,n){if(this._guideView){return this._guideView._getGuideDomElement(e,n)
}else{return null
}},getTempPath:function(){return"/tmp/fd/af/"+this._getUUID()
},getFileAttachmentsInfo:function(n){var e=[],p;
this._getFileAttachmentsList(e);
function o(q){p=[];
j.each(this.attachments,function(r){p.push({name:r.split("/")[1],path:this.fileUrl+"/"+r})
},this);
if(this.options.success){this.options.success.call(this.options.context,p)
}}this._getGuideAttachments(e,this.getTempPath(),o,n)
},_getGuideAttachments:function(o,r,t,w){var e=[],p=[],u=null,n=0,q=false,v=this._getContextRoot();
if(v){if(r.indexOf(v)===0){r=r.substring(v.length)
}}if(o.length>0){j.each(o,function(A,z){var B=0;
var C=A.fileAttachment.value;
if(C){var x=C.split("\n");
var y=c.extend(true,[],A.fileList);
j.each(y,function(F,E){var D=x[E],G=null;
if(D!=null&&F!=null){G=A.name+"/"+D;
if(!j.isString(F)){if(c(F).val().length>0){c(F).attr("name",G);
p[n]=G;
e[n++]=c(F)
}}else{p[n]=F;
e[n++]=null
}}},this)
}},this);
if(e.length>0){var s=j.indexOf(e,j.find(e,function(x){return x!==null
}));
if(s!==-1){u=e[s].adobeFileUploader("uploadFile",{fileName:p,fileDom:e,fileUploadPath:r,multiple:true});
if(v){if(u.indexOf(v)===0){u=u.substring(v.length)
}}e[s].one("adobeFileUploader.multipleFileUploaded",c.proxy(t,{attachments:p,fileUrl:u,fileAttachmentsList:o,options:w}));
q=true
}}}if(!q){t.apply({attachments:p,fileUrl:u,fileAttachmentsList:o,options:w})
}},visit:function(n,e){this._guide.visit(n,e||window)
},_getFileAttachmentsList:function(e){if(j.isUndefined(e)){e=[]
}this.visit(function(n){if(n.className==="guideFileUpload"){e.push(n)
}});
return e
},getGuideState:function(v){var p=new m();
if(!this._checkGuide(p)){return p
}var n=null;
if(this._isXfaGuide()&&this._isValidXFAGuide()){var q=window.formBridge.getFormState();
if(q.errors){console.error("Error in getting Xfa State:"+JSON.stringify(q.getNextMessage()));
alert(guidelib.util.getLocalizedMessage("AF",guidelib.i18n.LogMessages["AEM-AF-901-001"]))
}n=q.data
}var o=[];
this._getFileAttachmentsList(o);
this.customContextProperty("lastFocusItem",this._guideView.getSomOnNavigableAncestor(this._guideView._previousFocusItemSom));
var r=this._guide.jsonModel,t=JSON.stringify(r);
var e={guideDom:r,guideContext:guidelib.runtime.guideContext};
p.data={};
p.data.guideState=e;
if(n){p.data.guideState.xfaState=n
}var s=true;
if(v.fileUploadPath){this._getGuideAttachments(o,v.fileUploadPath,u)
}else{if(v.success){v.success.call(v.context,p)
}}function u(){var C=[];
s=false;
j.each(this.attachments,function(E){if(j.isString(E)&&E.match(/\//g).length>1){C.push(E)
}else{C.push(this.fileUrl+"/"+E)
}},this);
var y=0;
for(var z=0;
z<C.length;
){var x=this.fileAttachmentsList[y++]["fileAttachment"],B=[];
if(x.parent.fileList){for(var w=0;
w<x.parent.fileList.length;
w++){var A=(j.isObject(x.parent.fileList[w])&&x.parent.fileList[w].val().length>0),D=(j.isString(x.parent.fileList[w])&&x.parent.fileList[w].length>0);
if(A||D){B.push(C[z++])
}}x.value=B.join("\n")
}}if(v.success){v.success.call(v.context,p)
}}},validate:function(p,o){var n=null;
if(o){n=this.resolveNode(o)
}else{n=this._guide
}var e=false;
if(!p){p=[]
}e=n.validate(p);
this._guide._triggerOnBridge("validationComplete",this._guide,e,"",p);
if(!e){this.setFocus(p[0]["som"])
}return e
},restoreGuideState:function(e){if(!this._guide){this.storage={};
this.storage.guideState=e.guideState;
this.storage.error=e.error;
this.storage.success=e.success;
this.storage.context=e.context
}else{this._playGuideJson(e)
}},getGuideContext:function(){var e=new m();
e.data=jQuery.extend(true,{},guidelib.runtime.guideContext);
return e
},_getContextRoot:function(){return this.userConfig.contextPath
},_getUrl:function(n){var o=this.userConfig.baseUrl,e=this.userConfig.contextPath;
if(o){return o+n
}else{if(e&&e!=="/"&&n.indexOf(e)!==0&&n.indexOf("/")===0){return e+n
}}return n
},_getGuidePathUrl:function(e){var n=this.getGuidePath()+(e||"");
return this._getUrl(n)
},getGuidePath:function(){var e=this.getGuideContext().data;
if(e.hasOwnProperty("guidePath")){return e.guidePath
}return null
},resolveNode:function(e){return this._guide.resolveNode(e)
},_resolveId:function(n){var e=this._guide._modelTemplateCacheStore.getModel(n);
return e
},reset:function(){if(window.xfalib&&window.xfalib.runtime&&window.xfalib.runtime.xfa){var e=window.xfalib.runtime.xfa;
e.host.resetData()
}this._guide.resetData()
},_getPreviousFocus:function(){return this._guideView._previousFocusItemSom
},getFocus:function(){return this._guideView.currentFocusItemSom
},setFocus:function(e,p,n){var o=this._guideView.setFocus(e,p,n);
if(!this._guide._currentContext){this._guide.runPendingExpressions()
}return o
},_doInternalSubmit:function(e){e=e||{};
var o=e.guideState,n=this.getMultipartData({guideState:JSON.stringify(o.data),_charset_:"UTF-8"});
c.ajax({url:this._getGuidePathUrl(".af.internalsubmit.jsp"),type:"POST",async:false,contentType:"multipart/form-data; charset=UTF-8; boundary="+n[0],data:n[1],success:e.success,error:e.error})
},_submitInternal:function(n){var e=this;
if(!n.guideState){this.getGuideState({diff:"diff",fileUploadPath:n.fileUploadPath,success:function(o){e._doInternalSubmit({guideState:o,success:n.success,error:n.error})
},error:n.error})
}else{this._doInternalSubmit({guideState:n.guideState,success:n.success,error:n.error})
}},getMultipartData:function(q){var e=this.randomString();
var o="--"+e;
var n="";
var r="\r\n";
for(var p in q){if(q.hasOwnProperty(p)){n+=o+r+'Content-Disposition: form-data; name="'+p+'"'+r+r+q[p]+r
}}n+=o+"--"+r;
return[e,n]
},randomString:function(){var p="0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
var q=8;
var o="";
for(var n=0;
n<q;
n++){var e=Math.floor(Math.random()*p.length);
o+=p.substring(e,e+1)
}return o
},doAjaxSubmit:function(p,n,e){var o=e.async===false?false:true;
var q=this.getMultipartData(n);
c.ajax({url:p,type:"POST",traditional:true,async:o,contentType:"multipart/form-data; charset=UTF-8; boundary="+q[0],data:q[1],success:function(r){var s=new m();
s.data=r;
s.completed=true;
if(e.success&&j.isFunction(e.success)){e.success.call(e.context,s)
}},error:function(r){var s=new m();
s.data=r;
s.completed=false;
s.addMessage(2,"Error in Async Submit","");
if(e.error&&j.isFunction(e.error)){e.error.call(e.context,s)
}}})
},handleUpload:function(){self=this.self;
this.submitData._guideAttachments=this.attachments.toString();
j.each(this.attachments,function(e){this.submitData["_guideFileAttachment."+e]=this.submitData.fileUrl+"/"+e
},this);
delete this.submitData.fileUrl;
self.doAjaxSubmit(this.actionUrl,this.submitData,this.options)
},_handleSubmitError:function(e){switch(e.status){case 502:alert(guidelib.util.GuideUtil.getLocalizedMessage("AF",guidelib.i18n.LogMessages["AEM-AF-901-003"]));
break;
default:alert(guidelib.util.GuideUtil.getLocalizedMessage("AF",guidelib.i18n.LogMessages["AEM-AF-901-004"]));
break
}},submit:function(o){var n=this;
function e(x){var E=false;
if(o){E=o.success?true:false
}var y={};
var D=window.guideBridge.getGuidePath();
var t=window.guideBridge._getGuidePathUrl(".af.submit.jsp");
y.guideContainerPath=D;
y._asyncSubmit=E;
y._charset_="UTF-8";
var A=x,B,q,u,v=[],s=0;
if(A.hasOwnProperty("guideValue")){B=A.guideValue
}if(A.hasOwnProperty("dataXml")){q=A.dataXml
}if(A.hasOwnProperty("fileAttachmentsList")){u=A.fileAttachmentsList
}for(var C in B){if(B.hasOwnProperty(C)){y[C]=B[C]
}}if(q){y["jcr:data"]=q;
y["jcr:data@TypeHint"]="Binary"
}var r=c("#actionField");
var w=r.find("input").each(function(){y[c(this).attr("name")]=c(this).val();
if(c(this).attr("name")=="_guideValueMap"&&c(this).val()=="yes"){var G={};
n._guide._collectValues(G);
y._guideValuesMap=JSON.stringify(G)
}});
var p=[];
if(u.length>0){j.each(u,function(L,H){var I=0;
var J=n._resolveId(L);
var K=J.fileAttachment.value;
if(K){var G=K.split("\n");
j.each(G,function(M,O){var N=J.name+"/"+M.substring(M.lastIndexOf("/")+1);
v[s++]=N;
y["_guideFileAttachment."+N]=M
},this)
}},this);
y._guideAttachments=v
}if(E&&E===true){n.doAjaxSubmit(t,y,o)
}else{var F=c("<form method='post' enctype='multipart/form-data'/>");
F.attr("action",t);
for(var z in y){if(y.hasOwnProperty(z)){c("<input>").attr("type","hidden").attr("name",z).val(y[z]).appendTo(F)
}}F.appendTo(c("body"));
F.submit()
}}if(this.validate()){n._guide._triggerOnBridge("submitStart","","","","");
this._submitInternal({success:e,error:c.proxy(this._handleSubmitError,this),fileUploadPath:this.getTempPath()})
}else{return
}},_playGuideJson:function(e){if(this._isXfaGuide()&&e.guideState.xfaState&&e.guideState.xfaState.xfaDom){var n=this;
window.formBridge.restoreFormState({formState:e.guideState.xfaState,context:this,error:e.error||k,success:function(){n._playNonXfaJson(e)
}})
}else{this._playNonXfaJson(e)
}},_playNonXfaJson:function(e){if(e.guideState.guideDom){this._guide.playJson(e.guideState.guideDom)
}if(e.guideState.unboundDataMap&&e.guideState.unboundDataMap.data){this.visit(function(n){if(n instanceof guidelib.model.Field&&!n.getAttribute("bindRef")&&e.guideState.unboundDataMap.data[n.name]){if(!j.isEmpty(e.guideState.unboundDataMap.data[n.name])){n._setGuideValue(e.guideState.unboundDataMap.data[n.name])
}else{n._setGuideValue(null)
}if(n.className==="guideRadioButton"){n.prevOnItem=n.getSelectedIndex(n.jsonModel._value)
}}})
}this._guide.prepare();
if(e.success){e.success.call(this)
}},_postExternalMessage:function(e){if(this.userConfig.postExternalMessageConfig&&j.isFunction(this.userConfig.postExternalMessageConfig["postExternalHandler"])){var n=this.userConfig.postExternalMessageConfig["postExternalHandler"];
n(e)
}},_isXfaGuide:function(){if(this._guide.xdpRef){return true
}else{return false
}},_isValidXFAGuide:function(){return !j.isUndefined(guidelib.runtime.guideContext.xdpRef)
},_isEditDesignMode:function(){if(window.CQ&&window.CQ.WCM&&(window.CQ.WCM.isEditMode()||window.CQ.WCM.isDesignMode())){return true
}else{return false
}},_getUUID:function(){var n=c("div.guideContainerWrapperNode").data("tmproot"),e=true;
if(!d){d=true;
e=h(n)
}if(e){return n
}else{return null
}},on:function(e,o,n){this._$target.on(e,o,n)
},off:function(e,o,n){this._$target.off(e,o,n)
},trigger:function(e,n){this._$target.trigger(e,n)
}});
window.guideBridge=new b();
window.guideBridge._$target=c(window.guideBridge);
var l=document.createEvent("CustomEvent");
l.initCustomEvent("bridgeInitializeStart",true,true,{guideBridge:window.guideBridge});
window.dispatchEvent(l);
if(!window.guideBridge.userConfig.postExternalMessageConfig){if(window!==window.parent){try{window.parent.document.getElementById(window.name);
window.guideBridge.registerConfig("postExternalMessageConfig",{postExternalHandler:function(n){var e=document.createEvent("CustomEvent");
e.initCustomEvent(n.name,true,true,n.data);
window.parent.dispatchEvent(e)
}})
}catch(g){}}}window.guideBridge._postExternalMessage({name:"bridgeInitializeStart",data:{guideBridge:window.guideBridge}})
})(jQuery,_);
(function(e,c,a){var b=function(f,g){if(c.isUndefined(f)||f===null){return[]
}if(!c.isArray(f)){f=[f]
}return c.filter(f,function(h){return h instanceof a.model.GuidePanel&&h[g] instanceof a.model.GuideNumericBox
})
},d=function(f,g){return c.reduce(f,function(h,i){var j=parseFloat(i.getOrElse(i,g+".value",0));
if(isNaN(j)){j=0
}return h+j
},0)
};
a.runtime.af.sum=function(f,g){return d(b(f,g),g)
};
a.runtime.af.avg=function(g,i){var f=b(g,i),h=d(f,i);
if(f.length===0){return 0
}return h/f.length
};
a.runtime.af.max=function(g,h){var f=c.max(b(g,h),function(i){return i.getOrElse(i,h+".value",Number.NEGATIVE_INFINITY)
});
if(f instanceof a.model.GuidePanel){return f[h]
}return null
};
a.runtime.af.min=function(g,h){var f=c.min(b(g,h),function(i){return i.getOrElse(i,h+".value",Number.POSITIVE_INFINITY)
});
if(f instanceof a.model.GuidePanel){return f[h]
}return null
}
}(jQuery,_,guidelib));
(function(c,b,a){a.runtime.af.reduce=function(e,h,g,d,f){if(!b.isArray(e)){e=[e]
}return b.reduce(e,function(j,i){if(i instanceof a.model.GuidePanel&&!b.isUndefined(i[h])){if(b.isFunction(g)){return g.apply(f,[j,i,i[h]])
}}return j
},d)
};
a.runtime.af.filter=function(e,g,d,f){if(!b.isArray(e)){e=[e]
}return b.map(b.filter(e,function(h){if(h instanceof a.model.GuidePanel&&!b.isUndefined(h[g])){if(b.isFunction(d)){return d.apply(f,[h,h[g]])
}return false
}}),function(h){return h[g]
})
}
}(jQuery,_,guidelib));
(function(b,c,a){a.model.fireOnContainerDomElementReady=function(r){window.guideBridge._postExternalMessage({name:"_formdomstart"});
try{var i=c("div.guideContainerWrapperNode"),o=JSON.parse(r.guidejson||"null"),j=JSON.parse(r.guidecontext||"null"),p=JSON.parse(r.guidemergedjson||"null"),d=JSON.parse(r.xfajson||"null"),k=JSON.parse(r.xfarendercontext||"null"),q=false,n=window.AF_log_config===undefined?"0-a9":"1-"+window.AF_log_config,f;
xfalib.ut.XfaUtil.prototype.registerLocaleProperties(a.i18n);
if(d){window.formBridge.registerConfig("contextPath",window.guideBridge.userConfig.contextPath);
window.formBridge.registerConfig("LoggerConfig",{logConfigString:n,categoryAcronyms:{d:"AF"}});
xfalib.script.XfaModelRegistry.prototype.createModel(d);
new xfalib.acrobat.Acrobat()
}else{xfalib.ut.XfaUtil.prototype.logger=new xfalib.ut.Logger({logConfigString:n,categoryAcronyms:{d:"AF"}})
}f=a.model.GuideModelRegistry.prototype.createModel(o);
if(p&&p.guideState&&p.guideState.guidePrefillXml){j.guidePrefillXml=p.guideState.guidePrefillXml
}var h=f.getOrElse(p,"guideState.guideContext.customPropertyMap",null);
if(h){j.customPropertyMap=j.customPropertyMap||{};
b.extend(j.customPropertyMap,h)
}a.runtime.guideContext=j;
f.syncXFAProps();
if(d&&xfalib.runtime.xfa){xfalib.runtime.renderContext=k;
var g=f.getOrElse(p,"guideState.xfaState.xfaRenderContext",null);
if(g){xfalib.runtime.renderContext=g
}xfalib.runtime.xfa.form._initialize(true);
c(window).trigger("XfaInitialized")
}c(window).trigger({type:"guideModelInitialized",guide:f});
if(p){window.guideBridge.restoreGuideState(p)
}else{f.prepare()
}window.guideBridge._postExternalMessage({name:"_layoutstart"});
var m=new a.view.GuideContainerView({element:i,model:f});
window.guideBridge._setGuideView(m);
a.util.GuideUtil.initializeHelp();
window.guideBridge._postExternalMessage({name:"_layoutend"});
c(window).on("mousedown.guidebridge",function(){window.guideBridge.clickedOnWindow=true
});
c(window).load(function(){var e=window.guideBridge.customContextProperty("lastFocusItem");
if(e){window.guideBridge.setFocus(e)
}else{window.guideBridge.setFocus()
}c(window).trigger({type:"guideInitialized",guide:f})
})
}catch(l){if(l.stack){console.error(l.stack)
}}}
})(_,jQuery,window.guidelib);
(function(b,a){var c=a.event.GuideModelEvent=xfalib.ut.Class.extend({msClassName:"guideModelEvent"});
c.defineProps({prevText:{get:function(){return this.jsonModel.prevText
}},newText:{get:function(){return this.jsonModel.newText
}},name:{get:function(){return this.jsonModel.name
}},keyDown:{get:function(){return this.jsonModel.keyDown
}},modifier:{get:function(){return this.jsonModel.modifier
}},target:{get:function(){return this.jsonModel.target
}},shift:{get:function(){return this.jsonModel.shift
}},change:{get:function(){return this.jsonModel.change
},set:function(d){this.jsonModel.change=d
}},_property:{get:function(){return this.jsonModel._property
}}});
c.createEvent=function(d,i,h,e,f){var g={name:d,target:i,_property:h,prevText:e,newText:f};
return new c({jsonModel:g})
};
c.MODEL_REFRESH="guide.modelRefresh";
c.CHILD_CHANGED="guide.childChanged";
c.MODEL_CHANGED="guide.modelChanged";
c.VALUE_CHANGED="guide.valueChanged";
c.ERROR_CHANGED="guide.errorChanged";
c.VISIBLE_CHANGED="guide.visibleChanged";
c.ENABLED_CHANGED="guide.enabledChanged";
c.ITEMS_CHANGED="guide.itemsChanged";
c.OBJECT_DESTROYED="guide.objectDestroyed"
}(_,guidelib));
(function(b,a){a.model.mixin.AddDependencyMgmt={normalProperties:{_addDependant:function(e,c){var d=b.find(this.dependants,function(f){if(f.dependant==e){return true
}},this);
if(!d){d={dependant:e,events:[]};
this.dependants.push(d)
}if(d.events.indexOf(c)<0){d.events.push(c);
e.on(a.event.GuideModelEvent.OBJECT_DESTROYED,this._handleDependentDestroyed,this)
}},_notifyDependants:function(){b.each(this.dependants,function(c){this._guide().queueExpressions(c.dependant,c.events)
},this)
},_removeDependant:function(d){d.off(a.event.GuideModelEvent.OBJECT_DESTROYED,this._handleDependentDestroyed,this);
var c=b.find(this.dependants,function(e){if(e.dependant==d){return true
}},this);
this.dependants=this.dependants.splice(this.dependants.indexOf(c),1)
},_handleDependentDestroyed:function(c){this._removeDependant(c.target)
}}}
})(_,guidelib);
(function(b,a){a.model.mixin.AddNavigationContext={propertyDescriptors:{navigationContext:{get:function(){if(!this._navigationContext){this._navigationContext=new a.model.util.GuideNavigationContext({currentItem:null,parentPanel:this.panel})
}return this._navigationContext
}}}}
})(_,guidelib);
(function(d,a){var b={},c={visible:{xfaToGuide:function(e){return e==="visible"
},guideToXfa:function(e){return e===true?"visible":"hidden"
}},enabled:{xfaToGuide:function(e){return e==="open"
},guideToXfa:function(e){return e===true?"open":"readOnly"
}},assistPriority:{xfaToGuide:function(e){return{custom:"custom",toolTip:"shortDescription",caption:"label",name:"name"}[e]
},guideToXfa:function(e){return{custom:"custom",shortDescription:"toolTip",title:"caption",name:"name"}[e]
}},mandatory:{xfaToGuide:function(e){return e==="error"
},guideToXfa:function(e){return e===true?"error":"disabled"
}},multiLine:{xfaToGuide:function(e){return e==1
},guideToXfa:function(e){return e===true?1:0
}},items:{xfaToGuide:function(e){},guideToXfa:function(e){}},multiSelect:{xfaToGuide:function(e){return e==="multiSelect"
},guideToXfa:function(e){return e===true?"multiSelect":"userControl"
}},calcExp:{xfaToGuide:function(e){return e!==null&&e!==""?null:undefined
},guideToXfa:function(e){return e!==null&&e!==""?null:undefined
}},dataType:{xfaToGuide:function(e){return e
},guideToXfa:function(e){return undefined
}}};
c.validateExp=c.visibleExp=c.enabledExp=c.clickExp=c.calcExp;
a.model.GuideSchema=xfalib.ut.Class.extend({initialize:function(){this.addSchema("guideNode",[["name","string",null],["id","string",null],["jcr:title","string",null],["jcr:description","string",null],["css","string",""]]);
this.addSchema("scriptable",[["visibleExp","string",null],["enabledExp","string",null],["visible","boolean",true,"presence"],["enabled","boolean",true,"access"],["assistPriority","string",null,"assist.speak.priority"],["custom","string",null,"assist.speak.value"],["shortDescription","string",null,"assist.toolTip.value"],["longDescription","string",null]],"guideNode");
this.addSchema("guideInstanceManager",[],"guideNode");
this.addSchema("esign",[],"guideNode");
this.addSchema("verify",[],"guideNode");
this.addSchema("guideItemsContainer",[],"scriptable");
this.addSchema("guideImage",[],"scriptable");
this.addSchema("guideContainerNode",[],"guideItemsContainer");
this.addSchema("guidePanel",[],"guideItemsContainer");
this.addSchema("rootPanelNode",[],"guidePanel");
this.addSchema("guideToolbar",[],"guideItemsContainer");
this.addSchema("guideFileUpload",[["multiSelection","boolean",false],["buttonText","string",null],["fileSizeLimit","integer",2],["showComment","boolean",false]],"guideItemsContainer");
this.addSchema("guideField",[["jcr:title","string",null,"caption.value.oneOfChild.value"],["calcExp","string",null,"calculate.script.value","Guide"],["validateExp","string",null,"validate.script.value","Guide"],["_value","string",null,"rawValue"],["displayPictureClause","string",null,"format.picture.value"],["validatePictureClause","string",null,"validate.picture.value"],["mandatory","boolean",false,"validate.nullTest"],["mandatoryMessage","string",a.util.GuideUtil.getLocalizedMessage("",a.i18n.LogMessages["AEM-AF-901-005"]),"mandatoryMessage"],["validateExpMessage","string",a.util.GuideUtil.getLocalizedMessage("",a.i18n.LogMessages["AEM-AF-901-006"]),"validationMessage"],["validatePictureClauseMessage","string",a.util.GuideUtil.getLocalizedMessage("",a.i18n.LogMessages["AEM-AF-901-007"]),"formatMessage"],["validationState","boolean",false],["width","string",null],["height","string",null]],"scriptable");
this.addSchema("guideTextBox",[["multiLine","boolean",false,"ui.textEdit.multiLine"],["maxChars","integer",0,"value.text.maxChars"]],"guideField");
this.addSchema("guideNumericBox",[["dataType","string","decimal","value.oneOfChild.className"],["leadDigits","integer",-1,"value.decimal.leadDigits"],["fracDigits","integer",2,"value.decimal.fracDigits"]],"guideField");
this.addSchema("guidePasswordBox",[],"guideField");
this.addSchema("guideRadioButton",[],"guideField");
this.addSchema("guideCheckBox",[],"guideField");
this.addSchema("guideScribble",[],"guideField");
this.addSchema("guideDatePicker",[],"guideField");
this.addSchema("guideButton",[],"guideField");
this.addSchema("guideListFileAttachmentButton",[],"guideButton");
this.addSchema("guideTextDraw",[],"guideField");
this.addSchema("guideCompositeFieldItem",[],"guideField");
this.addSchema("guideDropDownList",[["title","string","DropDown"],["multiSelect","boolean",false,"ui.oneOfChild.open"],["optionsExp","string",null],["items","object",null,"items"]],"guideField");
this.addSchema("guideTermsAndConditions",[["showLink","boolean",false],["showAsPopUp","boolean",false],["clickStatus","string",null]],"guideField")
},addSchema:function(f,e,h){var g={};
if(typeof h==="object"){d.extend(g,h)
}else{if(typeof h==="string"&&b[h]){d.extend(g,b[h])
}}this.addAttributes(g,e);
b[f]=g
},addAttributes:function(f,e){d.each(e,function(g){f[g[0]]={type:g[1],"default":g[2],xfaProp:g[3],priority:g[4]}
})
},getAttributeProps:function(f,g){try{return b[f][g]||{}
}catch(h){this.logger().error("AF","schema has no element "+f)
}},getAttributes:function(e){return b[e]
},getTypedValue:function(e,f){if(f===null||f===undefined){return f
}if(e instanceof Array){return f
}switch(e){case"string":return f+"";
case"integer":return parseInt(f);
case"boolean":return f===true||f==="true"?true:false;
default:return f
}},getConvertor:function(e){return c[e]
}})
}(_,guidelib));
(function(c,b){var a={Guide:"XFA",XFA:"Guide"};
var d=b.model.GuideNode=xfalib.ut.EventClass.extend({msClassName:"guideNode",guideUtil:b.util.GuideUtil,initialize:function(){this.className=this.jsonModel.guideNodeClass||this.msClassName;
this.parent=null;
this._isItem=false;
this._index=0
},_postInitialize:function(){},_triggerOnBridge:function(f,i,h,e,g){if(window.guideBridge){window.guideBridge.trigger(f,b.event.GuideModelEvent.createEvent(f,i,h,e,g))
}},validate:function(e){},syncXFAProps:function(){if(this.bindNode){c.each(this._guide()._guideSchema.getAttributes(this.className),function(l,n){var g=l.xfaProp,h=(g||"").split("."),o=h.length>0?h[h.length-1]:undefined;
if(!o||["presence","access"].indexOf(o)>=0){return
}var m=h.splice(0,h.length-1),j=c.reduce(m,function(e,r){if(c.isObject(e)){return e[r]
}return undefined
},this.bindNode),f=this.getGuideProp(n,l),p=this._guide()._guideSchema.getConvertor(n),i=p?p.guideToXfa.apply(this,[f]):f,q;
try{if(j){q=j[o];
if(i!==undefined&&i!==q){j[o]=i
}}}catch(k){this.logger().error("setting "+g+"(guide "+n+") for "+this.bindNode.somExpression+" is not supported in xfa");
if(k.stack){this.logger().error(k.stack)
}}},this)
}},prepare:function(){},nakedChildReferences:function(e,f){return
},getNaked:function(e,f,g){var j=this.getAttribute("name"),i=f._private["_"+j+"_"],h=f._isOverriden&&!f._isOverriden["_"+j+"_"];
if((g&&g._nameArray[j]===1)||(e===this.index)){if(i===null||i===undefined||h){this._guide()._createGetterSetter(f,j,this);
if(h===true){f._isOverriden["_"+j+"_"]=true
}}}},_getNakedThis:function(){return this
},_xfa:function(){if(window.xfalib){return window.xfalib.runtime.xfa
}return null
},_guide:function(){if(window.guidelib.runtime.guide){return window.guidelib.runtime.guide
}return null
},playJson:function(e){},visit:function(f,e){f.apply(e,[this])
},_collectValues:function(e){},_destroy:function(){this.trigger(b.event.GuideModelEvent.OBJECT_DESTROYED,b.event.GuideModelEvent.createEvent(b.event.GuideModelEvent.OBJECT_DESTROYED,this,"destroy",null,this));
this._guide()._modelTemplateCacheStore.removeModel(this.id);
this.off();
var e="_"+this.getAttribute("name")+"_";
if(b.runtime.hasOwnProperty(e)&&typeof b.runtime[e]!="undefined"){if(b.runtime[e].somExpression==this.somExpression){b.runtime[e]=undefined
}}},_triggerEvent:function(f,h,e,g){this.trigger(f,b.event.GuideModelEvent.createEvent(f,this,h,e,g))
},setAttribute:function(g,f){if(this.jsonModel[f]!==g){var e=this.jsonModel[f];
this.jsonModel[f]=g;
this._triggerEvent(b.event.GuideModelEvent.MODEL_CHANGED,f,e,g)
}},_getSomExpression:function(){if(this.parent==null){return"guide[0]."+this._escapeQualifiedName()
}else{return this.parent.somExpression+"."+this._escapeQualifiedName()
}},_escapeQualifiedName:function(){var f=this.getAttribute("name");
var e=this._index;
var g=f+"["+e+"]";
return g.replace(/\./,"\\.")
},getGuideProp:function(f,e){var g=this.getOrElse(this.jsonModel,f,e["default"]);
if(g===undefined){return undefined
}return this._guide()._guideSchema.getTypedValue(e.type,g)
},getXFAProp:function(g,e){var h=e.xfaProp,f=this._guide()._guideSchema.getConvertor(g),i;
if(this.bindNode&&h!==undefined){i=this.bindNode.getOrElse(this.bindNode,h,undefined);
if(f){i=f.xfaToGuide.apply(this,[i])
}if(i!==undefined){return i
}}return undefined
},getAttribute:function(g){var e=this._guide()._guideSchema.getAttributeProps(this.className,g),f=e.priority||(e.xfaProp!==undefined?"XFA":"Guide"),h=this["get"+f+"Prop"].apply(this,[g,e]);
if(h===undefined){h=this["get"+a[f]+"Prop"].apply(this,[g,e])
}return h
},resetData:function(){}});
d.defineProps({name:{get:function(){return this.getAttribute("name")
}},templateId:{get:function(){return this.getAttribute("templateId")
}},id:{get:function(){return this.getAttribute("id")||this.templateId
}},somExpression:{get:function(){return this._getSomExpression()
}},title:{get:function(){return this.getAttribute("jcr:title")
}},nonLocalizedTitle:{get:function(){return this.getAttribute("nonLocalizedTitle")
}},panel:{get:function(){return this.parent.panel
}},viewVisited:{get:function(){return this.getAttribute("viewVisited")
},set:function(e){this.setAttribute(e,"viewVisited")
}},index:{get:function(){return this._index
}},visible:{get:function(){return true
},set:function(e){}},enabled:{get:function(){return true
},set:function(e){}},enableLayoutOptimization:{get:function(){return false
}}})
}(_,guidelib));
(function(d,c,a){var e="with(this) {\n\t with(guidelib.runtime) {\n\t\t var _guide_result = this[${affectedProp}] = ${expression}; \n\t\t return _guide_result \n\t }\n};",b='with(this) {\n\t with(guidelib.runtime) {\n\t var result = eval("${expression}");\n\t\t return result; \n\t }\n}';
var f=a.model.Scriptable=a.model.GuideNode.extend({msClassName:"scriptable",initialize:function(){f._super.initialize.call(this);
this.className=this.jsonModel.guideNodeClass||this.msClassName;
this._compiledExpressions={};
this._compiledScripts={};
this.mActiveEvents=[];
this.dependants=[];
this._visible=true;
this._enabled=true;
this._collectExpressions()
},_postInitialize:function(){if(this._isXfaNode()){this.bindNode=this.options.bindNode||this._getBindNode();
if(this.bindNode){this.bindNode.on(c.script.XfaModelEvent.FORM_MODEL_CHANGED,this)
}}},_collectExpressions:function(){if(this.visibleExp){this._compiledExpressions.visibleExp=this._compileExpression(this.visibleExp,"visible")
}if(this.enabledExp){this._compiledExpressions.enabledExp=this._compileExpression(this.enabledExp,"enabled")
}},_compileExpression:function(j,g){if(j){try{var i=g?e.replace(/\${affectedProp}/g,'"'+g+'"').replace(/\${expression}/g,j):b.replace(/\${expression}/g,j.replace(/\\/g,"\\\\").replace(/"/g,'\\"'));
return new Function(i)
}catch(h){this.logger().error("AF","Error in compiling expression:"+j)
}}return null
},_isXfaNode:function(){if(this._xfa()&&this.getOrElse(this,"jsonModel.bindRef","").indexOf("xfa[0].")===0){return true
}return false
},_xfa:function(){return this.getOrElse(window,"xfalib.runtime.xfa",null)
},prepare:function(){f._super.prepare.apply(this);
var g=d.keys(this._compiledExpressions);
this._guide().queueExpressions(this,g)
},handleEvent:function(g){if(g instanceof c.script.XfaModelEvent){switch(g.name){case c.script.XfaModelEvent.FORM_MODEL_CHANGED:this._handleXfaModelChanged(g);
break;
default:}}else{if(g instanceof a.event.GuideModelEvent){this.handleGuideEvent(g)
}}},handleGuideEvent:function(g){},executeExpression:function(i,l){if(this._isXfaNode()&&this.bindNode instanceof c.script.EventContainerNode){if(a.util.GuideUtil.xfaExprMap[i]!==null){this.bindNode.execEvent(a.util.GuideUtil.xfaExprMap[i]||i)
}}if(d.isUndefined(this._compiledExpressions[i])&&d.isUndefined(this._compiledScripts[i])){if(!this._guide()._currentContext){this._guide().runPendingExpressions()
}else{this.logger().log("AF","executeExpression called withing from another executeExpression. Should NEVER happen ")
}return true
}if(this.mActiveEvents[i]){return
}this.mActiveEvents[i]=true;
var k=this._compiledExpressions[i]?true:false;
this._guide()._currentContext={contextNode:this,expression:i,managedExp:k};
var j=this,g=this.index;
a.runtime._isOverriden={};
while(j){j.nakedChildReferences(g,a.runtime);
g=j.index;
j=j.parent
}var h=this._expressionHandler(i);
this.mActiveEvents[i]=false;
this._guide()._currentContext=null;
this._guide().runPendingExpressions();
return h
},_expressionHandler:function(g){var i,k;
if(this._compiledExpressions[g]){i=this._compiledExpressions[g];
try{k=i.apply(this)
}catch(j){this.logger().error("AF","Error in compiling expression:"+this.name+":"+g+":"+j.stack)
}}else{if(this._compiledScripts[g]){i=this._compiledScripts[g];
try{return i.apply(this)
}catch(h){this.logger().error("AF","Error in compiling expression:"+this.name+":"+g+":"+h.stack)
}}}return k
},_handleXfaModelChanged:function(g){if(g._property=="presence"){var h=!(g.newText!="visible");
this._triggerEvent(a.event.GuideModelEvent.MODEL_CHANGED,"visible",g.prevText,h)
}else{if(g._property=="access"){this.trigger(a.event.GuideModelEvent.MODEL_CHANGED,a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"enabled",g.prevText=="open",g.newText=="open"))
}}},_getScreenReaderText:function(h){var g,i=this._getAssistPriority();
if(i=="custom"){g=this._getCustomAssist(h)||this._getToolTip(h)||this._getCaption(h)||this._getName(h)
}else{if(i=="shortDescription"){g=this._getToolTip(h)||this._getCaption(h)||this._getName(h)
}else{if(i=="label"){g=this._getCaption(h)||this._getName(h)
}else{if(i=="name"){g=this._getName(h)
}}}}return g
},_getAssistPriority:function(){return this.getAttribute("assistPriority")||"custom"
},_getCustomAssist:function(){var g;
if(this.bindNode&&this.bindNode.assist&&this.bindNode.assist.speak&&this.bindNode.assist.speak.value){g=this.bindNode.assist.speak.value
}else{if(this.jsonModel.custom){g=this.jsonModel.custom
}}return g
},_getToolTip:function(){return this.shortDescription
},_getCaption:function(){return this.getAttribute("jcr:title")
},_getName:function(g){return this.getAttribute("name")
},_getBindNode:function(){var k=this.getAttribute("bindRef");
if(!k){return null
}var j=null;
var g=this.parent?this.parent._bindParent():null;
if(g){var i=g.getAttribute("bindRef");
if(k.substring(0,i.length)==i){var h=k.substring(i.length+1);
j=g.bindNode.resolveNode(h)
}}if(!j){j=this._xfa().resolveNode(k)
}return j
},_bindParent:function(){if(this.bindNode){return this
}else{if(this.parent){return this.parent._bindParent()
}}return null
}});
f.defineProps({shortDescription:{get:function(){return this.getAttribute("shortDescription")
}},longDescription:{get:function(){return this.getAttribute("longDescription")
}},visibleExp:{get:function(){return this.getAttribute("visibleExp")
}},enabledExp:{get:function(){return this.getAttribute("enabledExp")
}},visible:{get:function(){if(this.bindNode){return !(this.bindNode.presence!="visible")
}else{return this._visible
}},set:function(g){if(!this.bindNode){if(this._visible!==g){var h=this._visible;
this._visible=g;
this.trigger(a.event.GuideModelEvent.MODEL_CHANGED,a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"visible",h,this._visible));
this._triggerOnBridge("elementVisibleChanged",this,"visible",h,this._visible)
}}else{if(g==true){this.bindNode.presence="visible"
}else{this.bindNode.presence="hidden"
}}}},enabled:{get:function(){if(this.bindNode){return this.bindNode.access=="open"
}else{return this._enabled
}},set:function(i){if(!this.bindNode){if(this._enabled!==i){var g=this._enabled;
this._enabled=i;
this.trigger(a.event.GuideModelEvent.MODEL_CHANGED,a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"enabled",g,this._enabled));
this._triggerOnBridge("elementEnableChanged",this,"enablement",g,this._enabled)
}}else{var h=this._guide()._guideSchema.getConvertor("enabled");
if(h){this.bindNode.access=h.guideToXfa.apply(this,[i])
}}}}})
})(_,window.xfalib,guidelib);
(function(b,a){var c=a.model.Esign=a.model.GuideNode.extend({msClassName:"esign",initialize:function(){c._super.initialize.call(this);
this.validationStatus=true
},validate:function(e){var d=true;
if(FD.AFaddon.Signing!==undefined&&FD.AFaddon.Signing!==null){d=FD.AFaddon.Signing.isDocumentSigned(this.jsonModel.signingService);
if(!d){e.push({som:this.somExpression,errorText:"Signing not complete."})
}}this.validationStatus=d;
return d
}});
c.defineProps({forceElementFocusChange:{get:function(){return true
}}})
})(_,guidelib);
(function(b,a){var c=a.model.Verify=a.model.GuideNode.extend({msClassName:"verify",initialize:function(){c._super.initialize.call(this);
this.validationStatus=true
},validate:function(f){var e,d=true;
if(this.jsonModel.interactive!==undefined&&this.jsonModel.interactive==="true"){e=$("#verifiable_form").get(0).contentWindow.formBridge;
if(e!==undefined&&e!==null){d=e.validateForm();
if(!d){f.push({som:this.somExpression,errorText:"XFA validation errors."})
}this.validationStatus=d
}}return d
}});
c.defineProps({forceElementFocusChange:{get:function(){return true
}}})
})(_,guidelib);
(function(c,a){var b=a.model.Field=a.model.Scriptable.extend({msClassName:"field",initialize:function(){b._super.initialize.call(this);
this.jsonModel["{default}"]=this.getOrElse(this.jsonModel,"{default}",this.jsonModel._value);
this.isValid=true;
this.forceErrorShow=false
},_collectExpressions:function(){b._super._collectExpressions.apply(this);
if(this.calcExp){this._compiledExpressions.calcExp=this._compileExpression(this.calcExp,"value")
}if(this.validateExp){this._compiledScripts.validateExp=this._compileExpression(this.validateExp,null)
}this._compiledScripts.validateAllExp=this._compileExpression("this._runTests()",null)
},_handleXfaModelChanged:function(d){if(d._property==="rawValue"){this._triggerEvent(a.event.GuideModelEvent.VALUE_CHANGED,"value",d.prevText,d.newText)
}else{if(d._property=="ClearError"||d._property=="ValidationState"){this._guide().queueExpressions(this,["validateAllExp"])
}else{b._super._handleXfaModelChanged.call(this,d)
}}},validate:function(e){if(c.isUndefined(e)){e=[]
}var d=true;
this._runTests(true);
if(this._errorText){e.push({som:this.somExpression,errorText:this._errorText});
d=false
}return d
},_getTypedValue:function(d){if(this.checkIfNull(d)){return null
}return d+""
},_getFormattedValue:function(f){if(c.isUndefined(f)||f===null||f===""){return null
}var e=this.jsonModel.displayPictureClause;
if(e){try{return xfalib.ut.PictureFmt.format(f+"",e,null,true)
}catch(d){}}return f
},_getValue:function(){if(this.bindNode){return this.bindNode.rawValue
}return this._getTypedValue(this.jsonModel._value)
},_triggerDisplayFormatChange:function(){var d=this._getValue();
this._triggerEvent(a.event.GuideModelEvent.VALUE_CHANGED,"value",d,this._getFormattedValue(d))
},checkIfNull:function(d){return c.isUndefined(d)||d===null||d===""
},_setXFAValue:function(d){this.bindNode.rawValue=d
},_setGuideValue:function(d){this.jsonModel._value=d||""
},_runMandatoryTest:function(){var d=this._getValue(),e=this.checkIfNull(d);
return !e
},_runValidatePictureTest:function(){var g=this._getValue(),d=true,f;
if(!this.checkIfNull(g)&&this.validatePictureClause){try{g=xfalib.ut.PictureFmt.format(g+"",this.validatePictureClause,null,false)
}catch(e){this.logger().log("AF",e);
if(e.indexOf("Invalid picture clause")!==-1){g=undefined
}else{g=null
}}}if(c.isUndefined(g)){try{f=new RegExp(this.validatePictureClause);
if(f){d=f.test(g)
}}catch(e){this.logger().log("AF","Invalid Regular Expression"+e);
d=false
}}else{if(g===null){d=false
}}return d
},_runTests:function(g){var d=true,f=this._errorText,e=this.validationState;
if(this.bindNode){if(g){this.bindNode.execValidate()
}this._errorText=this.bindNode._errorText;
if(this._errorText){d=false
}}else{if(this.mandatory){d=this._runMandatoryTest();
if(!d){this._errorText=this.mandatoryMessage
}}if(d&&this.validatePictureClause&&!this.checkIfNull(this.value)){d=this._runValidatePictureTest();
if(!d){this._errorText=this.validatePictureClauseMessage
}}}if(d&&this.validateExp){d=this.executeExpression("validateExp");
if(!d){this._errorText=this.validateExpMessage
}}if(d){this._errorText="";
this.validationState=true
}else{this.validationState=false
}if((f!==this._errorText)||(e!==this.validationState)||g){if(g){this.forceErrorShow=true
}this._triggerEvent(a.event.GuideModelEvent.ERROR_CHANGED,"validationStatus",this.validationState,this._errorText)
}return this.validationState
},playJson:function(d){this.jsonModel._value=d._value
},_collectValues:function(d){d[this.name]=this.value
},resetData:function(){this.value=this.jsonModel["{default}"]
}});
b.defineProps({calcExp:{get:function(){return this.getAttribute("calcExp")
}},validateExp:{get:function(){return this.getAttribute("validateExp")
}},value:{get:function(){var d=this._guide()._currentContext;
if(d&&d.managedExp&&!(d.contextNode===this&&d.expression==="calcExp")){this._addDependant(d.contextNode,d.expression)
}return this._getValue()
},set:function(f){var e=this._getValue(),d=this._getTypedValue(f);
if(d!==undefined&&(d!==e)){if(this.bindNode){this._setXFAValue(d)
}else{if(this.jsonModel._value!==f){this._setGuideValue(d)
}}this._notifyDependants();
this._guide().queueExpressions(this,["validateAllExp"]);
this._triggerOnBridge("elementValueChanged",this,"value",e,d);
if(!this.bindNode){this._triggerDisplayFormatChange()
}}}},formattedValue:{get:function(){var d;
if(this.bindNode){d=this.bindNode.formattedValue
}else{d=this._getFormattedValue(this._getValue())
}return d
}},displayPictureClause:{get:function(){return this.getAttribute("displayPictureClause")
}},validatePictureClause:{get:function(){if(this.jsonModel.displayIsSameAsValidate){return this.displayPictureClause
}return this.getAttribute("validatePictureClause")
}},mandatory:{get:function(){return this.getAttribute("mandatory")
}},mandatoryMessage:{get:function(){return this.getAttribute("mandatoryMessage")
}},validateExpMessage:{get:function(){return this.getAttribute("validateExpMessage")
}},validatePictureClauseMessage:{get:function(){return this.getAttribute("validatePictureClauseMessage")
}},validationState:{get:function(){return this.isValid
},set:function(e){var d=this.isValid;
if(d!=e){this.isValid=e;
this._triggerOnBridge("elementValidationStatusChanged",this,"validationStatus",d,e)
}}},width:{get:function(){return this.getAttribute("width")
},set:function(d){this.jsonModel.width=d
}},height:{get:function(){return this.getAttribute("height")
},set:function(d){this.jsonModel.height=d
}},cssClassName:{get:function(){return this.getAttribute("css")
}}});
b.addMixins([a.model.mixin.AddDependencyMgmt])
}(_,guidelib));
(function(b,a){var c=a.model.GuideButton=a.model.Field.extend({msClassName:"guideButton",_collectExpressions:function(){c._super._collectExpressions.apply(this);
if(this.clickExp){this._compiledScripts.clickExp=this._compileExpression(this.clickExp,null)
}if(this.navigationChangeExp){this._compiledScripts.navigationChangeExp=this._compileExpression(this.navigationChangeExp,null)
}},_expressionHandler:function(d){if(d=="clickExp"){this._triggerOnBridge("elementButtonClicked",this,"click","","")
}return c._super._expressionHandler.call(this,d)
}});
c.defineProps({clickExp:{get:function(){return this.jsonModel.clickExp
}},navigationChangeExp:{get:function(){return this.jsonModel.navigationChangeExp
}},type:{get:function(){return this.getAttribute("type")
}}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideCheckBox=a.model.Field.extend({msClassName:"guideCheckBox",getOnOffValues:function(g){var f=this.jsonModel.options||[],e=[],d,h;
if(this.bindNode){d=this.bindNode.getSaveItem(0);
h=this.bindNode.getSaveItem(1)
}else{if(f.length==0){d="0"
}else{d=f[g].split("=")[0].trim()
}h="-100"
}e=[d,h];
return e
},_setXFAValue:function(d){if(d==""){this.bindNode.rawValue=this.bindNode.getSaveItem(1)
}else{this.bindNode.rawValue=d
}},_getCustomAssist:function(d){var f,e;
if(d==null){if(this.bindNode&&this.bindNode.assist&&this.bindNode.assist.speak&&this.bindNode.assist.speak.value){return this.bindNode.assist.speak.value
}return null
}if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item){e=this.bindNode.members.item(d);
if(e&&e.assist&&e.assist.speak&&e.assist.speak.value){f=e.assist.speak.value
}}else{if(this.jsonModel.custom){var g;
g=this.jsonModel.custom||[];
if(b.isString(g)&&d<=0){f=g
}else{if(!g.length==0){f=g[d]
}}}}return f
},_getToolTip:function(e){var d,f;
if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item){f=this.bindNode.members.item(e);
if(f&&f.assist&&f.assist.speak&&f.assist.speak.value){d=f.assist.toolTip.value
}}else{if(this.jsonModel.shortDescription){d=this.jsonModel.shortDescription
}}return d
},_getCaption:function(f){var g,d;
if(f==null){if(this.bindNode&&this.bindNode.caption&&this.bindNode.caption.value&&this.bindNode.caption.value.oneOfChild&&this.bindNode.caption.value.oneOfChild.value){return this.bindNode.caption.value.oneOfChild.value
}return null
}if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item){g=this.bindNode.members.item(f);
if(g.caption&&g.caption.value&&g.caption.value.oneOfChild&&g.caption.value.oneOfChild.value){d=g.caption.value.oneOfChild.value
}}else{if(this.jsonModel.options){var e;
e=this.jsonModel.options||[];
if(f<0){f=0
}if(!e.length==0){option=e[f];
d=option.split("=")[1]
}}}return d
},_getName:function(d){if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item&&this.bindNode.members.item(d)){return this.bindNode.members.item(d).name
}return null
},_getScreenReaderText:function(e){var d,f=this._getAssistPriority()||"caption";
if(this.bindNode){d=c._super._getScreenReaderText.apply(this,[e])
}else{if(f=="custom"){d=this._getCustomAssist(e)||this._getCaption(e)
}else{if(f=="caption"){d=this._getCaption(e)
}}}return d
}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideRadioButton=a.model.Field.extend({msClassName:"guideRadioButton",prevOnItem:null,initialize:function(){c._super.initialize.call(this)
},_postInitialize:function(){c._super._postInitialize.call(this);
this.prevOnItem=this.getSelectedIndex(this.value);
if(this.bindNode&&this.bindNode.members){for(var d=0;
d<this.bindNode.members.length;
d++){var e=this.bindNode.members.item(d);
e.on(xfalib.script.XfaModelEvent.FORM_MODEL_CHANGED,this)
}}},getItemIdentifier:function(d){if(this.bindNode){return this.bindNode.members.item(d).somExpression
}else{return d
}},playJson:function(d){c._super.playJson.call(this,d);
this.prevOnItem=this.getSelectedIndex(this.jsonModel._value)
},getOnOffValues:function(g){var f=this.jsonModel.options||[],e=[],d,i;
if(this.bindNode){var h=this.bindNode.members.item(g);
d=h.getSaveItem(0);
i=h.getSaveItem(1)?h.getSaveItem(1):null
}else{if(f.length==0){d="0"
}else{d=f[g].split("=")[0].trim()
}i=null
}e=[d,i];
return e
},_handleXfaModelChanged:function(d){if(d._property=="rawValue"){this.trigger(a.event.GuideModelEvent.VALUE_CHANGED,a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.VALUE_CHANGED,this,"value",d.target.somExpression,d.newText))
}else{c._super._handleXfaModelChanged.call(this,d)
}},getSelectedIndex:function(e){var d=null;
var f=b.find(this.jsonModel.options,function(j,h){var g=this.getOnOffValues(h);
d=h;
return(g[0]==e)
},this);
if(f){return d
}else{return null
}},_triggerDisplayFormatChange:function(){if(!this.bindNode){var d=this._getValue();
var e=this.getSelectedIndex(d);
if(this.prevOnItem!==null){this._triggerEvent(a.event.GuideModelEvent.VALUE_CHANGED,"value",this.prevOnItem,null)
}if(e!==null){this._triggerEvent(a.event.GuideModelEvent.VALUE_CHANGED,"value",e,this._getFormattedValue(d))
}this.prevOnItem=e
}},_getCustomAssist:function(d){var f,e;
if(d==null){if(this.bindNode&&this.bindNode.assist&&this.bindNode.assist.speak&&this.bindNode.assist.speak.value){return this.bindNode.assist.speak.value
}return null
}if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item){e=this.bindNode.members.item(d);
if(e&&e.assist&&e.assist.speak&&e.assist.speak.value){f=e.assist.speak.value
}}else{if(this.jsonModel.custom){var g;
g=this.jsonModel.custom||[];
if(b.isString(g)&&d<=0){f=g
}else{if(!g.length==0){f=g[d]
}}}}return f
},_getToolTip:function(e){var d,f;
if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item){f=this.bindNode.members.item(e);
if(f&&f.assist&&f.assist.speak&&f.assist.speak.value){d=f.assist.toolTip.value
}}else{if(this.jsonModel.shortDescription){d=this.jsonModel.shortDescription
}}return d
},_getCaption:function(f){var g,d;
if(f==null){if(this.bindNode&&this.bindNode.caption&&this.bindNode.caption.value&&this.bindNode.caption.value.oneOfChild&&this.bindNode.caption.value.oneOfChild.value){return this.bindNode.caption.value.oneOfChild.value
}return null
}if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item){g=this.bindNode.members.item(f);
if(g.caption&&g.caption.value&&g.caption.value.oneOfChild&&g.caption.value.oneOfChild.value){d=g.caption.value.oneOfChild.value
}}else{if(this.jsonModel.options){var e;
e=this.jsonModel.options||[];
if(f<0){f=0
}if(!e.length==0){option=e[f];
d=option.split("=")[1]
}}}return d
},_getName:function(d){if(this.bindNode&&this.bindNode.members&&this.bindNode.members.item&&this.bindNode.members.item(d)){return this.bindNode.members.item(d).name
}return null
},_getScreenReaderText:function(e){var d,f=this._getAssistPriority()||"caption";
if(this.bindNode){d=c._super._getScreenReaderText.apply(this,[e])
}else{if(f=="custom"){d=this._getCustomAssist(e)||this._getCaption(e)
}else{if(f=="caption"){d=this._getCaption(e)
}}}return d
}})
})(_,guidelib);
(function(c,a){var b=a.model.GuideDatePicker=a.model.Field.extend({msClassName:"guideDatePicker",_getTypedValue:function(d){if(d){d=xfalib.ut.DateInfo.Parse(d);
if(d==null){return undefined
}d=d.getISODate();
return d
}return null
}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideTextBox=a.model.Field.extend({msClassName:"guideTextBox"});
c.defineProps({multiLine:{get:function(){return this.getAttribute("multiLine")
}},maxChars:{get:function(){return this.getAttribute("maxChars")
}}})
}(_,guidelib));
(function(b,a){var c=a.model.GuideTextDraw=a.model.Field.extend({msClassName:"guideTextDraw"})
}(_,guidelib));
(function(c,a){var b=a.model.GuideImage=a.model.Scriptable.extend({msClassName:"guideImage"});
b.defineProps({value:{get:function(){if(this.bindNode){return this.bindNode.rawValue
}else{return null
}}}})
})(_,guidelib);
(function(c,b){var a=b.model.GuideNumericBox=b.model.Field.extend({msClassName:"guideNumericBox",_getTypedValue:function(h){var g=this.dataType,f,i,e,d;
if(this.checkIfNull(h)){return null
}switch(g){case"integer":f=parseInt(h);
break;
case"float":f=parseFloat(h);
break;
case"decimal":f=parseFloat(h);
if(!isNaN(f)){i=f.toString();
e=i.indexOf(".");
e=e===-1?i.length:e;
d=i.length-e-1;
if(d>this.fracDigits&&this.fracDigits!==-1){f=parseFloat(f.toFixed(this.fracDigits))
}if(e>this.leadDigits&&this.leadDigits!==-1){return undefined
}}break
}if(isNaN(f)){return undefined
}return f
}});
a.defineProps({dataType:{get:function(){return this.getAttribute("dataType")
}},leadDigits:{get:function(){return this.getAttribute("leadDigits")
}},fracDigits:{get:function(){return this.getAttribute("fracDigits")
}}})
})(_,guidelib);
(function(b,a){var c=a.model.GuidePasswordBox=a.model.Field.extend({msClassName:"guidePasswordBox"})
})(_,guidelib);
(function(b,a){var c=a.model.GuideDropDownList=a.model.Field.extend({msClassName:"guideDropDownList",_collectExpressions:function(){c._super._collectExpressions.apply(this);
if(this.optionsExp){this._compiledExpressions.optionsExp=this._compileExpression(this.optionsExp,"items")
}},_handleXfaModelChanged:function(d){if(d._property==="addItem"||d._property==="clearItems"||d._property==="deleteItem"){this._triggerEvent(a.event.GuideModelEvent.MODEL_CHANGED,d._property,d.prevText,d.newText)
}else{c._super._handleXfaModelChanged.call(this,d)
}},_triggerItemsChange:function(){var d=this.items;
this.trigger(a.event.GuideModelEvent.ITEMS_CHANGED,a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.ITEMS_CHANGED,this,"items",d,d))
},_getItems:function(){return this.jsonModel.options
}});
c.defineProps({multiSelect:{get:function(){return this.getAttribute("multiSelect")
},set:function(){this.setAttribute("multiSelect")
}},optionsExp:{get:function(){return this.getAttribute("optionsExp")
}},items:{get:function(){var d=[];
if(this.bindNode){var g=this.bindNode;
for(var e=0;
e<g.length;
e++){var f=g.getSaveItem(e)+"="+g.getDisplayItem(e);
d.push(f)
}return d
}else{d=this._getItems();
if(d&&!b.isArray(d)){return d.split(",")
}else{return d
}}},set:function(e){var d=this._getItems();
if(e!=d){if(!this.bindNode){this.jsonModel.options=e;
this._triggerItemsChange()
}}}}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideScribble=a.model.Field.extend({msClassName:"guideScribble"})
})(_,guidelib);
(function(c,a){var b=a.model.GuideItemsContainer=a.model.Scriptable.extend({msClassName:"guideItemsContainer",initialize:function(){b._super.initialize.call(this);
this._children=[];
this._nameArray={};
this._private={};
this._initChildren();
this._normalizeChildren()
},_postInitialize:function(){b._super._postInitialize.call(this);
c.each(this._children,function(d){d._postInitialize()
},this)
},validate:function(f){if(c.isUndefined(f)){f=[]
}var e=[],d;
c.each(this.children,function(g){g.validate(e)
},this);
b._super.validate.call(this,e);
d=e.length;
while(d>0){f[f.length]=e[e.length-d];
d--
}return e.length>0?false:true
},prepare:function(){c.each(this._children,function(d){d.prepare()
},this);
b._super.prepare.call(this)
},syncXFAProps:function(){b._super.syncXFAProps.apply(this,arguments);
c.each(this._children,function(d){d.syncXFAProps()
})
},_initChildren:function(){var d=[];
c.each(this.jsonModel.items,function(e){if(c.isObject(e)){var f=a.model.GuideModelRegistry.prototype.createModel(e);
f._isItem=true;
this._initializeChild(f);
d.push(f)
}},this);
this._children=d
},_initializeChild:function(d){d.parent=this
},_normalizeChildren:function(){this._nameArray={};
this._private={};
c.each(this.children,function(d){d._index=this._addProperty(d);
d.getNaked(d._index,a.runtime,null)
},this)
},nakedChildReferences:function(d,f){var e,g;
for(e=0;
e<this._children.length;
e++){g=this._children[e];
g.getNaked(d,f,this)
}},_addProperty:function(e){var f=e.getAttribute("name"),d=0;
this._nameArray[f]=this._nameArray[f]||d;
d=this._nameArray[f]++;
if(d===0){this._guide()._createGetterSetter(this,f,e)
}return d
},_getTitle:function(){return this.jsonModel["jcr:title"]
},visit:function(e,d){b._super.visit.apply(this,arguments);
c.each(this._children,function(g,f){g.visit(e,d)
})
},playJson:function(e){if(e){var d=c.filter(e.items,function(f){if(c.isObject(f)){return true
}return false
},this);
c.each(this.items,function(g,f){g.playJson(d[f])
},this);
b._super.playJson.call(this,e)
}},_collectValues:function(d){c.each(this._children,function(e){e._collectValues(d)
},this)
},getElement:function(d){var e=c.find(this._children,function(f){return f.className===d
},this);
return e
},_destroy:function(){c.each(this.children,function(d){d._destroy()
},this);
b._super._destroy.call(this)
},_findChildren:function(f,g){var d=[],e=false;
c.find(this._children,function(h){if(f===h._escapeQualifiedName()){d.push(h._getNakedThis());
e=true
}if(e&&!g){return true
}if(e&&f.indexOf("[*]")<0){return true
}},this);
return d
},resetData:function(){c.each(this._children,function(d){d.resetData()
},this)
}});
b.defineProps({children:{get:function(){return(this._children||[]).slice(0)
},set:function(d){this._children=d
}},items:{get:function(){var d=c.filter(this._children,function(e){if(e._isItem){return true
}return false
},this);
return d
}}})
}(_,guidelib));
(function(b,a){var c=a.model.GuideCompositeFieldItem=a.model.Field.extend({msClassName:"GuideCompositeFieldItem"})
})(_,guidelib);
(function(b,a){var c=a.model.GuideToolbar=a.model.GuideItemsContainer.extend({msClassName:"guideToolbar",initialize:function(){c._super.initialize.call(this)
},execNavigationChangeExpression:function(){b.each(this.items,function(d){if(d.navigationChangeExp){this._guide().queueExpressions(d,"navigationChangeExp")
}},this)
}})
})(_,guidelib);
(function(b,a){var c=a.model.GuidePanel=a.model.GuideItemsContainer.extend({msClassName:"guidePanel",initialize:function(){c._super.initialize.call(this);
this._currentItem=null;
this._navigationContext=null
},_collectExpressions:function(){c._super._collectExpressions.call(this);
if(this.completionExp){this._compiledScripts.completionExp=this._compileExpression(this.completionExp,null)
}if(this.jsonModel.summaryExp){this._compiledExpressions.summaryExp=this._compileExpression(this.jsonModel.summaryExp,"summary")
}},_initChildren:function(){c._super._initChildren.call(this);
this._instanceManager=null;
var d=this.children;
var e=0;
b.each(d,function(j,h){if(j.className=="guidePanel"){var i=a.model.GuideModelRegistry.prototype.createInstanceManager(j);
this._initializeChild(i);
this._children.splice(h+e++,0,i);
i._manageChild(j);
var g=j.minOccur-1;
while(g>0){i.addInstance();
g-=1;
e+=1
}}},this);
if(this.jsonModel.toolbar){var f=a.model.GuideModelRegistry.prototype.createModel(this.jsonModel.toolbar);
this._initializeChild(f);
this._children.push(f)
}this._summary=null
},_postInitialize:function(){c._super._postInitialize.call(this);
this.instanceManager._postInitializeBinding()
},_addChildAt:function(i,h){if(i){this._initializeChild(i);
this._guide()._modelTemplateCacheStore.putModel(i);
var d=this._getItemsInsertIndex(h-1);
var e={};
var g=i.id;
var f=-1;
b.each(this.jsonModel.items,function(k,j){if(f==d-1){e[g]=i.jsonModel
}e[j]=k;
f++
},this);
if(f==d-1){e[g]=i.jsonModel
}this.jsonModel.items=e;
i._isItem=true;
this._children.splice(h,0,i);
this._normalizeChildren();
i._postInitialize();
i.prepare();
this._triggerEvent(a.event.GuideModelEvent.CHILD_CHANGED,"childAdded",null,i)
}},_removeChild:function(f){f._destroy();
var d=this._children.indexOf(f);
this._children.splice(d,1);
var e=null;
b.each(this.jsonModel.items,function(h,g){if(h===f.jsonModel){e=g
}},this);
if(e){delete this.jsonModel.items[e]
}this._normalizeChildren();
this._triggerEvent(a.event.GuideModelEvent.CHILD_CHANGED,"childRemoved",f,null)
},_getItemsInsertIndex:function(e){var d=0;
b.find(this._children,function(g,f){if(g._isItem){d++
}if(f>=e){return true
}},this);
return d
},playJson:function(e){var f={};
var d={};
b.each(e.items,function(h){if(b.isObject(h)){if(h.guideNodeClass==="guidePanel"){if(d[h.name]){d[h.name].push(h)
}else{d[h.name]=[h]
}}else{if(f[h.name]){f[h.name].push(h)
}else{f[h.name]=[h]
}}}},this);
var g=b.filter(this._children,function(h){return h instanceof a.model.GuideInstanceManager
},this);
b.each(g,function(i){var k=i._getInstanceName();
var h=d[k];
var j=i._instances.slice(0);
b.each(j,function(n,m){if(h.length>0){var l=h.shift();
n.playJson(l)
}else{i.removeInstance(m)
}},this);
if(h.length>0){b.each(h,function(m){var l=i.addInstance();
l.playJson(m)
},this)
}},this);
b.each(this.items,function(j){if(!(j instanceof a.model.GuidePanel)){var i=j.name;
var h=f[i];
if(h&&h.length>0){j.playJson(h.shift())
}}},this);
if(this.toolbar){this.toolbar.playJson(e.toolbar)
}},_getRole:function(){var f,e,d;
d={Table:"grid","Header Row":"rowHeader","Body Row":"rowGroup","Footer Row":"rowGroup",List:"list"};
if(this.bindNode){e=this.getOrElse(this.bindNode.assist.role,null);
if(e){f=d[e]
}}return f
},_getAssistPriority:function(){return(this.getAttribute("assistPriority")||"description")
},_getScreenReaderText:function(){var d,e=this._getAssistPriority();
if(e!=="description"){d=c._super._getScreenReaderText.apply(this)
}return d
},execCompletion:function(){var d=true;
b.find(this.children,function(e){if(e instanceof a.model.GuidePanel&&!e.execCompletion()){d=false;
return true
}},this);
if(d&&this.completionExp){d=this.executeExpression("completionExp")
}return d
}});
c.defineProps({completionExp:{get:function(){return this.getAttribute("completionExp")
}},completionExpReq:{get:function(){return this.getAttribute("completionExpReq")
}},minOccur:{get:function(){return this.getOrElse(this.jsonModel.minOccur,1)
}},maxOccur:{get:function(){return this.getOrElse(this.jsonModel.maxOccur,1)
}},initialOccur:{get:function(){return this.getOrElse(this.jsonModel.initialOccur,1)
}},repeatable:{get:function(){return(this.minOccur!=1||this.maxOccur!=1)
}},panel:{get:function(){return this
}},toolbar:{get:function(){this.getElement("guideToolbar")
}},instanceManager:{get:function(){return this._instanceManager
}},instanceIndex:{get:function(){return this.instanceManager._instances.indexOf(this)
}},title:{get:function(){return this.jsonModel["jcr:title"]
}},summary:{get:function(){return this._summary
},set:function(e){var d=this._summary;
if(d!==e){this._summary=e;
this.trigger(a.event.GuideModelEvent.MODEL_CHANGED,a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"summary",d,this._summary))
}}},enableLayoutOptimization:{get:function(){return this.getOrElse(this.jsonModel,"layout.enableLayoutOptimization",false)
}}});
c.addMixins([a.model.mixin.AddNavigationContext])
})(_,guidelib);
(function(c,b){var a=b.model.GuideInstanceManager=b.model.GuideNode.extend({msClassName:"guideInstanceManager",initialize:function(){a._super.initialize.call(this);
this._instances=[];
this.deafen=false;
this._bindPending=true
},_postInitializeBinding:function(){if(!this._bindPending){return
}else{this._bindPending=false
}var d=this._instances[0];
if(!d){this.logger().log("There was no instance found for InstanceManager at postInitialize:"+this.somExpression)
}if(d.bindNode&&d.bindNode.instanceManager){this.bindNode=d.bindNode.instanceManager;
this.bindNode.parent.on(xfalib.script.XfaModelEvent.CHILD_ADDED,this);
this.bindNode.parent.on(xfalib.script.XfaModelEvent.CHILD_REMOVED,this)
}},handleEvent:function(e){if(!this.deafen&&e instanceof xfalib.script.XfaModelEvent){switch(e.name){case xfalib.script.XfaModelEvent.CHILD_ADDED:var d=e.newText;
if(d.instanceManager==this.bindNode){this._insertInstance(d.instanceIndex,d)
}break;
case xfalib.script.XfaModelEvent.CHILD_REMOVED:var f=e.prevText;
if(f.instanceManager==this.bindNode){this._removeInstance(f.instanceIndex,false)
}break;
case xfalib.script.XfaModelEvent.CHILD_MOVED:this.logger().log("CHILD_REMOVED should never be dispatched. It's achieved via ad and remove child.");
break;
default:break
}}},_instanceTemplate:function(){return this._guide()._modelTemplateCacheStore.cloneJsonTemplate(this.jsonModel.instanceTemplateId)
},addInstance:function(){return this._insertInstance()
},_manageChild:function(e,d){e._instanceManager=this;
if(d===undefined){this._instances.push(e)
}else{this._instances.splice(d,0,e)
}},_insertInstance:function(e,d){if((+this.maxOccur>=0)&&(+this.maxOccur==this.instanceCount)){return null
}if(e!==undefined&&e>+this.maxOccur){return null
}var k=d;
if(!d&&this.bindNode){this.deafen=true;
try{k=this.bindNode.insertInstance(e)
}finally{this.deafen=false
}}var j=this._instanceTemplate();
var i={};
var h=this.guideUtil.generateUID();
this.copyObject(j,i,{transformMaps:{id:function(p,n,o){return h+"__"+o.templateId
}}});
var m=k?{bindNode:k}:null;
var g=b.model.GuideModelRegistry.prototype.createModel(i,m);
if(g!=null){this._manageChild(g,e);
var f=this.parent;
if(f!=null){if(this._instances.length>0){e=e!==undefined?e:this._instances.length-1;
var l=f._children.indexOf(this._instances[e-1]);
f._addChildAt(g,l+1)
}else{f._addChildAt(g,f._children.indexOf(this)+1)
}}this._execExpressions();
return g
}else{this.logger().log("guide","insertInstance could not create child"+this.jsonModel.instanceTemplateId)
}return null
},insertInstance:function(d){return this._insertInstance(d)
},removeInstance:function(d){this._removeInstance(d,true)
},_removeInstance:function(e,d){if(this.instanceCount==0||this.minOccur>=this.instanceCount){return
}if(e>=+this.instanceCount){return
}if(d&&this.bindNode){this.deafen=true;
try{this.bindNode.removeInstance(e)
}finally{this.deafen=false
}}var g=this._instances[e];
this._instances.splice(e,1);
var f=g.parent;
f._removeChild(g);
this._execExpressions()
},_getInstanceName:function(){return this.jsonModel.instanceName
},_execExpressions:function(){try{this._guide().prepare()
}catch(d){this.logger().error("guide",d.message)
}}});
a.defineProps({minOccur:{get:function(){return this.getOrElse(this.jsonModel.minOccur,1)
}},maxOccur:{get:function(){return this.getOrElse(this.jsonModel.maxOccur,1)
}},initialOccur:{get:function(){return this.getOrElse(this.jsonModel.initialOccur,1)
}},instanceCount:{get:function(){return this._instances.length
}},repeatable:{get:function(){return(this.minOccur!=1||this.maxOccur!=1)
}},instances:{get:function(){return(this._instances||[]).slice(0)
}}})
})(_,guidelib);
(function(c,a){var b=a.model.RootPanelNode=a.model.GuidePanel.extend({msClassName:"rootPanelNode"});
b.defineProps({toolbar:{get:function(){return this.getElement("guideToolbar")||this.parent.toolbar
}}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideModelRegistry=xfalib.ut.Class.extend({_nodeClassToFactoryMap:{},createModel:function(d,g){var f=null;
var h="GuideNode";
if(d.guideNodeClass&&d.guideNodeClass.length>0){h=d.guideNodeClass.charAt(0).toUpperCase()+d.guideNodeClass.substr(1)
}var e="create"+h;
if(d.guideNodeClass&&this._nodeClassToFactoryMap[d.guideNodeClass]){e=this._nodeClassToFactoryMap[d.guideNodeClass]
}if(this[e]){f=this[e].call(this,d,g)
}if(!f&&a.model[h]){f=new a.model[h](this._getOptions(d,g))
}if(!f){if(d.items){f=new a.model.GuideItemsContainer(this._getOptions(d,g))
}else{f=new a.model.GuideNode(this._getOptions(d,g))
}}return f
},_getOptions:function(d,e){return b.extend({},e,{jsonModel:d})
},createInstanceManager:function(f){var e=f.getAttribute("name"),d={guideNodeClass:"guideInstanceManager",minOccur:f.minOccur,maxOccur:f.maxOccur,initialOccur:f.initialOccur,instanceTemplateId:f.templateId,name:"_"+e,instanceName:e,templateId:"im_"+f.templateId,id:"im_"+f.id};
return a.model.GuideModelRegistry.prototype.createModel(d)
}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideContainerNode=a.model.GuideItemsContainer.extend({msClassName:"guideContainerNode",initialize:function(){var d="";
a.runtime.guide=this;
a.runtime.errorManager=new a.util.GuideErrorManager();
this._modelTemplateCacheStore=new a.model.util.ModelTemplateCacheStore({modelTemplateJson:this.jsonModel});
this._guideSchema=new a.model.GuideSchema();
c._super.initialize.call(this);
this._currentContext=null;
this._pendingQueues={calcExp:[],enabledExp:[],visibleExp:[],validateAllExp:[],optionsExp:[],navigationChangeExp:[],summaryExp:[]};
this._modelTemplateCacheStore.putModel(this);
this._postInitialize();
var e=this.getOrElse(xfalib,"runtime.xfa.host",null);
if(e!==null){e.on(xfalib.script.XfaModelEvent.FORM_MODEL_REFRESH,function(f){switch(f.name){case xfalib.script.XfaModelEvent.FORM_MODEL_REFRESH:this._triggerEvent(a.event.GuideModelEvent.MODEL_REFRESH,"jsonModel",null,null);
break;
default:}},this)
}},_initChildren:function(){this.rootPanel=a.model.GuideModelRegistry.prototype.createModel(this.jsonModel.rootPanel);
this._initializeChild(this.rootPanel);
this._children.push(this.rootPanel);
var d=a.model.GuideModelRegistry.prototype.createInstanceManager(this.rootPanel);
this._initializeChild(d);
this._children.splice(this._children.indexOf(this.rootPanel),0,d);
d._manageChild(this.rootPanel);
if(this.jsonModel.toolbar){this.toolbar=a.model.GuideModelRegistry.prototype.createModel(this.jsonModel.toolbar);
this._initializeChild(this.toolbar);
this._children.push(this.toolbar)
}},prepare:function(){b.each(this._children,function(d){d.prepare()
},this);
this.runPendingExpressions()
},runPendingExpressions:function(){this._runExpressionQueue("calcExp");
this._runExpressionQueue("enabledExp");
this._runExpressionQueue("visibleExp");
this._runExpressionQueue("validateAllExp");
this._runExpressionQueue("optionsExp");
this._runExpressionQueue("navigationChangeExp");
this._runExpressionQueue("summaryExp")
},_runExpressionQueue:function(e){var d=this._pendingQueues[e],f;
if(d){while(d.length>0){f=this._pendingQueues[e].shift();
f.executeExpression(e)
}}},queueExpressions:function(e,d){if(!e||!d){return
}if(b.isString(d)){d=[d]
}b.each(d,function(g){var f=this._pendingQueues[g];
if(f&&f.indexOf(e)<0){f.push(e)
}},this)
},_createGetterSetter:function(d,f,g){var e="_"+f+"_";
if(!d.hasOwnProperty(f)){Object.defineProperty(d,f,{get:function(){if(this._private[e]){return this._private[e]._getNakedThis()
}return undefined
},set:function(i){var h=this._private[e];
h[h._default]=i
}})
}d._private[e]=g
},playJson:function(d){this.rootPanel.playJson(d.rootPanel);
if(this.toolbar){this.toolbar.playJson(d.toolbar)
}this.prepare()
},_collectValues:function(d){b.each(this._children,function(e){e._collectValues(d)
},this)
},resolveNode:function(d){var e=d.split("."),f=null;
if(e[0]==="guide[0]"){e.shift();
f=this
}if(e[0]===this._escapeQualifiedName()){f=this;
e.shift()
}else{if(this.hasOwnProperty(e[0])){f=this[e[0]];
e.shift()
}else{if(!f){f=this.rootPanel
}}}b.each(e,function(g){if(f&&f._findChildren){f=f._findChildren(g,false)[0]
}else{f=null
}},this);
return f
}});
c.defineProps({xdpRef:{get:function(){return this.jsonModel.xdpRef
}},actionType:{get:function(){return this.jsonModel.actionType
}},xsdRef:{get:function(){return this.jsonModel.xsdRef
}},panel:{get:function(){return this.rootPanel
}}})
}(_,guidelib));
(function(c,a){var b=a.model.GuideFileUpload=a.model.GuideItemsContainer.extend({msClassName:"guideFileUpload",_triggerFileListChange:function(){var d=this._fileList;
this.trigger(a.event.GuideModelEvent.MODEL_CHANGED,a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"fileList",d,d))
}});
b.defineProps({multiSelection:{get:function(){return this.getAttribute("multiSelection")
}},buttonText:{get:function(){return this.getAttribute("buttonText")
}},showComment:{get:function(){return this.getAttribute("showComment")
}},fileSizeLimit:{get:function(){return this.getAttribute("fileSizeLimit")
}},fileList:{get:function(){return this._fileList
},set:function(f){var e=this._fileList;
var d=f;
if(d!=e){this._fileList=d
}this._triggerFileListChange()
}}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideTermsAndConditions=a.model.GuideItemsContainer.extend({msClassName:"guideTermsAndConditions",playJson:function(d){this.jsonModel.clickStatus=d.clickStatus;
c._super.playJson.apply(this,arguments)
}});
c.defineProps({showLink:{get:function(){return this.getAttribute("showLink")
}},clickStatus:{get:function(){return this.getAttribute("clickStatus")
},set:function(d){this.setAttribute(d,"clickStatus")
}},showAsPopUp:{get:function(){return this.getAttribute("showAsPopUp")
}}})
})(_,guidelib);
(function(c,a){var b=a.model.util.ModelTemplateCacheStore=xfalib.ut.Class.extend({initialize:function(){b._super.initialize.apply(this);
this._modelIdCache={};
this._templateIdCache={};
var d=JSON.parse(JSON.stringify(this.options.modelTemplateJson));
this._putTemplate(d)
},putModel:function(d){if(d.id){var e=d.id;
this._modelIdCache[e]=d;
if(d.children){_.each(d.children,function(f){this.putModel(f)
},this)
}}else{this.logger().log("no Id found for model"+d.getAttribute("name"))
}},removeModel:function(d){if(this._modelIdCache.hasOwnProperty(d)){delete this._modelIdCache[d]
}},getModel:function(d){if(this._modelIdCache.hasOwnProperty(d)){return this._modelIdCache[d]
}},_putTemplate:function(d){if(d.templateId&&d.guideNodeClass){this._templateIdCache[d.templateId]=d
}_.each(d,function(f,e){if(_.isObject(f)){this._putTemplate(f)
}},this)
},cloneJsonTemplate:function(d){if(this._templateIdCache[d]){var e=this._templateIdCache[d];
return JSON.parse(JSON.stringify(e))
}}});
b.defineProps({})
}(jQuery,guidelib));
(function(b,a){var c=a.model.util.GuideNavigationContext=xfalib.ut.Class.extend({msClassName:"guideNavigationContext",initialize:function(){c._super.initialize.call(this);
this._currentItem=this.options.currentItem;
this._parentPanel=this.options.parentPanel
},getQualifiedNamedItem:function(e){var d=this._getNavigableItems();
var f=b.find(d,function(g){return(g._escapeQualifiedName()==e)
},this);
return f
},getItemForNav:function(d){if(d=="prevItem"||d=="nextItem"||d=="firstItem"||d=="lastItem"){return this[d]
}else{return this.getQualifiedNamedItem(d)
}},_isNavigableItem:function(d){return d.visible
},_getNavigableItems:function(){var d=b.filter(this._parentPanel.items,function(e){return this._isNavigableItem(e)
},this);
return d
},_getNakedThis:function(){return this
}});
c.defineProps({currentItem:{get:function(){if(this._currentItem){return this._currentItem
}else{return this.firstItem
}},set:function(d){this._currentItem=d
}},prevItem:{get:function(){var d=this._getNavigableItems();
var e=this.currentItem;
if(d.indexOf(e)>0){return d[d.indexOf(e)-1]
}else{return null
}}},nextItem:{get:function(){var d=this._getNavigableItems();
var e=this.currentItem;
if(d.indexOf(e)<(d.length-1)){return d[d.indexOf(e)+1]
}else{return null
}}},firstItem:{get:function(){var d=this._getNavigableItems();
return d[0]||null
}},lastItem:{get:function(){var d=this._getNavigableItems();
if(d.length){return d[d.length-1]
}else{return null
}}},hasNextItem:{get:function(){return this.nextItem!=null
}},hasPrevItem:{get:function(){return this.prevItem!=null
}},isFirstItem:{get:function(){return this.currentItem==this.firstItem
}},isLastItem:{get:function(){return this.currentItem==this.lastItem
}}})
})(_,guidelib);
(function(b,a){var c=a.model.GuideListFileAttachmentButton=a.model.GuideButton.extend({msClassName:"guideListFileAttachmentButton"})
})(_,guidelib);
(function(c,a){var b=a.view.GuideBaseView=xfalib.ut.Class.extend({guideUtil:a.util.GuideUtil,_triggerOnBridge:function(e,h,g,d,f){var i=a.event.GuideModelEvent.createEvent(e,h,g,d,f);
window.guideBridge.trigger(e,i)
},initialize:function(){b._super.initialize.call(this);
this.$element=c(this.options.element);
this.id=this.$element.attr("id");
this._model=this.options.model;
this.parentView=this.options.parentView;
this.$element.data("guideView",this);
this._$item=null;
this._$itemNav=null;
this._model.on(a.event.GuideModelEvent.MODEL_CHANGED,this.handleModelChanged,this);
this._syncPending=true;
this._visibleHelpElement="none"
},postInitialize:function(){},handleVisibleChanged:function(d){if(!d.newText){this.$item.addClass("hidden");
this.$itemNav.addClass("hidden");
if(this.parentView.currentActiveItemView==this){this.parentView.setActive("nextItem")
}}else{this.$item.removeClass("hidden");
this.$itemNav.removeClass("hidden")
}},handleModelChanged:function(d){switch(d._property){case"viewVisited":if(d.newText){this.$item.addClass("stepped");
this.$itemNav.addClass("stepped")
}else{this.$item.removeClass("stepped");
this.$itemNav.removeClass("stepped")
}break;
case"visible":this.handleVisibleChanged(d);
break
}},setActive:function(e,d,f){if(d&&(this._model.className==="guideNode"||this._model.forceElementFocusChange)){this._guideView.currentFocusItemSom=this._model.somExpression
}return true
},focusable:function(){return this._model.visible
},_find:function(d){return this._guideView.$element.find(d)
},_syncGuideNodeToHtml:function(d){this._syncPending=false;
this.handleVisibleChanged(a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"visible",this._model.visible,this._model.visible))
},_updateIds:function(g,j,f){if(j==f){return
}var i="#"+j,h=this.guideUtil.modelElSelector(j),d='[id^="'+j+'"]',e="[data-guide-id^='"+j+"']";
g.find(i).addBack(i).attr("id",f);
g.find(h).addBack(h).attr(this.guideUtil.GUIDE_VIEW_BIND_ATTR,f);
g.find(d).addBack(d).each(function(){var l=c(this),m=l.attr("id"),k=f+m.substring(j.length);
l.attr("id",k)
});
g.find(e).addBack(e).each(function(){var l=c(this),m=l.attr("data-guide-id"),k=f+m.substring(j.length);
l.attr("data-guide-id",k)
})
},getSiblingItemView:function(d){if(this.parentView instanceof a.view.GuidePanelView){var e=this.parentView._model.navigationContext.getItemForNav(d);
if(e){return this.parentView.getQualifiedNamedView(e._escapeQualifiedName())
}}return null
}});
b.defineProps({_guideView:{get:function(){return window.guideBridge._guideView
}},_guide:{get:function(){return window.guideBridge._guide
}},$item:{get:function(){if(!this._$item){var d=this.guideUtil.itemSelector(this._model.id);
this._$item=this._find(d)
}return this._$item
}},$itemNav:{get:function(){if(!this._$itemNav){var d=this.guideUtil.itemNavSelector(this._model.id);
this._$itemNav=this._find(d)
}return this._$itemNav
}},visibleHelpElement:{get:function(){return this._visibleHelpElement
},set:function(d){this._visibleHelpElement=d
}},isItem:{get:function(){return this._model._isItem
}},qualifiedName:{get:function(){return this._model._escapeQualifiedName()
}}})
}(jQuery,guidelib));
(function(d,a){var c=xfalib.ut.XfaUtil.prototype,b=a.view.GuideFieldView=a.view.GuideBaseView.extend({_defaultWidgetName:"defaultWidget",initialize:function(){b._super.initialize.call(this);
this._initializeWidget();
this._defineModelEvents();
this.markMandatory();
this.oldValue=null
},postInitialize:function(){this._syncGuideNodeToHtml(true)
},createWidgetOptions:function(){return{name:this._model.id+"_jqName",value:this._model.value,displayValue:this._model.formattedValue,commitEvent:this.getCommitEvent(),access:this._model.enabled?"open":"readOnly",screenReaderText:this._model._getScreenReaderText()}
},getCommitEvent:function(){return xfalib.ut.XfaUtil.prototype.XFA_EXIT_EVENT
},getWidgetName:function(){return this.options.widgetName||this._defaultWidgetName
},_initializeWidget:function(){if(this.$element.find("div.guideFieldWidget").length){this.$widget=this.$element.find("div.guideFieldWidget")
}else{this.$widget=null
}if(this.$widget){d(this.$widget).on(this.getCommitEvent(),d.proxy(this.handleCommit,this)).on(c.XFA_CLICK_EVENT,d.proxy(this.handleClick,this)).on(c.XFA_EXIT_EVENT,d.proxy(this.handleFocusOut,this)).on(c.XFA_ENTER_EVENT,d.proxy(this.handleEnter,this))
}},_defineModelEvents:function(){if(this._model){this._model.on(a.event.GuideModelEvent.VALUE_CHANGED,this.handleValueChanged,this);
this._model.on(a.event.GuideModelEvent.ERROR_CHANGED,this.handleErrorChanged,this)
}},_syncGuideNodeToHtml:function(f){b._super._syncGuideNodeToHtml.apply(this,arguments);
if(this._model){this.handleModelChanged(a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"visible",this._model.visible,this._model.visible));
this.$element.attr("data-disabled",!this._model.enabled+"")
}if(this.$widget){var e=this.createWidgetOptions();
if(!this.jqwidget){this.createWidget(this.getWidgetName(),e)
}else{this.setWidgetOptions(e)
}}if(this._model.forceErrorShow&&this._model._errorText){this.handleErrorChanged({prevText:this._model.validationState,newText:this._model._errorText})
}},setWidgetOptions:function(e){this.jqwidget.option(e)
},markMandatory:function(){if(this._model.mandatory&&this.$element){d(this.$element).attr("data-mandatory","true")
}},handleValueChanged:function(e){switch(e._property){case"value":this.jqwidget.option("value",e.prevText);
this.jqwidget.option("displayValue",e.newText);
break
}},handleErrorChanged:function(f){var g=f.prevText,e=f.newText;
if(g===true){a.runtime.errorManager.markError("",g,this.$element)
}else{a.runtime.errorManager.markError(e,g,this.$element)
}},handleCommit:function(){this.commitValue(this.jqwidget.option("value"))
},handleClick:function(e){window.guideBridge.clickedOnWindow=false
},handleFocusOut:function(e){var f=window.guideBridge;
if(this.getCommitEvent()!==c.XFA_EXIT_EVENT){this._model.executeExpression("exit")
}if(f&&f.clickedOnWindow){this._guideView.currentFocusItemSom=null
}f.clickedOnWindow=false;
if(!(this._model.className==="guideRadioButton"||this._model.className==="guideCheckBox")){this._triggerOnBridge("elementFocusOut","","","","")
}if((this.oldValue!==this._model.value)&&this._model._errorText){this.handleErrorChanged({prevText:this._model.validationState,newText:this._model._errorText})
}},handleModelChanged:function(e){switch(e._property){case"enabled":var f=e.newText?"open":"readOnly";
this.jqwidget.option("access",f);
this.$element.attr("data-disabled",!e.newText+"");
break;
default:b._super.handleModelChanged.apply(this,arguments)
}},commitValue:function(e){this._model.value=e;
if(this.getCommitEvent()===c.XFA_CHANGE_EVENT){this._model.executeExpression("change")
}else{this._model.executeExpression("exit")
}},tempXfaFixes:function(){if(this.$element){this.$element.find("input").css("position","relative")
}this.handleAccessibility()
},handleAccessibility:function(){if(this._model.mandatory){this.$widget.find("input,textarea,select,button").attr("aria-required",true)
}if(this._model._getScreenReaderText()===this._model._getToolTip()){this.$element.find("input,textarea,select,button").removeAttr("aria-label");
this.$element.find("input,textarea,select,button").attr("aria-labelledby",this._model.id+"_guideFieldShortDescription")
}if(this._model.longDescription){this.$element.find("input,textarea,select,button").attr("aria-describedby",this._model.id+"_guideFieldLongDescription")
}},createWidget:function(h,f){try{this.jqwidget=d(this.$widget)[h](f).data(h)
}catch(g){this.logger().error("widget "+h+" doesn't exists. Falling back to default widget");
this.jqwidget=d(this.$widget)[this._defaultWidgetName](f).data(h)
}this.tempXfaFixes()
},handleEnter:function(){this._guideView.currentFocusItemSom=this._model.somExpression;
var e=window.guideBridge;
if(e){e.clickedOnWindow=false
}if(!(this._model.className==="guideRadioButton"||this._model.className==="guideCheckBox")){this._triggerOnBridge("elementFocus","","","","")
}this.oldValue=this._model.value
},handleChange:function(){},setActive:function(f,e,g){b._super.setActive.call(this,f,e,g);
if(e){if(this.jqwidget&&this.jqwidget.focus){this.jqwidget.focus()
}this._guideView.currentFocusItemSom=this._model.somExpression
}return true
}})
}(jQuery,guidelib));
(function(d,a){var c=xfalib.ut.XfaUtil.prototype,b=a.view.GuideCompositeFieldView=a.view.GuideFieldView.extend({_defaultWidgetName:"defaultField",getModelNameOptionsMap:function(){return{}
},initialize:function(){b._super.initialize.call(this);
this._defineChildModelEvents()
},_defineChildModelEvents:function(){var e=this;
if(this.getModelNameOptionsMap()){_.each(this.getModelNameOptionsMap(),function(g,f){var h=e._model[f];
h.on(a.event.GuideModelEvent.VALUE_CHANGED,e.handleValueChanged,e);
if(h.mandatory||h.validateExp){h.on(a.event.GuideModelEvent.ERROR_CHANGED,e.handleErrorChanged,e)
}})
}},handleCommit:function(){var e=this;
if(!_.isEmpty(this.getModelNameOptionsMap())){_.each(this.getModelNameOptionsMap(),function(g,f){var h=e._model[f];
if(!_.isUndefined(h)){var i=e.jqwidget.option(g);
if(_.isArray(i)){i=i.join("\n")
}h.value=i
}})
}else{this._model.value=this.jqwidget.option("value")
}this.execCommitExpression()
},handleValueChanged:function(e){switch(e._property){case"value":var f=this.getModelNameOptionsMap();
this.jqwidget.option(f[e.target.name],e.prevText);
break
}},execCommitExpression:function(){if(this.getCommitEvent()==c.XFA_CHANGE_EVENT){this._model.executeExpression("change")
}else{this._model.executeExpression("exit")
}}})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideTextBoxView=a.view.GuideFieldView.extend({_defaultWidgetName:"textField",createWidgetOptions:function(){var d=b._super.createWidgetOptions.apply(this,arguments);
return c.extend({},d,{multiLine:this._model.multiLine,maxChars:this._model.maxChars})
},tempXfaFixes:function(){if(this._model.jsonModel.multiLine){this.$element.find("textarea").css("position","relative");
this.handleAccessibility()
}else{b._super.tempXfaFixes.apply(this)
}},handleAccessibility:function(){b._super.handleAccessibility.apply(this);
if(this._model.jsonModel.multiLine){this.$element.find("textarea").attr("aria-multiLine",true)
}}})
}(jQuery,guidelib));
(function(b,a){var c=a.view.GuideTextDrawView=a.view.GuideFieldView.extend({_defaultWidgetName:"abstractWidget",handleValueChanged:function(d){switch(d._property){case"value":this.$element.html(d.newText);
break
}},setActive:function(e,d,f){a.view.GuideFieldView._super.setActive.call(this,e,d,f);
if(d){if(this.$element){this.$element.focus()
}this._guideView.currentFocusItemSom=this._model.somExpression
}return true
}})
}(jQuery,guidelib));
(function(d,b){var c=xfalib.ut.XfaUtil.prototype,a=b.view.GuideImageView=b.view.GuideBaseView.extend({initialize:function(){a._super.initialize.call(this);
if(this._model.value!=null){var e="data:image/*;base64,"+this._model.value;
this.$element.children("img").attr("src",e)
}},setActive:function(f,e,g){b.view.GuideFieldView._super.setActive.call(this,f,e,g);
if(e){if(this.$element){this.$element.focus()
}this._guideView.currentFocusItemSom=this._model.somExpression
}return true
}})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideDatePickerView=a.view.GuideFieldView.extend({_defaultWidgetName:"dateTimeEdit",createWidgetOptions:function(){var d=b._super.createWidgetOptions.apply(this,arguments),e=this._model.displayPictureClause===null;
return c.extend({},d,{days:a.i18n.calendarSymbols.abbrdayNames,months:a.i18n.calendarSymbols.monthNames,zero:a.i18n.numberSymbols.zero,clearText:xfalib.locale.Strings.clearText,useNativeWidget:e,showCalendarIcon:true})
},tempXfaFixes:function(){b._super.tempXfaFixes.apply(this,arguments);
if(this.$widget){this.$widget.children().height("100%")
}}})
}(jQuery,guidelib));
(function(b,a){var c=a.view.GuideCheckBoxView=a.view.GuideFieldView.extend({_defaultWidgetName:"XfaCheckBox",initialize:function(){c._super.initialize.apply(this,arguments);
var d=this;
this.$element.find(".guideWidgetLabel").each(function(e,f){b(f).click((function(g){return function(){if(d._model.enabled){d.jqwidget[d.getJQWidgetIdentifier(g)].click()
}}
}(e)))
})
},getJQWidgetIdentifier:function(d){return d
},createWidgetOptions:function(){var d=c._super.createWidgetOptions.apply(this,arguments);
return b.extend({},d,{states:2})
},getCommitEvent:function(){return xfalib.ut.XfaUtil.prototype.XFA_CHANGE_EVENT
},getStateFromValue:function(e,d){if(e===null){return 1
}if((e+"").split(",").indexOf(d[0]+"")!==-1){return 0
}return 1
},getOnOffValueFromModelValue:function(e,d){return d[this.getStateFromValue(e,d)]
},handleValueChanged:function(d){_.each(this.jqwidget,function(e,f){var g=this.getOnOffValueFromModelValue(d.prevText,e.option("values"));
e.option("value",g);
e.option("displayValue",g)
},this)
},handleCommit:function(){var d="";
_.each(this.jqwidget,function(e,g){var f=e.option("values");
if(e.option("state")===0){d=d+f[0]+","
}},this);
d=d.substring(0,d.length-1);
this.commitValue(d)
},handleEnabledChanged:function(d){var e=d.newText?"open":"readOnly";
_.each(this.jqwidget,function(f){f.option("access",e)
})
},handleModelChanged:function(d){switch(d._property){case"enabled":this.handleEnabledChanged(d);
break;
default:c._super.handleModelChanged.apply(this,arguments)
}},setWidgetOptions:function(e){var d=0;
_.each(this.jqwidget,function(f,g){this._initOrUpdateWidget(g,this._getOptions(e,d++))
},this)
},_getOptions:function(g,f){var e=this._model.getOnOffValues(f),h=this.getOnOffValueFromModelValue(this._model.value,e),d=_.extend(g,{value:h,displayValue:h,values:e,state:this.getStateFromValue(this._model.value,e),screenReaderText:this._model._getScreenReaderText(f)});
return d
},_initOrUpdateWidget:function(i,d,h,f){if(this.jqwidget[i]){this.jqwidget[i].option(d)
}else{try{this.jqwidget[i]=b(f)[h](d).data(h)
}catch(g){this.logger().error("widget "+h+" doesn't exists. Falling back to default widget");
this.jqwidget[i]=b(f)[this._defaultWidgetName](d).data(h)
}}},initializeJqWidget:function(){this.jqwidget=[]
},createWidget:function(f,e){var d=this;
this.initializeJqWidget();
this.$widget.each(function(g,h){d._initOrUpdateWidget(d.getJQWidgetIdentifier(g),d._getOptions(e,g),f,h)
});
this.tempXfaFixes()
},setActive:function(e,d,f){a.view.GuideFieldView._super.setActive.call(this,e,d,f);
if(d){if(this.jqwidget&&this.jqwidget[this.getJQWidgetIdentifier(0)]){this.jqwidget[this.getJQWidgetIdentifier(0)].focus()
}this._guideView.currentFocusItemSom=this._model.somExpression
}return true
}})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideNumericBoxView=a.view.GuideFieldView.extend({_defaultWidgetName:"numericInput",createWidgetOptions:function(){var d=b._super.createWidgetOptions.apply(this,arguments);
return c.extend({},d,{dataType:this._model.dataType,leadDigits:this._model.leadDigits,fracDigits:this._model.fracDigits,zero:a.i18n.numberSymbols.zero,decimal:a.i18n.numberSymbols.decimal,commitEvent:this.getCommitEvent()})
}})
}(jQuery,guidelib));
(function(c,b){var a=b.view.GuidePasswordBoxView=b.view.GuideFieldView.extend({_defaultWidgetName:"defaultWidget"})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideRadioButtonView=a.view.GuideCheckBoxView.extend({_defaultWidgetName:"XfaCheckBox",_prevOnWidget:null,getJQWidgetIdentifier:function(d){return this._model.getItemIdentifier(d)
},handleValueChanged:function(e){var d=e.prevText;
this.jqwidget[d].option("value",e.newText);
this.jqwidget[d].option("displayValue",e.newText);
if(e.newText===null){this._prevOnWidget=null
}else{this._prevOnWidget=this.jqwidget[d]
}},handleCommit:function(){var d=_.find(this.jqwidget,function(e){return e.option("state")===0&&e!==this._prevOnWidget
},this);
this.commitValue(d.option("value"));
this._prevOnWidget=d
},_initOrUpdateWidget:function(g,d,f,e){b._super._initOrUpdateWidget.apply(this,arguments);
if(d.state===0){this._prevOnWidget=this.jqwidget[g]
}},initializeJqWidget:function(){this.jqwidget={}
}})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideDropDownListView=a.view.GuideFieldView.extend({_defaultWidgetName:"dropDownList",initialize:function(){b._super.initialize.apply(this,arguments);
if(this._model.multiSelect){this._defaultWidgetName="listBox"
}},_valueToArray:function(e){var d;
if(e!==null&&!_.isUndefined(e)){d=e.split("\n")
}else{d=[null]
}return d
},createWidgetOptions:function(){var d=b._super.createWidgetOptions.apply(this,arguments);
return c.extend({},d,{multiSelect:this._model.multiSelect,editable:false,items:this._getItemsArray(),value:this._valueToArray(this._model.value)})
},handleCommit:function(){var d=this.jqwidget.option("value");
if(_.isArray(d)){d=d.join("\n")
}this._model.value=d
},handleValueChanged:function(d){this.jqwidget.option("value",this._valueToArray(d.prevText));
this.jqwidget.option("displayValue",this._valueToArray(d.newText))
},getCommitEvent:function(){return xfalib.ut.XfaUtil.prototype.XFA_CHANGE_EVENT
},_getItemsArray:function(){var e=[],d=this._model.items;
if(_.isArray(d)){_.each(d,function(i,g){var f=i.split("="),h={save:f[0],display:f[1]||f[0]};
e.push(h)
},this)
}return e
},handleModelChanged:function(d){if(d._property==="addItem"){this._handleAddItem(d)
}if(d._property==="clearItems"){this._handleClearItems(d)
}if(d._property==="deleteItem"){this._handleDeleteItem(d)
}else{b._super.handleModelChanged.apply(this,arguments)
}},_handleAddItem:function(e){var d={sDisplayVal:e.newText,sSaveVal:e.prevText};
this.jqwidget.addItem(d)
},_handleClearItems:function(d){this.jqwidget.clearItems()
},_handleDeleteItem:function(d){this.jqwidget.deleteItem(d.newText)
},handleItemsChanged:function(e){var d=this._getItemsArray(e.newText);
this.jqwidget.option("items",d);
this.jqwidget.option("value",this._valueToArray(this._model.value));
this.jqwidget.option("displayValue",this._valueToArray(this._model.formattedValue))
},_defineModelEvents:function(){b._super._defineModelEvents.apply(this,arguments);
if(this._model){this._model.on(a.event.GuideModelEvent.ITEMS_CHANGED,this.handleItemsChanged,this)
}},tempXfaFixes:function(){if(this.$element){if(!this._model.multiSelect){this.$element.find("select").css("position","relative").attr("id",this._model.id+"_widget")
}else{if(this._model.height){this.$element.find("ol").css("max-height","none")
}this.$element.find("ol").css("position","relative").attr("id",this._model.id+"_widget")
}}this.handleAccessibility()
}})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideScribbleView=a.view.GuideFieldView.extend({_defaultWidgetName:"ScribbleImageField",createWidgetOptions:function(){var d=b._super.createWidgetOptions.apply(this,arguments);
return c.extend({},d,{commitProperty:"src",geoLocMandatoryOnIpad:"false"})
},handleAccessibility:function(){if(this._model.mandatory){this.$widget.find("img").attr("aria-required",true)
}if(this._model._getScreenReaderText()===this._model._getToolTip()){this.$element.find("img").removeAttr("aria-label");
this.$element.find("img").attr("aria-labelledby",this._model.id+"_guideFieldShortDescription")
}else{if(this._model._getAssistPriority()==="none"){this.$element.find("img").attr("aria-label"," ")
}}if(this._model.longDescription){this.$element.find("img").attr("aria-describedby",this._model.id+"_guideFieldLongDescription")
}},tempXfaFixes:function(){if(this.$widget){this.$widget.css("position","relative").find("img").css("position","relative")
}this.handleAccessibility()
}})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideButtonView=a.view.GuideFieldView.extend({_defaultWidgetName:"xfaButton",handleClick:function(d){this._model.executeExpression("clickExp");
b._super.handleClick.call(this)
},tempXfaFixes:function(){if(this.$element){this.$element.find("button").css("position","relative")
}this.handleAccessibility()
}})
}(jQuery,guidelib));
(function(b,a){var c=a.view.GuideFileUploadView=a.view.GuideCompositeFieldView.extend({_defaultWidgetName:"fileUpload",getModelNameOptionsMap:function(){var d=c._super.getModelNameOptionsMap.apply(this,arguments);
return b.extend({},d,{fileAttachment:"value",comment:"comment"})
},createWidgetOptions:function(){var d=c._super.createWidgetOptions.apply(this,arguments);
return b.extend({},d,{buttonText:this._model.buttonText,multiSelect:this._model.multiSelection,fileSizeLimit:this._model.fileSizeLimit,buttonClass:"button.guide-fu-attach-button",fileItemListClass:"ul.guide-fu-fileItemList",iframeContainer:"div.guideContainerWrapperNode",showComment:this._model.showComment,value:this._model.fileAttachment.value,comment:this._model.comment.value})
},handleCommit:function(){c._super.handleCommit.apply(this,arguments);
this._model.fileList=this.jqwidget.option("fileList")
},handleModelChanged:function(d){switch(d._property){case"fileList":this.jqwidget.option("fileList",d.prevText);
break;
default:c._super.handleModelChanged.apply(this,arguments);
break
}},handleAccessibility:function(){var d=(b.browser.msie&&(b.browser.version==="9.0"||b.browser.version==="10.0"));
if(d){if(this._model.mandatory){this.$widget.attr("aria-required",true)
}if(this._model._getScreenReaderText()===this._model._getToolTip()){this.$widget.removeAttr("aria-label");
this.$widget.attr("aria-labelledby",this._model.id+"_guideFieldShortDescription")
}if(this._model.longDescription){this.$widget.attr("aria-describedby",this._model.id+"_guideFieldLongDescription")
}}else{c._super.handleAccessibility.apply(this,arguments)
}},tempXfaFixes:function(){this.handleAccessibility()
},getCommitEvent:function(){return xfalib.ut.XfaUtil.prototype.XFA_CHANGE_EVENT
}})
}(jQuery,guidelib));
(function(c,b,a){var d=a.view.GuideItemsView=a.view.GuideBaseView.extend({initialize:function(){d._super.initialize.call(this);
this.childViews=[]
},postInitialize:function(){this.childViews=b.reduce(this._model.children,function(e,g){var f=this._createNonRepeatChildView(g);
if(f){e.push(f)
}return e
},[],this);
this._syncGuideNodeToHtml(false)
},_createNonRepeatChildView:function(h){var f=this.guideUtil.modelElSelector(h.id);
var e=this.$element.find(f);
if(!e.length){e=this.$element.find(this.guideUtil.modelElSelector(h.templateId));
this._updateIds(e,h.templateId,h.id)
}if(e.length){var g=a.view.GuideViewRegistry.prototype.createView(e,this);
g.postInitialize();
return g
}return null
},_syncGuideNodeToHtml:function(e){if(e){b.each(this.childViews,function(f){f._syncGuideNodeToHtml(true)
},this)
}d._super._syncGuideNodeToHtml.call(this,e)
},_findChildView:function(f){var e=b.find(this.childViews,function(g){return g._model==f
},this);
return e
}});
d.defineProps({itemsView:{get:function(){var e=b.filter(this.childViews,function(f){return f.isItem
},this);
return e
}}})
}(jQuery,_,guidelib));
(function(d,c,a){var b=a.view.GuidePanelView=a.view.GuideItemsView.extend({initialize:function(){b._super.initialize.call(this);
this._currentActiveItemView=null;
this._$itemsContainer=null;
this._$itemsNavContainer=null;
this._$summary=null;
this._childInitializeWaiting=true;
this._model.on(a.event.GuideModelEvent.CHILD_CHANGED,this.handleChildChanged,this);
this._summarySelector=this.guideUtil.summarySelector(this._model.id)
},postInitialize:function(){c.each(this._model.children,function(h){if(h instanceof a.model.GuideInstanceManager){var g=h.id;
var f=(h._instances[0]||{}).id||h.instanceTemplateId;
var e='<div id="'+g+'" style="display: none" data-guide-template-marker="true"/>';
this.$itemsContainer.find(this.guideUtil.itemSelector(f)).before(e);
this.$itemsNavContainer.find(this.guideUtil.itemNavSelector(f)).before(e)
}},this);
if(!this.parentView._model.enableLayoutOptimization){this._postInitializeChildren()
}else{this.handleVisibleChanged(a.event.GuideModelEvent.createEvent(a.event.GuideModelEvent.MODEL_CHANGED,this,"visible",this._model.visible,this._model.visible))
}},_postInitializeChildren:function(){this._childInitializeWaiting=false;
this._syncGuideNodeToHtml(true);
this.handleAccessibility()
},_syncGuideNodeToHtml:function(j){if(this._childInitializeWaiting){return
}var h=this;
var i=this._guideView._domTemplateCacheStore;
var g={};
var e={};
var f={};
this.handleSummaryChanged();
c.each(this.childViews,function(k){if(k.isItem){g[k.id]=k
}else{e[k.id]=k
}},this);
c.each(this._model.items,function(q){var p=q.templateId;
var o=q.id;
var m=this._find(this.guideUtil.itemSelector(o));
var n=this._find(this.guideUtil.itemNavSelector(o));
if(!m.length&&!f[p]){m=this.$itemsContainer.find(this.guideUtil.itemSelector(p));
n=this.$itemsNavContainer.find(this.guideUtil.itemNavSelector(p))
}if(!m.length){m=i.cloneDomElement(this.guideUtil.itemSelector(p));
n=i.cloneDomElement(this.guideUtil.itemNavSelector(p));
if(!m.length){this.logger().error("guideView","Html template could not be found. cTemplateId:"+p+", som:"+q.somExpression);
return
}}this._updateIds(m,p,o);
this._updateIds(n,p,o);
m.attr("data-guide-parent-id",this._model.id);
n.attr("data-guide-parent-id",this._model.id);
var l=null;
if(g.hasOwnProperty(o)){l=g[o];
if(l instanceof a.view.GuidePanelView&&l._model.instanceManager.repeatable){this._fixChildDom(l)
}if(j){l._syncGuideNodeToHtml(j)
}}else{var k=this._find("#"+o);
if(k.length){l=this._createChild(k)
}else{k=m.find("#"+o);
if(k.length){l=this._createChild(k,m,n)
}else{this.logger().log("Skip creating view. could not find el for id:"+o)
}}}if(l){f[o]=l
}},this);
this.$itemsContainer.find('[data-guide-parent-id="'+h._model.id+'"]').each(function(){var m=d(this);
var k=m.attr("id");
var l=k.substring(0,k.length-h.guideUtil.GUIDE_ITEM_SUFFIX.length);
if(!f.hasOwnProperty(l)&&!window.guideBridge._resolveId(l)){h.logger().log("guideView",5,"removing element as no corresponding form dom node found. id:"+k+", parent id:"+h.id);
m.remove();
h._find(h.guideUtil.itemNavSelector(l)).remove()
}});
this.childViews=[];
c.each(this._model.children,function(n){var l=n._isItem;
var m=n.id;
if(l&&f.hasOwnProperty(m)){this.childViews.push(f[m])
}else{if(!l){var k=null;
if(e.hasOwnProperty(m)){k=e[m]
}else{k=this._createNonRepeatChildView(n)
}if(k){if(j){k._syncGuideNodeToHtml(j)
}this.childViews.push(k)
}}}},this);
a.view.GuideBaseView.prototype._syncGuideNodeToHtml.apply(this,arguments)
},_createChild:function(e,g,h){var f=a.view.GuideViewRegistry.prototype.createView(e,this);
this._fixChildDom(f,g,h);
f.postInitialize();
return f
},_fixChildDom:function(l,m,e){var i=l._model;
if(!i instanceof a.model.GuidePanel||!i.repeatable){return
}var k=m||l.$item;
var h=e||l.$itemNav;
var g=this._model.children;
var o=(i.instanceIndex>0)?g[g.indexOf(i)-1].id:null;
var n=o?this.guideUtil.itemSelector(o):"#"+i.instanceManager.id;
var f=o?this.guideUtil.itemNavSelector(o):"#"+i.instanceManager.id;
var j=this;
this.$itemsContainer.each(function(p){var q=k.get(p)||k.get(0);
d(this).find(n).after(d(q))
});
this.$itemsNavContainer.each(function(q){var p=h.get(q)||h.get(0);
d(this).find(f).after(d(p))
})
},handleChildChanged:function(e){this._syncGuideNodeToHtml(true);
if(e._property=="childRemoved"&&this.currentActiveItemView&&e.prevText==this.currentActiveItemView._model){this._currentActiveItemView=null;
this.setActive("nextItem")
}},handleSummaryChanged:function(){if(this.$summary){if(this._model.summary){this.$summary.text(this._model.summary)
}else{var e=this._model.title;
if(this._model.instanceIndex&&this._model.repeatable){e+=" "+this._model.instanceIndex
}this.$summary.text(e)
}}},handleModelChanged:function(e){switch(e._property){case"summary":this.handleSummaryChanged();
break;
default:b._super.handleModelChanged.apply(this,arguments)
}},setActive:function(h,g,k){var e=this.getOrElse(this.currentActiveItemView,"qualifiedName",null);
h=h||e||"firstItem";
if(h!=e){var i=this._model.navigationContext.getItemForNav(h);
if(!i){this.logger().log("AF","activeItemToken not found:"+h+",currentActiveItem:"+e+":"+this._model.somExpression);
return false
}var f=this.getQualifiedNamedView(i._escapeQualifiedName());
if(!k&&this._model.completionExpReq&&this.currentActiveItemView&&this.currentActiveItemView.focusable()&&(this.childViews.indexOf(f)>this.childViews.indexOf(this.currentActiveItemView))){var j=this._model.executeExpression("completionExp");
if(!j){return false
}else{if(this.currentActiveItemView){this.currentActiveItemView.$item.addClass("completed");
this.currentActiveItemView.$itemNav.addClass("completed")
}}}this.currentActiveItemView=f
}if(this.currentActiveItemView){this.currentActiveItemView.setActive(null,g,k)
}return true
},handleAccessibility:function(){var f,e;
e=this._model._getScreenReaderText();
f=this._model._getRole();
if(e){this.$itemNav.attr("aria-label",e)
}this.$itemNav.find("a").attr("tabindex",0)
},getQualifiedNamedView:function(f){var e=c.find(this.childViews,function(g){return(g._model._escapeQualifiedName()==f)
},this);
return e
}});
b.defineProps({hasNavigableLayout:{get:function(){return this.$itemsNavContainer.length>0
}},$itemsContainer:{get:function(){if(!this._$itemsContainer){this._$itemsContainer=this._find(this.guideUtil.itemContainerSelector(this._model.id))
}return this._$itemsContainer
}},$itemsNavContainer:{get:function(){if(!this._$itemsNavContainer){this._$itemsNavContainer=this._find(this.guideUtil.itemNavContainerSelector(this._model.id))
}return this._$itemsNavContainer
}},$summary:{get:function(){if(!this._$summary){this._$summary=this._find(this._summarySelector)
}return this._$summary
}},currentActiveItemView:{get:function(){return this._currentActiveItemView
},set:function(f){if(f!=this._currentActiveItemView){if(this._currentActiveItemView){this._currentActiveItemView._model.viewVisited=true
}if(!f){var e=this._model.navigationContext.firstItem;
if(e){f=this.getQualifiedNamedView(e._escapeQualifiedName())
}}this._currentActiveItemView=f;
if(this._currentActiveItemView instanceof a.view.GuidePanelView&&this._currentActiveItemView._childInitializeWaiting){this._currentActiveItemView._postInitializeChildren()
}this._model.navigationContext.currentItem=(this._currentActiveItemView||{})._model;
c.each(this.childViews,function(g){if(g==this._currentActiveItemView){g.$item.addClass("active");
g.$itemNav.addClass("active");
g.$itemNav.attr("aria-selected",true);
g.$itemNav.attr("aria-disabled",false);
g.$itemNav.removeClass("wizard-tab-disabled")
}else{g.$item.removeClass("active");
g.$itemNav.removeClass("active");
g.$itemNav.attr("aria-selected",false)
}},this);
if(this._model.toolbar){this._model.toolbar.execNavigationChangeExpression()
}}}}})
}(jQuery,_,guidelib));
(function(b,a){var c=a.view.GuideTermsAndConditionsView=a.view.GuideCompositeFieldView.extend({_defaultWidgetName:"tnc",getModelNameOptionsMap:function(){var d=c._super.getModelNameOptionsMap.apply(this,arguments);
return b.extend({},d,{reviewDocument:"value",reviewStatus:"reviewStatus"})
},createWidgetOptions:function(){var d=c._super.createWidgetOptions.apply(this,arguments);
return b.extend({},d,{textAreaClass:".guide-tnc-content",checkBoxClass:".guide-tnc-checkbox",linkClass:".guide-tnc-link",showLink:this._model.showLink,showAsPopUp:this._model.showAsPopUp,value:this._model.reviewDocument.value,reviewStatus:this._model.reviewStatus.value,clickStatus:this._model.clickStatus})
},tempXfaFixes:function(){if(this.$widget){this.$widget.css("position","relative")
}},handleCommit:function(d){this._model.clickStatus=this.jqwidget.option("clickStatus");
c._super.handleCommit.apply(this,arguments)
},handleModelChanged:function(d){switch(d._property){case"clickStatus":this.jqwidget.option("clickStatus",d.prevText);
break;
default:c._super.handleModelChanged.apply(this,arguments);
break
}},getCommitEvent:function(){return xfalib.ut.XfaUtil.prototype.XFA_CHANGE_EVENT
}})
}(jQuery,guidelib));
(function(c,b){var d=0;
var a=b.view.GuideListFileAttachmentButtonView=b.view.GuideButtonView.extend({_cloneFileAttachmentDOMs:function(h){if(h.className=="guideFileUpload"){var i=this._guideView._domTemplateCacheStore.cloneDomElement("#"+h.id),g="#"+h.id+"_widget";
i.find(g).attr("id",h.id+"_widget"+(++d));
var f=c("<div/>").addClass("row").append('<div class="col-md-12"></div>');
this.$element.parent().find("#fileAttachment .modal-list").append(i.appendTo(f));
var e=b.view.GuideViewRegistry.prototype.createView(i,this);
e.postInitialize()
}},initialize:function(){a._super.initialize.apply(this,arguments);
guideBridge.visit(c.proxy(this._cloneFileAttachmentDOMs,this))
}})
}(jQuery,guidelib));
(function(c,a){var b=a.view.GuideContainerView=a.view.GuideItemsView.extend({initialize:function(){window.guideBridge._guideView=this;
var d=c(this.options.element).clone();
this._domTemplateCacheStore=new a.view.util.DomTemplateCacheStore({$htmlTemplateDom:d});
b._super.initialize.call(this);
this._currentFocusItemSom=null;
this._previousFocusItemSom="FIRST_TIME";
c(window).on("keydown.guides",c.proxy(this.hotKeys,this));
this.postInitialize();
this._model.on(a.event.GuideModelEvent.MODEL_REFRESH,function(e){switch(e._property){case"jsonModel":this._syncGuideNodeToHtml(true);
break;
default:this._model.logger().error("unexpected event property "+e._property)
}},this)
},setFocus:function(r,n,l){var p=!l;
if(n=="nextItemDeep"||n=="prevItemDeep"){if(r){this.logger().warn("AF","somExpression is currently not supported for deepNavigation:"+r+":"+n);
return false
}var i=this.getSomOnNavigableAncestor(this._currentFocusItemSom||this._previousFocusItemSom);
var o=this.getView(i);
var h=(n=="nextItemDeep")?"nextItem":"prevItem";
while(o&&(o.parentView!=this)&&!o.getSiblingItemView(h)){var j=this.getSomOnNavigableAncestor(o.parentView._model.somExpression);
o=this.getView(j)
}if(o&&o.parentView!=this&&o.getSiblingItemView(h)){var d=o.parentView.setActive(h,false,p);
if(!d){this.logger().log("AF","could not setActive for the deepNav:"+o._model.somExpression);
return false
}var f=(h=="nextItem")?"firstItem":"lastItem";
var g=o.parentView.currentActiveItemView;
while(g){g.setActive(f,!g.currentActiveItemView,true);
g=g.currentActiveItemView
}return true
}else{this.logger().warn("AF","could not locate view for given somExpression:"+r+":"+n);
return false
}}if(!r){r=this.guideModel.rootPanel.somExpression
}var k=this.rootPanelView;
var e=this.guideUtil.relativeSom(this.guideModel.rootPanel.somExpression,r);
if(e){var q=e.split(".");
var m=_.find(q,function(s){k.setActive(s,false,p);
if(k instanceof a.view.GuidePanelView&&(k.currentActiveItemView==null||k.currentActiveItemView.qualifiedName!=s)){this.logger().log("AF","could not find token:"+s+", som:"+r);
return true
}else{k=k.currentActiveItemView
}},this);
if(m){return false
}}if(k){return k.setActive(n,true,p)
}else{return false
}},_getGuideDomElement:function(d,f){var i="",e,g,h;
if(d&&typeof d==="string"){g=this.guideModel.resolveNode(d);
if(!g){return
}h="#"+g.id;
if(f==="nav"){h=this.guideUtil.itemNavSelector(g.id)
}e=this.$element.find(h);
return e
}},getView:function(f){if(!f){return null
}var i=this._getGuideDomElement(f),d=null,h=null;
if(i){if(!i.data("guideView")){var g=this.guideModel.rootPanel.somExpression;
var e=a.util.GuideUtil.relativeSom(g,f)||"";
_.reduce(e.split("."),function(k,j){k=k?k+"."+j:j;
h=this.getView(k);
if(h instanceof a.view.GuidePanelView&&h._childInitializeWaiting){h._postInitializeChildren()
}return k
},g,this)
}d=i.data("guideView");
if(d instanceof a.view.GuidePanelView&&d._childInitializeWaiting){d._postInitializeChildren()
}return d
}return null
},hotKeys:function(f){var d=false,e;
switch(f.keyCode){case 37:if(f.altKey){window.guideBridge.setFocus(null,"prevItemDeep",true);
d=true
}break;
case 39:if(f.altKey){window.guideBridge.setFocus(null,"nextItemDeep",true);
d=true
}break;
case 82:if(f.altKey){window.guideBridge.reset();
d=true
}break;
case 83:if(f.altKey){window.guideBridge.submit();
d=true
}break
}if(d){f.preventDefault()
}},getSomOnNavigableAncestor:function(d){if(!d||d===""){return null
}var f,h,e,g;
f=d.lastIndexOf(".");
if(f!==-1){e=d.substring(0,f);
h=this.getView(e);
if(h){g=h.hasNavigableLayout
}if(g){return d
}return this.getSomOnNavigableAncestor(e)
}if(this.rootPanelView.$itemsNavContainer.length>0){return this.guideModel.rootPanel.somExpression
}},__printSyncPending:function(){_.each(this.childViews,function(d){if(d._syncPending){this.logger().error("AF",d._model.somExpression)
}else{b.prototype.__printSyncPending.call(d)
}},this)
}});
b.defineProps({guideModel:{get:function(){return this._model
}},rootPanelView:{get:function(){return this._findChildView(this.guideModel.rootPanel)
}},currentFocusItemSom:{get:function(){return this._currentFocusItemSom
},set:function(g){if(this._currentFocusItemSom!==g){var d=this._currentFocusItemSom;
if(d){this._previousFocusItemSom=d
}this._currentFocusItemSom=g;
if(g){this._triggerOnBridge("elementFocusChanged",this,"focus",this._previousFocusItemSom,g);
if(this._previousFocusItemSom){var f=this.getSomOnNavigableAncestor(this._previousFocusItemSom),e=this.getSomOnNavigableAncestor(g);
if(e!==f){this._triggerOnBridge("elementNavigationChanged",this._model.resolveNode(e),"navigate",f,e)
}}}}}}})
}(jQuery,guidelib));
(function(d,b,a){var c=a.view.GuideViewRegistry=xfalib.ut.Class.extend({_findWidget:function(g,f,h){var e=b.find(g,function(j,i){return f===i
});
if(e===undefined){e=b.find(g,function(j,i){return h===i
})
}return e
},_findWidgetNameFromCSS:function(f){var e=null;
if(b.isString(f)){b.find(f.split(" "),function(g,i){var h=g.match(/^widget_([\w\W]+)$/);
if(h&&h.length===2){e=h[1];
return true
}return false
})
}return e
},createView:function(g,n){var m=d(g);
var o={element:m.get(0),widgetName:m.data("guideViewWidget"),parentView:n};
var j=m.data("guideViewBind");
var h=window.guideBridge._resolveId(j);
if(h){o.model=h;
var f=h.className;
var e=f.charAt(0).toUpperCase()+f.substr(1)+"View";
var k=a.view[e],l=window.guideBridge.userConfig.widgetConfig;
if(h instanceof a.model.Field){o.widgetName=this._findWidgetNameFromCSS(h.cssClassName)||this._findWidget(l,h.name,h.className)
}if(!k&&h instanceof a.model.GuideContainerNode){k=a.view.GuideContainerView
}if(!k&&h instanceof a.model.Field){k=a.view.GuideFieldView
}if(!k&&h instanceof a.model.GuidePanel){k=a.view.GuidePanelView
}if(!k&&h instanceof a.model.GuideItemsContainer){k=a.view.GuideItemsView
}if(!k){k=a.view.GuideBaseView
}var i=new k(o);
return i
}}})
})(jQuery,_,guidelib);
(function(c,b){var a=b.view.util.DomTemplateCacheStore=xfalib.ut.Class.extend({cloneDomElement:function(d){return this.$htmlTemplateDom.find(d).clone()
}});
a.defineProps({$htmlTemplateDom:{get:function(){return this.options.$htmlTemplateDom
}}})
}(jQuery,guidelib));
(function(c){var e={placeHolderText:"Enter comments here"};
var d=function(g,f){this.options=f;
this.$elementFileUploadBtn=[];
this.$elementFileList=[];
this.$element=c(g);
this.$parent=this.$element.parent()
};
var b=(c.browser.msie&&(c.browser.version==="9.0"||c.browser.version==="10.0")),a=0;
d.prototype={_fileIframeName:"guide-fu-iframe",_addFile:"Add File",clear:function(){this.$element.val("");
this.$elementFileList.empty()
},destroy:function(){this.$fileDomElements=c.map(this.$fileDomElements,function(f){if(_.isObject(f)&&f.val().length===0){return f
}});
this.values=[];
if(b){if(_.last(this.$fileDomElements)==null){this.cloneFileInputAndUpdateIdForIE9()
}else{this.updateLabelForAttr(_.last(this.$fileDomElements).attr("id"))
}}this.$element.trigger("change.fileupload")
},_setUrl:function(g,f){this.$elementFileList.find("span.guide-fu-fileName").eq(f).data("key",g)
},_getUrl:function(f){return this.$elementFileList.find("span.guide-fu-fileName").eq(f).data("key")
},value:function(i){if(!_.isUndefined(i)){var g=this,j=this.comment(),h=false,k={};
this.$elementFileList.children().find("span.guide-fu-fileName").each(function(){var l=c(this).data("key");
if(!_.isUndefined(l)){var m=l.substring(l.lastIndexOf("/")+1);
k[m]=l
}});
this.$elementFileList.empty();
if(i!=null){var f=i.split("\n");
this.values=_.map(f,function(p,n){var o=p.lastIndexOf("/"),l=p,m=null;
if(o!==-1){l=m=p;
p=p.substring(o+1);
if((_.isObject(g.$fileDomElements[n])&&g.$fileDomElements[n].val().length>0)||_.isString(g.$fileDomElements[n])){h=true;
g.$fileDomElements[n]=null
}else{if(g.$fileDomElements[n]!==null){h=true;
g.$fileDomElements.splice(n,0,null)
}}}if(k[p]){m=k[p]
}g.showFileList(p,j[n],m);
return l
});
if(h){this.$element.trigger("change.fileupload")
}}else{if(_.isArray(this.values)&&this.values.length!==0){this.destroy()
}}}else{return this.values
}},fileAttachment:function(){return this.values
},comment:function(h){var f=this,g=null,i;
if(!_.isUndefined(h)){if(h!=null){i=h.split("\n");
g=this.$elementFileList.find("div.guide-fu-comment");
g.each(function(j){c(this).html(i[j])
})
}}else{g=this.$elementFileList.find("div.guide-fu-comment");
i=[];
g.each(function(){i.push(c(this).html())
});
return i
}},multiSelect:function(f){if(f!==undefined){this.options.multiSelect=f
}else{return this.options.multiSelect
}},fileSizeLimit:function(f){if(f!==undefined){this.options.fileSizeLimit=f
}else{return this.options.fileSizeLimit
}},access:function(f){if(f=="readOnly"){this.$element.attr("disabled","disabled")
}else{if(f=="open"){this.$element.removeAttr("disabled")
}}},fileList:function(h){var g,f=this;
if(h!==undefined){this.$fileDomElements=[];
_.each(h,function(j,i){if((_.isObject(j)&&(b||j.val().length>0))||(_.isString(j))){if(_.isString(j)){j=null
}f.$fileDomElements[i]=j
}});
g=this.$fileDomElements;
if(b&&h!==null){if(_.last(this.$fileDomElements)==null){this.cloneFileInputAndUpdateIdForIE9()
}else{this.updateLabelForAttr(_.last(this.$fileDomElements).attr("id"))
}}}else{g=c.map(this.$fileDomElements,function(j,i){if(!j){return f._getUrl(i)
}else{if((j[0].files&&j[0].files.length!==0)||(f.options.multiSelect||j[0].value.length>0)){return j
}}})
}return g
},fileItemPreview:function(){return c("<span></span>").addClass("guide-fu-filePreview glyphicon glyphicon-ok")
},buttonText:function(g,f){if(g!==undefined){if(!f){this.options.buttonText=g
}this.$elementFileUploadBtn.find("span.guide-fu-label").html(g)
}else{return this.options.buttonText
}},btnIcon:function(){return c("<span></span>").addClass("guide-fu-icon glyphicon glyphicon-folder-open")
},btnLabel:function(){return c("<span></span>").addClass("guide-fu-label").html(this.options.buttonText)
},fileItemList:function(){return this.$parent.find(this.options.fileItemListClass)
},getNewCommentElementSummary:function(f){return c("<div title='Click to edit' tabindex='0'></p>").addClass("guide-fu-comment").text(f||e.placeHolderText)
},getNewCommentElement:function(f){return c("<div contenteditable='true' tabindex='0'></div>").addClass("guide-fu-comment").text(f||"")
},fileItem:function(j,i,g){var f=c("<li></li>").addClass("guide-fu-fileItem");
var h=c("<span tabindex='0'></span>").addClass("guide-fu-fileName").attr("aria-label",j).text(j).appendTo(f).keypress(function(k){if(k.keyCode===13||k.charCode===32){c(k.target).click()
}}).click(c.proxy(this.handleFilePreview,this));
if(g!=null){h.attr("data-key",g)
}c("<span tabindex='0'></span>").addClass("guide-fu-fileClose close").attr("role","button").attr("aria-label",guidelib.i18n.strings.FileCloseAccessText+j).text("x").appendTo(f).keypress(function(k){if(k.keyCode===13||k.charCode===32){c(k.target).click()
}}).click(c.proxy(this.handleClick,this));
this.fileItemPreview().appendTo(f);
if(this.options.showComment){this.getNewCommentElementSummary(i).appendTo(f).focus(c.proxy(this.handleCommentClick,this)).click(c.proxy(this.handleCommentClick,this))
}return f
},toggleFileUploadBtn:function(){if(this.options.multiSelect){if(this.$elementFileList.children().length>0){this.buttonText(this._addFile,true);
this.$elementFileUploadBtn.find("span.guide-fu-icon").removeClass("glyphicon-folder-open").addClass("glyphicon-plus")
}else{this.buttonText(this.options.buttonText);
this.$elementFileUploadBtn.find("span.guide-fu-icon").removeClass("glyphicon-plus").addClass("glyphicon-folder-open")
}}},showInvalidSize:function(f){alert(guidelib.util.GuideUtil.getLocalizedMessage("AF",guidelib.i18n.LogMessages["AEM-AF-901-002"],[f,this.options.fileSizeLimit]))
},_getIndexOfText:function(g){var f=-1;
_.find(this.values,function(j,h){var i=j;
if(i.match(/\//g)&&i.match(/\//g).length>1){i=j.substring(j.lastIndexOf("/")+1)
}if(i===g){f=h;
return j
}});
return f
},handleClick:function(j){var g=c(j.target),k=g.prev().html(),i=this._getIndexOfText(k),h=g.prev().data("key"),f=null;
if(i!=-1){this.values.splice(i,1);
this.$fileDomElements.splice(i,1);
if(b){this.cloneFileInputAndUpdateIdForIE9()
}}g.parent().remove();
this.$element.trigger("change.fileupload");
this.$elementFileUploadBtn.focus()
},handleFilePreview:function(j){var h=c(j.target),l=h.html(),i=this._getIndexOfText(l),k=null,m=null,f=null,g=new Date().getTime();
if(i!=-1){if(!_.isUndefined(h.data("key"))){f=h.data("key")
}if(f){f=guideBridge._getUrl(f);
this.previewFile.apply(this,[null,{fileUrl:f}])
}else{k=this.$fileDomElements[i];
m=g+"-"+this.values[i];
f=this.$element.adobeFileUploader("uploadFile",{fileName:m,fileDom:k});
f=guideBridge._getUrl(f);
h.data("key",f)
}}},previewFile:function(g){var f=null;
if(_.isUndefined(arguments[1])){f=this.$element.adobeFileUploader("getFileUrl")
}else{f=arguments[1].fileUrl
}window.open(f,"","scrollbars=no,menubar=no,height=600,width=800,resizable=yes,toolbar=no,status=no")
},resetIfNotMultiSelect:function(){if(!this.options.multiSelect){this.values=[]
}},showFileList:function(h,g,f){if(!this.options.multiSelect||h==null||_.isUndefined(h)){this.$elementFileList.empty()
}if(h!=null){this.$fileItem=this.$elementFileList.append(this.fileItem(h,g,f))
}},handleCommentClick:function(g){var h=null,f=c(g.target);
if(f.text()===e.placeHolderText){h=this.getNewCommentElement()
}else{h=this.getNewCommentElement(c(g.target).text())
}f.replaceWith(h);
if(b){h.focus().focusout(c.proxy(this.handleCommentBlur,this))
}else{h.focus().blur(c.proxy(this.handleCommentBlur,this))
}},handleCommentBlur:function(h){var g=null,f=c(h.target);
if(f.text()===e.placeHolderText){g=this.getNewCommentElementSummary()
}else{g=this.getNewCommentElementSummary(c(h.target).text())
}f.replaceWith(g);
g.focus(c.proxy(this.handleCommentClick,this)).click(c.proxy(this.handleCommentClick,this));
this.$element.trigger("change.fileupload")
},handleChange:function(j){var i="",f="",g=c(j.target),h=g[0].files;
this.isInvalid=false;
this.resetIfNotMultiSelect();
if(b){i=g.val().split("\\").pop();
if(this.$fileDomElements.length>0){this.$fileDomElements[this.$fileDomElements.length-1]=g
}this.cloneFileInputAndUpdateIdForIE9();
if(_.isUndefined(h)){this.showFileList(i);
this.values.push(i);
this.$element.trigger("change.fileupload")
}}if(!_.isUndefined(h)){_.each(h,function(l){i=l.name.split("\\").pop();
var k=l.size/1024/1024;
if((k>parseFloat(this.options.fileSizeLimit))){this.isInvalid=true;
f=i+","+f
}if(!this.isInvalid){this.showFileList(i);
this.values.push(i)
}else{this.$fileDomElements.splice(-1,1);
if(b){this.cloneFileInputAndUpdateIdForIE9()
}}this.$element.trigger("change.fileupload")
},this)
}if(this.isInvalid){this.showInvalidSize(f.substring(0,f.lastIndexOf(",")))
}},cloneFileInputAndUpdateIdForIE9:function(){var h=_.last(this.$fileDomElements),i=h!=null,g=i&&h.val().length>0,j=null,f=null;
if(!i||(g&&this.options.multiSelect)){h=this.$element.clone();
if(b){j=this.$element.attr("id")+(++a);
h.attr("id",j);
h.css({position:"absolute",top:"-2000px",left:"-2000px"});
h.appendTo("body");
this.updateLabelForAttr(j)
}h.change(c.proxy(this.handleChange,this));
this.$fileDomElements.push(h)
}if(!this.options.multiSelect&&this.$fileDomElements[0]===null){this.$fileDomElements.splice(0,1)
}if(!b){h.click()
}return true
},updateLabelForAttr:function(f){this.$label.attr("for",f)
},createLabelForFileInput:function(f){if(b){this.$label=c("<label></label>").addClass("guide-fu-attach-button button").text(this.options.buttonText).attr("for",f);
this.$elementFileUploadBtn.replaceWith(this.$label);
this.$label.parent().attr("tabindex",0).attr("role","button").attr("aria-label",this.options.screenReaderText||"")
}},constructor:function(){var g=this,f=true;
this.$elementFileUploadBtn=this.$parent.find(this.options.buttonClass);
this.$elementFileUploadBtn.attr("aria-label",this.options.screenReaderText||"");
if(b){this.elementId=this.$element.attr("id");
this.createLabelForFileInput(this.$element.attr("id"))
}this.$elementFileList=c(this.fileItemList());
this.values=[];
this.$fileDomElements=[];
this.$fileDomElements.push(this.$element);
var h=false,i=null;
c(document).mousedown(function(j){i=c(j.target)
});
this.$elementFileUploadBtn.keypress(function(j){if(j.keyCode===13||j.charCode===32){g.$elementFileUploadBtn.click()
}}).focus(function(){g.$element.trigger("focus.fileupload")
}).click(c.proxy(this.cloneFileInputAndUpdateIdForIE9,this)).blur(function(j){if(!h&&i!=null&&i.closest(".guide-fu-fileItemList").length<=0){g.$element.trigger("focusout.fileupload")
}h=false
});
this.$element.adobeFileUploader({iframeContainer:this.options.iframeContainer});
this.$element.change(c.proxy(this.handleChange,this)).on("adobeFileUploader.fileUploaded",c.proxy(this.previewFile,this))
}};
c.fn.adobeFileAttachment=function(h,i){var f="",g=this.each(function(){if(c(this).attr("type")==="file"){var l=c(this),k=l.data("adobeFileAttachment"),j=c.extend({},d.prototype.defaults,typeof h==="object"&&h);
if(!k){l.data("adobeFileAttachment",(k=new d(this,j)));
k.constructor()
}if(typeof h==="string"){f=k[h](i)
}}});
if(typeof f!==undefined){return f
}else{return g
}};
d.prototype.defaults={buttonText:"Attach",multiSelect:false,fileSizeLimit:2}
})(window.jQuery);
(function(b){var a=xfalib.ut.XfaUtil.prototype;
b.widget("xfaWidget.fileUpload",b.xfaWidget.abstractWidget,{_widgetName:"fileUpload",_super:b.xfaWidget.abstractWidget.prototype,getOptionsMap:function(){var d=this._super.getOptionsMap.apply(this,arguments),c=b.extend({},d,b.extend({},this.options,{value:function(e){this.$userControl.adobeFileAttachment("value",e)
},fileList:function(e){this.$userControl.adobeFileAttachment("fileList",e)
},comment:function(e){this.$userControl.adobeFileAttachment("comment",e)
},access:function(e){this.$userControl.adobeFileAttachment("access",e)
}}));
return c
},_getFileList:function(){return this.$userControl.adobeFileAttachment("fileList")
},_getComment:function(){return this.$userControl.adobeFileAttachment("comment")
},getEventMap:function(){var d=this._super.getEventMap.apply(this,arguments),c=b.extend({},d,{change:null,"focusout.fileupload":a.XFA_EXIT_EVENT,"focus.fileupload":a.XFA_ENTER_EVENT,"change.fileupload":a.XFA_CHANGE_EVENT});
return c
},render:function(){var c=this._super.render.apply(this,arguments);
c.adobeFileAttachment(this.getOptionsMap());
return c
},showDisplayValue:function(){},showValue:function(){},getCommitValue:function(){this.options.fileList=this._getFileList();
this.options.comment=this._getComment();
return this.$userControl.adobeFileAttachment("value")
}})
})(jQuery);
(function(c){var d=null;
var b={};
var a=function(f,e){this.options=e;
this.$element=c(f)
};
a.prototype={_fileIframeName:"guide-fu-iframe",_filePath:"/tmp/fd/af",_iframeContainer:"body",fileIframe:function(e){return c("<iframe></iframe>").attr({style:"display:none",name:e})
},uploadFile:function(h){var e=false,l=null,j=null,i=guideBridge._getUUID();
if(_.isObject(h)&&i){var k=h.fileDom,g=h.fileUploadPath,f=null;
l=h.fileName;
e=h.multiple;
if(!g){g=this.options.fileUploadPath+"/"+i
}if(k!==null){j=guideBridge._getUrl(g);
if(!e){this.fileUrl=j+"/"+l
}else{this.fileUrl=j
}f=c("<form method='post' enctype='multipart/form-data'/>").css({position:"absolute",top:"-1000px",bottom:"-1000px"}).attr({action:j,target:this.options.iframeName}).appendTo("body");
if(e){_.each(k,function(n,m){if(n!==null){c(n[0]).attr("name",l[m]).appendTo(f)
}},this)
}else{k.attr("name",l).appendTo(f)
}c("<input type='hidden' name='_charset_' value='UTF-8'/>").appendTo(f);
if(!e){b[this.fileUrl]=this.$element;
d.on("load",(c.proxy(this.handleIframeLoad,this)))
}else{d.on("load",(c.proxy(this.handleIframeLoadMultiple,this)))
}f.submit()
}}return this.fileUrl
},handleIframeLoadMultiple:function(){this.$element.trigger("adobeFileUploader.multipleFileUploaded");
d.off("load")
},getFileUrl:function(){return this.fileUrl
},getUrlFromIframeContents:function(){var e=this.options.iframeContainer+" iframe[name='"+this.options.iframeName+"']",f=c(e).contents().find("#ChangeLog").html().split("br",2)[1];
f=f.substring(f.indexOf("created")+9,f.indexOf(";&lt;"));
f=f.substring(0,f.length-2);
var g=f.indexOf("/jcr:content");
if(g!==-1){f=f.substring(0,g)
}return f
},handleIframeLoad:function(){var e=this.getUrlFromIframeContents();
e=guideBridge._getUrl(e);
if(e in b){b[e].trigger("adobeFileUploader.fileUploaded");
d.off("load")
}},initialize:function(){if(d==null){d=this.fileIframe(this.options.iframeName).appendTo(this.options.iframeContainer)
}}};
c.fn.adobeFileUploader=function(g,h){var e="",f=this.each(function(){if(c(this).attr("type")==="file"){var k=c(this),j=k.data("adobeFileUploader"),i=c.extend({},a.prototype.defaults,typeof g==="object"&&g);
if(!j){k.data("adobeFileUploader",(j=new a(this,i)));
j.initialize()
}if(typeof g==="string"){e=j[g](h)
}}});
if(typeof e!==undefined){return e
}else{return f
}};
a.prototype.defaults={fileUploadPath:a.prototype._filePath,iframeName:a.prototype._fileIframeName,fileUploadServlet:a.prototype._filePath,iframeContainer:a.prototype._iframeContainer}
})(window.jQuery);
(function(c,d){var b=(d.browser.msie&&(d.browser.version==="9.0"||d.browser.version==="10.0"));
var f={showLink:false,scrollMode:"vertical",textAreaClass:".guide-tnc-content",checkBoxClass:".guide-tnc-checkbox",linkClass:".guide-tnc-link",documentVisitedClass:".guide-tnc-document-visited",documentUnVisitedClass:".guide-tnc-document-unvisited"};
var e={REVIEWED:"reviewed",UNREVIEWD:"unreviewed",AGREE:"agree"};
var a=function(l,k){this.options=k;
this.$element=d(l);
this.enters=this.leaves=0;
this.inside=false;
this.reviewdoc=this.status=e.UNREVIEWD;
this.$elementCheckBox=this.$element.find(this.options.checkBoxClass||f.checkBoxClass);
this.$elementTextArea=d(this.textArea());
this.$elementLink=d(this.link());
this.isTextContentVisible=false;
if(this.options.showLink){this.$elementLink.find("a").click(d.proxy(this.handleReviewStatusChange,this))
}else{var i=this.hasScrollBar(this.$elementTextArea.get(0));
if(i){this.$elementTextArea.scroll(d.proxy(this.handleReviewStatusChange,this))
}else{if(this.$elementTextArea.css("display")!=="none"){this.status=e.REVIEWED;
this.isTextContentVisible=true;
if(!this.options.showAsPopUp){this.enableCheckBox()
}this.reviewDoc=this.$elementTextArea.text()
}}}if(this.options.showAsPopUp){var m=this.options.documentUnVisitedClass||f.documentUnVisitedClass,j=this.options.documentVisitedClass||f.documentVisitedClass;
var g=this,h=this.$elementCheckBox.find("a").keydown(function(n){if(n.keyCode===13||n.which==13||n.charCode===32){d(this).click();
return false
}}).click(function(n){if(d(this).hasClass(m.substring(1))){d(this).toggleClass(j.substring(1)+" "+m.substring(1))
}if(g.isTextContentVisible){g.enableCheckBox()
}}).attr("href");
d(h).on("hidden.bs.modal",function(n){g.$elementCheckBox.find("input").focus()
})
}else{this._updateScreenReaderText()
}this.$elementCheckBox.find("input").change(d.proxy(this.handleCheckBoxChange,this))
};
a.prototype={clear:function(){this.$element.val("")
},destroy:function(){this.$element.val("");
this.$element.empty()
},_updateScreenReaderText:function(){if(!this.options.showAsPopUp){var g=this;
this.$element.find(".guide-tnc-sr-only").each(function(h,j){d(this).html(g.options.screenReaderText)
})
}},_restoreClickState:function(k){if(this.options.showLink){var g=k.split("\n"),j=[];
c.each(g,function(m,l){j.push(c.last(m.split("=")))
});
var i=this.options.documentUnVisitedClass||f.documentUnVisitedClass,h=this.options.documentVisitedClass||f.documentVisitedClass;
this.$elementLink.find("a").each(function(l){d(this).data("clicked",j[l]);
if(j[l]==="1"){d(this).addClass(h.substring(1))
}else{d(this).addClass(i.substring(1))
}})
}},value:function(g){if(g){if(this.options.showLink){this._restoreClickState(g)
}this.reviewDoc=g
}else{return this.reviewDoc
}},reviewStatus:function(g){var h=this.getClickState();
if(!c.isUndefined(g)){if(g=="true"){this.enableCheckBox();
this.$elementCheckBox.find("input").attr("checked","checked")
}this.approvalStatus=g
}else{if(this.status==e.REVIEWED||this.status==e.UNREVIEWD){return null
}else{if(this.status==e.AGREE){return true
}}}},clickStatus:function(h){if(h){if(h===e.REVIEWED){var g=this.getClickState();
if(c.isArray(g)&&g.length>0){g=g.join("\n");
this._restoreClickState(g)
}this.enableCheckBox()
}this.status=h
}else{return this.status
}},showLink:function(g){if(g!==undefined){this.options.showLink=g
}else{return this.options.showLink
}},access:function(g){this.accessOption=g;
if(g=="readOnly"){this.disableCheckBox();
if(this.options.showLink){this.$elementLink.find("a").each(function(h,i){d(i).css("pointer-events","none");
d(i).attr("disabled","disabled")
})
}}else{if(g=="open"){if((this.status==e.REVIEWED||this.status==e.AGREE)&&!this.options.showAsPopUp){this.enableCheckBox()
}if(this.options.showLink){this.$element.find("a").each(function(h,i){d(i).css("pointer-events","");
d(i).removeAttr("disabled")
})
}}}},link:function(){return this.$element.find(this.options.linkClass||f.linkClass)
},textArea:function(){return this.$element.find(this.options.textAreaClass||f.textAreaClass)
},getClickState:function(){if(this.options.showLink){var g=[];
this.$elementLink.find("a").each(function(h){g.push({displayText:d(this).text(),linkText:d(this).attr("href"),clicked:d(this).data("clicked")})
});
return g
}},enableCheckBox:function(){if(this.accessOption!=="readOnly"){this.$elementCheckBox.find("input").removeAttr("disabled")
}},disableCheckBox:function(){this.$elementCheckBox.find("input").attr("disabled","disabled")
},handleReviewStatusChange:function(l){var i=[],j=this.options.documentVisitedClass||f.documentVisitedClass;
if(this.options.showLink){this.status=e.REVIEWED;
d(l.target).data("clicked",1);
d(l.target).addClass(j.substring(1));
this.linkStateMap=this.getClickState();
c.each(this.linkStateMap,function(o,n){if(!o.clicked){this.status=e.UNREVIEWD
}i.push(o.displayText+"="+o.linkText+"="+(c.isUndefined(o.clicked)?"0":"1"))
},this);
if(i.length>0){this.reviewDoc=i.join("\n")
}if(this.status==e.REVIEWED){this.enableCheckBox()
}this.$element.trigger("reviewComplete.tnc")
}else{var h=this.getScroll(this.$elementTextArea.get(0)),m=h[this.options.scrollMode=="vertical"?"y":"x"],k=this.getScrollSize(this.$elementTextArea.get(0)).y-this.getSize(this.$elementTextArea.get(0)).y,g=0;
this.reviewDoc=this.$elementTextArea.text();
if(m>=k&&(g==0||m<=g)){if(!this.inside){this.inside=true;
this.enters++;
this.status=e.REVIEWED;
this.enableCheckBox();
this.$element.trigger("reviewComplete.tnc",[h,this.enters,l])
}}else{if(this.inside){this.inside=false;
this.leaves++
}}}},handleCheckBoxChange:function(g){if(d(g.target).is(":checked")){this.status=e.AGREE
}else{this.status=e.UNREVIEWD
}this.$element.trigger("checkboxStateChange.tnc")
},getScrollSize:function(g){return{x:g.scrollWidth,y:g.scrollHeight}
},getScroll:function(g){return{x:g.scrollLeft,y:g.scrollTop}
},getSize:function(g){return{x:g.offsetWidth,y:g.offsetHeight}
},_getScrollParams:function(j,h){var i=j[0],g=h.parent().css("height");
d(i).css({top:"-2000px",left:"-2000px","max-height":h.css("max-height"),height:(g!=="0px")?g:"auto",overflow:"auto",position:"absolute"}).appendTo("body");
return{scrollHeight:i.scrollHeight,clientHeight:d(i).height(),scrollWidth:i.scrollWidth,clientWidth:d(i).width()}
},hasScrollBar:function(i){var h=d(i).clone(),g=this._getScrollParams(h,d(i));
h.remove();
if(b){return g.scrollHeight>g.clientHeight||((g.scrollWidth-2)>g.clientWidth)
}else{return g.scrollHeight>g.clientHeight||g.scrollWidth>g.clientWidth
}}};
d.fn.afTnc=function(i,j){var g="",h=this.each(function(){var m=d(this),l=m.data("AfTnc"),k=d.extend({},f,typeof i==="object"&&i);
if(!l){m.data("AfTnc",(l=new a(this,k)))
}if(typeof i==="string"){g=l[i](j)
}});
if(typeof g!==undefined){return g
}else{return h
}}
})(_,window.jQuery);
(function(b){var a=xfalib.ut.XfaUtil.prototype;
b.widget("xfaWidget.tnc",b.xfaWidget.abstractWidget,{_widgetName:"tnc",_super:b.xfaWidget.abstractWidget.prototype,getOptionsMap:function(){var d=this._super.getOptionsMap.apply(this,arguments),c=b.extend({},d,b.extend({},this.options,{value:function(e){this.$userControl.afTnc("value",e)
},reviewStatus:function(e){this.$userControl.afTnc("reviewStatus",e)
},clickStatus:function(e){this.$userControl.afTnc("clickStatus",e)
},access:function(e){this.$userControl.afTnc("access",e)
}}));
return c
},_getReviewStatus:function(){return b(this.element).afTnc("reviewStatus")
},_getClickStatus:function(){return b(this.element).afTnc("clickStatus")
},getEventMap:function(){var d=this._super.getEventMap.apply(this,arguments),c=b.extend({},d,{change:null,"reviewComplete.tnc":a.XFA_CHANGE_EVENT,"checkboxStateChange.tnc":a.XFA_CHANGE_EVENT});
return c
},render:function(){this._super.render.apply(this,arguments);
b(this.element).afTnc(this.getOptionsMap());
return b(this.element)
},showDisplayValue:function(){},showValue:function(){},getCommitValue:function(){this.options.reviewStatus=this._getReviewStatus();
this.options.clickStatus=this._getClickStatus();
return b(this.element).afTnc("value")
}})
})(jQuery);
(function(a){var b=a.util.GuideErrorManager=xfalib.ut.Class.extend({_defaultErrorMessage:"There is an error in this field !",markError:function(e,c,f){if(_.isUndefined(e)){e=this._defaultErrorMessage
}e=e.trim();
if(f){if(f.length>=1){var d=f.find(".guideFieldError");
if(d.length<1){$("<div class='guideFieldError'></div>").appendTo(f).html(e)
}else{d.html(e)
}}}else{if($(".guideFieldError").length<1){$("<div class ='guideFieldError'></div>").appendTo("body").html(e)
}else{$(".guideFieldError").html(e)
}}}})
})(guidelib);
(function(b){var a=setInterval(function(){if(b("div.fileattachmentlisting button[id*=fileattachmentlisting]").length>0){clearInterval(a);
b("div.fileattachmentlisting button[id*=fileattachmentlisting]").click(function(){b("#fileAttachment").appendTo("body");
b("#fileAttachment").modal("show")
})
}},1000)
}(jQuery));
+function(c){var b=function(d){this.element=c(d)
};
b.prototype.add=function(){$this=this.element;
var f=$this.attr("data-guide-id");
var d=$this.parents("[id$='"+f+"_guide-item']");
if(f){d.toggleClass("active");
if(window.guideBridge){var e=window.guideBridge._resolveId(f);
if(e){e.instanceManager.insertInstance(e.instanceIndex+1)
}}else{console.log("could not add new instance"+f)
}}};
b.prototype.remove=function(){$this=this.element;
var e=$this.attr("data-guide-id");
if(e){if(window.guideBridge){var d=window.guideBridge._resolveId(e);
if(d){d.instanceManager.removeInstance(d.instanceIndex)
}}else{console.log("could not remove instance")
}}};
var a=c.fn.guideAddRemove;
c.fn.guideAddRemove=function(d){return this.each(function(){var f=c(this);
var e=f.data("guideAddRemove");
if(!e){f.data("guideAddRemove",(e=new b(this)))
}if(typeof d=="string"){e[d]()
}})
};
c.fn.guideAddRemove.Constructor=b();
c.fn.guideAddRemove.noConflict=function(){c.fn.guideAddRemove=a;
return this
};
c(document).on("click.guideAddRemove.data-api",'[data-guide-addremove="add"]',function(d){d.preventDefault();
c(this).guideAddRemove("add")
}).on("click.guideAddRemove.data-api",'[data-guide-addremove="remove"]',function(d){d.preventDefault();
c(this).guideAddRemove("remove")
})
}(window.jQuery);
$(function(){var a=function(c){var b=window.guideBridge._resolveId($(c).data("guideWizardNav"));
if(b===undefined||b===null){return""
}return b.somExpression
};
$("body").on(xfalib.ut.TouchUtil.POINTER_DOWN,"[data-guide-wizard-nav]",function(){var c=a(this),b=$(this).data("guideWizardNavType");
window.guideBridge.setFocus(c,b,true)
});
window.guideBridge.on("elementNavigationChanged",function(b,k){var j=k.newText,h=window.guideBridge._guideView.getView(j),d,e,f,c,i,g;
if(h instanceof guidelib.view.GuidePanelView){g=h.parentView.$element.find('[id*="_guide-item-nav-container"]');
if(!_.isUndefined(g)&&!_.isNull(g)&&g.length>0){i=g.eq(0);
if(_.isUndefined(i.data("guideNavScrollPos"))){i.data("guideNavScrollPos",0)
}c=i.data("guideNavScrollPos");
f=h.parentView.childViews.indexOf(h);
if(f>c){d="right"
}else{d="left"
}e=Math.abs(f-c);
guidelib.util.GuideUtil.navScroll(g.eq(0),d,e)
}}})
});
$(function(){$(".guideContainer").on("swiperight",function(){window.guideBridge.setFocus(null,"prevItemDeep",true)
});
$(".guideContainer").on("swipeleft",function(){window.guideBridge.setFocus(null,"nextItemDeep",true)
})
});
$(function(){var a=function(){if($(window).scrollTop()==$(document).height()-$(window).height()){$("[data-guide-scroll-indicator]").removeClass("mobileScrollIndicator")
}else{if($(window).scrollTop()<$(document).height()-$(window).height()){$("[data-guide-scroll-indicator]").addClass("mobileScrollIndicator")
}}};
$(window).on("load scroll resize",a);
window.guideBridge.on("elementNavigationChanged",a)
});
(function(a){window.guideBridge.on("elementNavigationChanged",function(c,e){var b=e.newText,d=window.guideBridge.resolveNode(b);
if(d){a("[data-target-guide-content]").text(d.title)
}})
}(jQuery));
$(function(){var b=navigator.userAgent.match(/iPad/i)!==null,a=(navigator.userAgent.match(/iPhone/i)!==null)||(navigator.userAgent.match(/iPod/i)!==null);
if(b||a){window.guideBridge.on("elementFocus",function(d){var c=$("body").find("[data-guide-position-class]");
_.each(c,function(g,f){var e=$(g);
e.addClass(e.data("guide-position-class"))
})
});
window.guideBridge.on("elementFocusOut",function(d){var c=$("body").find("[data-guide-position-class]");
_.each(c,function(g,f){var e=$(g);
e.removeClass(e.data("guide-position-class"))
})
})
}});