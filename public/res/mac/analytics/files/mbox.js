var mboxCopyright = "Copyright 2004-2007 Offermatica (tm) Corporation";mboxUrlBuilder = function(a, b) { this.a = a; this.b = b; this.c = new Array(); this.d = function(e) { return e; }; this.f = null;};mboxUrlBuilder.prototype.addParameter = function(g, h) { var i = new RegExp('(\'|")'); if (i.exec(g)) { throw "Parameter '" + g + "' contains invalid characters"; } for (var j = 0; j < this.c.length; j++) { var k = this.c[j]; if (k.name == g) { k.value = h; return this; } } var l = new Object(); l.name = g; l.value = h; this.c[this.c.length] = l; return this;};mboxUrlBuilder.prototype.addParameters = function(c) { if (!c) { return this; } for (var j = 0; j < c.length; j++) { var m = c[j].indexOf('='); if (m == -1 || m == 0) { continue; } this.addParameter(c[j].substring(0, m), c[j].substring(m + 1, c[j].length)); } return this;};mboxUrlBuilder.prototype.setServerType = function(n) { this.o = n;};mboxUrlBuilder.prototype.setBasePath = function(f) { this.f = f;};mboxUrlBuilder.prototype.setUrlProcessAction = function(p) { this.d = p;};mboxUrlBuilder.prototype.buildUrl = function() { var q = this.f ? this.f : '/m2/' + this.b + '/mbox/' + this.o; var r = document.location.protocol == 'file:' ? 'http:' : document.location.protocol; var e = r + "//" + this.a + q; var s = e.indexOf('?') != -1 ? '&' : '?'; for (var j = 0; j < this.c.length; j++) { var k = this.c[j]; e += s + k.name + '=' + encodeURIComponent(k.value); s = '&'; } return this.t(this.d(e));};mboxUrlBuilder.prototype.getParameters = function() { return this.c;};mboxUrlBuilder.prototype.setParameters = function(c) { this.c = c;};mboxUrlBuilder.prototype.clone = function() { var u = new mboxUrlBuilder(this.a, this.b); u.setServerType(this.o); u.setBasePath(this.f); u.setUrlProcessAction(this.d); for (var j = 0; j < this.c.length; j++) { u.addParameter(this.c[j].name, this.c[j].value); } return u;};mboxUrlBuilder.prototype.t = function(v) { return v.replace(/\"/g, '&quot;').replace(/>/g, '&gt;');};mboxStandardFetcher = function() { };mboxStandardFetcher.prototype.getType = function() { return 'standard';};mboxStandardFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + w.buildUrl() + '" language="JavaScript"><' + '\/scr' + 'ipt>');};mboxStandardFetcher.prototype.cancel = function() {};mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype.getType = function() { return 'ajax';};mboxAjaxFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); var e = w.buildUrl(); this.x = document.createElement('script'); this.x.src = e; document.body.appendChild(this.x);};mboxAjaxFetcher.prototype.cancel = function() { };mboxFactory = function(y, b) { this.z = false; this.A = new mboxList(); this.B = typeof document.createElement('div').replaceChild != 'undefined' && (function() { return true; })() && typeof document.getElementById != 'undefined' && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined' && typeof encodeURIComponent != 'undefined'; this.C = this.B; if (mboxGetPageParameter('mboxDisable') != null) { this.C = false; } if (!mboxCookies.isEnabled()) { this.C = false; } if (mboxCookies.getCookie('disable') == 'true') { this.C = false; } if (this.isAdmin()) { this.enable(); } this.D = mboxGenerateId(); this.E = new mboxSession(this.D, 'mboxSession', 'session', 31 * 60); this.F = new mboxPC(this.D, 'PC', 63072000); this.w = new mboxUrlBuilder(y, b); this.G(); this.H = new Date().getTime(); this.I = this.H; var J = this; this.addOnLoad(function() { J.I = new Date().getTime(); }); if (this.B) { this.addOnLoad(function() { J.z = true; J.getMboxes().each(function(K) { K.setFetcher(new mboxAjaxFetcher()), K.finalize(); }); }); this.limitTraffic(100, 10368000); if (this.C) { this.L(); this.M = new mboxSignaler(function(N, c) { return J.create(N, c); }); } }};mboxFactory.prototype.isEnabled = function() { return this.C;};mboxFactory.prototype.isSupported = function() { return this.B;};mboxFactory.prototype.disable = function(O) { if (typeof duration == 'undefined') { O = 60 * 60; } if (!this.isAdmin()) { this.C = false; mboxCookies.setCookie('disable', 'true', O); }};mboxFactory.prototype.enable = function() { this.C = true; mboxCookies.deleteCookie('disable');};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf( 'mboxEnv') != -1;};mboxFactory.prototype.limitTraffic = function(P, O) {};mboxFactory.prototype.addOnLoad = function(p) { if (window.addEventListener) { window.addEventListener('load', p, false); } else if (document.addEventListener) { document.addEventListener('load', p, false); } else if (document.attachEvent) { window.attachEvent('onload', p); }};mboxFactory.prototype.getEllapsedTime = function() { return this.I - this.H;};mboxFactory.prototype.getEllapsedTimeUntil = function(Q) { return Q - this.H;};mboxFactory.prototype.getMboxes = function() { return this.A;};mboxFactory.prototype.get = function(N, R) { return this.A.get(N).getById(R || 0);};mboxFactory.prototype.update = function(N, c) { if (!this.isEnabled()) { return; } if (this.A.get(N).length() == 0) { throw "Mbox " + N + " is not defined"; } this.A.get(N).each(function(K) { K.getUrlBuilder() .addParameter('mboxRandomRequestId', mboxGenerateId()); K.load(c); });};mboxFactory.prototype.create = function(N, c, S) { if (!this.isSupported()) { return null; } var e = this.w.clone(); e.addParameter("mboxCount", this.A.length() + 1); e.addParameters(c); var R = this.A.get(N).length(); var T; if (S) { if (typeof S == 'string') { T = new mboxLocatorNamed(S); } else { T = new mboxLocatorNode(S); } } else { T = new mboxLocatorDefault(N + '-' + R); } try { var J = this; var K = new mbox(N, R, e, T); if (this.C) { K.setFetcher(this.z ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } K.setOnError(function(U, n) { K.setMessage(U); if (n == 'standard') { K.activate(); if (!K.isActivated()) { J.disable(); window.location.reload(false); } } else { throw U; } }); this.A.add(K); } catch (V) { this.disable(); throw 'Failed creating mbox, the error was: ' + V; } return K;};mboxFactory.prototype.getPageId = function() { return this.D;};mboxFactory.prototype.getPCId = function() { return this.F;};mboxFactory.prototype.getSessionId = function() { return this.E;};mboxFactory.prototype.getSignaler = function() { return this.M;};mboxFactory.prototype.getUrlBuilder = function() { return this.w;};mboxFactory.prototype.G = function() { var e = this.w; e.addParameter('mboxHost', document.location.hostname) .addParameter('mboxSession', this.E.getId()); if (this.F.getId() != null) { e.addParameter('mboxPC', this.F.getId()); } e.addParameter('mboxPage', this.D); var W = mboxCookies.getCookie('edge'); if (W != null) { e.addParameter('edge', W); } e.setUrlProcessAction(function(e) { e += '&mboxURL=' + escape(document.location); var X = escape(document.referrer); if (e.length + X.length < 2000) { e += '&mboxReferrer=' + X; } e += '&mboxVersion=' + mboxVersion; return e; });};mboxFactory.prototype.Y = function() { return "";};mboxFactory.prototype.L = function() { document.write('<style>.' + 'mboxDefault' + ' { visibility:hidden; }</style>');};mboxSignaler = function(Z) { var _ = mboxCookies.getCookieNames('signal-'); for (var j = 0; j < _.length; j++) { var ab = _[j]; var bb = mboxCookies.getCookie(ab).split('&'); var K = Z(bb[0], bb); K.load(); mboxCookies.deleteCookie(ab); }};mboxSignaler.prototype.signal = function(cb, N ) { mboxCookies.setCookie('signal-' + cb, mboxShiftArray(arguments).join('&'), 45 * 60);};mboxList = function() { this.A = new Array();};mboxList.prototype.add = function(K) { if (K != null) { this.A[this.A.length] = K; }};mboxList.prototype.get = function(N) { var db = new mboxList(); for (var j = 0; j < this.A.length; j++) { var K = this.A[j]; if (K.getName() == N) { db.add(K); } } return db;};mboxList.prototype.getById = function(eb) { return this.A[eb];};mboxList.prototype.length = function() { return this.A.length;};mboxList.prototype.each = function(p) { if (typeof p != 'function') { throw 'Action must be a function, was: ' + typeof(p); } for (var j = 0; j < this.A.length; j++) { p(this.A[j]); }};mboxLocatorDefault = function(g) { this.g = 'mboxMarker-' + g; document.write('<div id="' + this.g + '" style="visibility:hidden;display:none"></div>');};mboxLocatorDefault.prototype.locate = function() { var fb = document.getElementById(this.g); while (fb != null) { if (fb.nodeType == 1) { if (fb.className == 'mboxDefault') { return fb; } } fb = fb.previousSibling; } return null;};mboxLocatorDefault.prototype.force = function() { var gb = document.createElement('div'); gb.className = 'mboxDefault'; var hb = document.getElementById(this.g); hb.parentNode.insertBefore(gb, hb); return gb;};mboxLocatorNamed = function(ib) { this.jb = ib;};mboxLocatorNamed.prototype.locate = function() { return document.getElementById(this.jb);};mboxLocatorNamed.prototype.force = function() { return null;};mboxLocatorNode = function(kb) { this.fb = kb;};mboxLocatorNode.prototype.locate = function() { return this.fb;};mboxLocatorNode.prototype.force = function() { return null;};mboxCreate = function(N ) { var K = mboxFactoryDefault.create(N, mboxShiftArray(arguments)); if (K) { K.load(); } return K;};mboxDefine = function(S, N ) { var K = mboxFactoryDefault.create(N, mboxShiftArray(mboxShiftArray(arguments)), S); return K;};mboxUpdate = function(N ) { mboxFactoryDefault.update(N, mboxShiftArray(arguments));};mbox = function(g, jb, w, lb) { this.mb = null; this.nb = 0; this.ob = null; this.T = lb; this.pb = null; this.qb = new mboxOfferContent(); this.gb = this.getDefaultDiv(); this.w = w; this.message = ''; this.rb = new Object(); this.sb = 0; this.jb = jb; this.g = g; this.tb(); w.addParameter('mbox', g) .addParameter('mboxId', jb); this.ub = function() {}; this.vb = function() {};};mbox.prototype.getId = function() { return this.jb;};mbox.prototype.tb = function() { if (this.g.length > 250) { throw "Mbox Name " + this.g + " exceeds max length of " + "250 characters."; } else if (this.g.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.g + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.g;};mbox.prototype.parameters = function() { return this.w.getParameters();};mbox.prototype.setOnLoad = function(p) { this.vb = p; return this;};mbox.prototype.setMessage = function(U) { this.message = U; return this;};mbox.prototype.setOnError = function(ub) { this.ub = ub; return this;};mbox.prototype.setFetcher = function(wb) { if (this.pb) { this.pb.cancel(); } this.pb = wb; return this;};mbox.prototype.getFetcher = function() { return this.pb;};mbox.prototype.load = function(c) { if (this.pb == null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); var w = (c && c.length > 0) ? this.w.clone().addParameters(c) : this.w; this.pb.fetch(w); var J = this; this.xb = setTimeout(function() { J.ub('Fetch of mbox timed out', J.pb.getType()); }, 15000); this.setEventTime("load.end"); return this;};mbox.prototype.activate = function() { if (this.nb) { return this.nb; } this.setEventTime('activate' + ++this.sb + '.start'); if (this.show()) { this.cancelTimeout(); this.nb = 1; } this.setEventTime('activate' + this.sb + '.end'); return this.nb;};mbox.prototype.isActivated = function() { return this.nb;};mbox.prototype.setOffer = function(qb) { if (qb && qb.show && qb.setOnLoad) { this.qb = qb; } else { throw 'Invalid offer'; } return this;};mbox.prototype.getOffer = function() { return this.qb;};mbox.prototype.show = function() { this.setEventTime('show.start'); var db = this.qb.show(this); this.setEventTime(db == 1 ? "show.end.ok" : "show.end"); return db;};mbox.prototype.showContent = function(yb) { if (yb == null) { return 0; } if (this.gb == null) { this.gb = this.getDefaultDiv(); if (this.gb == null) { return 0; } } if (this.gb != yb) { this.zb(this.gb); this.gb.parentNode.replaceChild(yb, this.gb); this.gb = yb; } this.Ab(yb); this.vb(); return 1;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var db = this.showContent(this.getDefaultDiv()); this.setEventTime(db == 1 ? 'hide.end.ok' : 'hide.end.fail'); return db;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (this.getDefaultDiv() == null) { if (this.T == null) { this.setMessage('No locator specified'); } else { if (this.T.force() != null) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.xb) { clearTimeout(this.xb); } if (this.pb != null) { this.pb.cancel(); }};mbox.prototype.getDiv = function() { return this.gb;};mbox.prototype.getDefaultDiv = function() { if (this.ob != null) { return this.ob; } if (this.T == null) { return null; } this.ob = this.T.locate(); return this.ob;};mbox.prototype.setEventTime = function(Bb) { this.rb[Bb] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.rb;};mbox.prototype.getURL = function() { return this.w.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.w;};mbox.prototype.Cb = function(gb) { return gb.style.display != 'none';};mbox.prototype.Ab = function(gb) { this.Db(gb, true);};mbox.prototype.zb = function(gb) { this.Db(gb, false);};mbox.prototype.Db = function(gb, Eb) { gb.style.visibility = Eb ? "visible" : "hidden"; gb.style.display = Eb ? "block" : "none";};mboxOfferContent = function() { this.vb = function() {};};mboxOfferContent.prototype.show = function(K) { var db = K.showContent(document.getElementById( this.Fb(K))); if (db == 1) { this.vb(); } return db;};mboxOfferContent.prototype.setOnLoad = function(vb) { this.vb = vb;};mboxOfferContent.prototype.Fb = function(K) { return 'mboxImported-' + K.getName() + '-' + K.getId();};mboxOfferAjax = function(yb) { this.yb = yb; this.vb = function() {};};mboxOfferAjax.prototype.setOnLoad = function(vb) { this.vb = vb;};mboxOfferAjax.prototype.show = function(K) { var Gb = document.createElement('div'); Gb.id = 'mboxImported-' + K.getName() + '-' + K.getId(); Gb.innerHTML = this.yb; var db = K.showContent(Gb); if (db == 1) { this.vb(); } return db;};mboxOfferDefault = function() { this.vb = function() {};};mboxOfferDefault.prototype.setOnLoad = function(vb) { this.vb = vb;};mboxOfferDefault.prototype.show = function(K) { var db = K.hide(); if (db == 1) { this.vb(); } return db;};mboxCookieManager = function mboxCookieManager(g, Hb) { this.g = g; this.Hb = Hb == '' || Hb.indexOf('.') == -1 ? '' : '; domain=' + Hb; this.loadCookies();};mboxCookieManager.prototype.isEnabled = function() { this.setCookie('check', 'true', 60); this.loadCookies(); return this.getCookie('check') == 'true';};mboxCookieManager.prototype.setCookie = function(g, h, O) { if (typeof g != 'undefined' && typeof h != 'undefined' && typeof O != 'undefined') { var eb = this.Ib.length; for (var j = 0; j < this.Ib.length; j++) { if (this.Ib[j].name == g) { eb = j; break; } } var Jb = new Object(); Jb.name = g; Jb.value = escape(h); Jb.expireOn = Math.ceil(O + new Date().getTime() / 1000); this.Ib[eb] = Jb; this.saveCookies(); }};mboxCookieManager.prototype.getCookie = function(g) { for (var j = 0; j < this.Ib.length; j++) { var Jb = this.Ib[j]; if (Jb.name == g) { return unescape(Jb.value); } } return null;};mboxCookieManager.prototype.deleteCookie = function(g) { var Kb = new Array(); for (var j = 0; j < this.Ib.length; j++) { var Jb = this.Ib[j]; if (Jb.name != g) { Kb[Kb.length] = Jb; } } this.Ib = Kb; this.saveCookies();};mboxCookieManager.prototype.getCookieNames = function(Lb) { var Mb = new Array(); for (var j = 0; j < this.Ib.length; j++) { var Jb = this.Ib[j]; if (Jb.name.indexOf(Lb) == 0) { Mb[Mb.length] = Jb.name; } } return Mb;};mboxCookieManager.prototype.saveCookies = function() { var Nb = new Array(); var Ob = 0; for (var j = 0; j < this.Ib.length; j++) { var Jb = this.Ib[j]; Nb[Nb.length] = Jb.name + '#' + Jb.value + '#' + Jb.expireOn; if (Ob < Jb.expireOn) { Ob = Jb.expireOn; } } var Pb = new Date(Ob * 1000); document.cookie = this.g + '=' + Nb.join('|') + '; expires=' + Pb.toGMTString() + '; path=/' + this.Hb;};mboxCookieManager.prototype.loadCookies = function() { this.Ib = new Array(); var Qb = document.cookie.indexOf(this.g + '='); if (Qb != -1) { var Rb = document.cookie.indexOf(';', Qb); if (Rb == -1) { Rb = document.cookie.indexOf(',', Qb); if (Rb == -1) { Rb = document.cookie.length; } } var Sb = document.cookie.substring( Qb + this.g.length + 1, Rb).split('|'); var Tb = Math.ceil(new Date().getTime() / 1000); for (var j = 0; j < Sb.length; j++) { var Jb = Sb[j].split('#'); if (Tb <= Jb[2]) { var Ub = new Object(); Ub.name = Jb[0]; Ub.value = Jb[1]; Ub.expireOn = Jb[2]; this.Ib[this.Ib.length] = Ub; } } }};mboxSession = function(Vb, Wb, ab, Xb) { this.Wb = Wb; this.ab = ab; this.Xb = Xb; this.Yb = false; this.jb = typeof mboxForceSessionId != 'undefined' ? mboxForceSessionId : mboxGetPageParameter(this.Wb); if (this.jb == null || this.jb.length == 0) { this.jb = mboxCookies.getCookie(ab); if (this.jb == null || this.jb.length == 0) { this.jb = Vb; this.Yb = true; } } mboxCookies.setCookie(ab, this.jb, Xb);};mboxSession.prototype.getId = function() { return this.jb;};mboxSession.prototype.forceId = function(Zb) { this.jb = Zb; mboxCookies.setCookie(this.ab, this.jb, this.Xb);};mboxPC = function(Vb, ab, Xb) { this.ab = ab; this.Xb = Xb; this.jb = typeof mboxForcePCId != 'undefined' ? mboxForcePCId : mboxCookies.getCookie(ab); if (this.jb != null) { mboxCookies.setCookie(ab, this.jb, Xb); }};mboxPC.prototype.getId = function() { return this.jb;};mboxPC.prototype.forceId = function(Zb) { if (this.jb != Zb) { this.jb = Zb; mboxCookies.setCookie(this.ab, this.jb, this.Xb); return true; } return false;};mboxGetPageParameter = function(g) { var db = null; var _b = new RegExp(g + "=([^\&]*)"); var ac = _b.exec(document.location); if (ac != null && ac.length >= 2) { db = ac[1]; } return db;};mboxSetCookie = function(g, h, O) { return mboxCookies.setCookie(g, h, O);};mboxGetCookie = function(g) { return mboxCookies.getCookie(g);};mboxCookiePageDomain = function() { var Hb = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var bc = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!bc.exec(Hb)) { var cc = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(Hb); if (cc) { Hb = cc[0]; } } return Hb ? Hb: "";};mboxShiftArray = function(dc) { var db = new Array(); for (var j = 1; j < dc.length; j++) { db[db.length] = dc[j]; } return db;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};if (typeof mboxVersion == 'undefined') { var mboxVersion = 30; var mboxCookies = new mboxCookieManager("mbox", (function() { return mboxCookiePageDomain(); })()); var mboxFactoryDefault = new mboxFactory('mbox5.offermatica.com', 'omniture');};mboxDisplayDebugInfo = function() { mboxDebugger.show();};mboxCookieIsEnabled = function() { mboxCookies.setCookie('check', "true", 60); return mboxCookies.getCookie('check') == "true"};mboxDebug = function(ec, fc, gc) { this.hc = ec; this.p = null; var ic = mboxGetPageParameter(fc); if (ic == null) { ic = mboxCookies.getCookie(this.hc); } if (ic != null) { if (ic.indexOf("x") == 0) { this.p = new mboxDebugActionNone(); document.write('<' + 'scr' + 'ipt language="Javascript1.2" src=' + '"http://admin5.offermatica.com/admin/mbox/mbox_debug_' + ic + '.jsp?mboxServerHost=mbox5.offermatica.com&clientCode=omniture&' + 'session=' + mboxCookies.getCookie('session') + '"><' + '\/scr' + 'ipt>'); } else if (ic.indexOf("log") == 0) { this.p = new mboxDebugActionLog(ic); } else if (ic == "reset") { ic = null; } else { this.p = new mboxDebugActionDefault(); } } if (this.p != null) { if (gc.isSupported()) { gc.addOnLoad(mboxDisplayDebugInfo); } else { alert("mbox functionality is not supported on this browser"); this.disable(); } } if (ic != null) { mboxCookies.setCookie(this.hc, ic, 45 * 60); } else { this.disable() }};mboxDebug.prototype.isEnabled = function() { return this.p != null;};mboxDebug.prototype.disable = function() { mboxCookies.deleteCookie(this.hc);};mboxDebug.prototype.setShowAction = function(p) { this.p = p;};mboxDebug.prototype.show = function() { if (this.p != null) { this.p.show(); }};mboxDebugActionLog = function(ic) { this.ic = ic; this.jc = (new Date()).getTime();};mboxDebugActionLog.prototype.show = function() { var kc = (new Date()).getTime(); var lc = new mboxDebugWindow("Debug Log"); lc.putPageStart(); lc.put("<img sr" + "c='" + document.location.protocol + "//mbox5.offermatica.com/ima" + "ges/log.gif" + "?mboxDebug=" + this.ic + "&mboxClient=omniture" + "&mboxPageLoadTime=" + (kc - this.jc) + "'/>"); lc.put("<br />"); lc.putCloseButton(); lc.putPageEnd();};mboxDebugActionNone = function() {};mboxDebugActionNone.prototype.show = function() { alert("Debug mode not defined" + "\n('x-mode' not supported when debug is remote in mbox.js)");};mboxDebugActionDefault = function() {};mboxDebugActionDefault.prototype.show = function() { var window = new mboxDebugWindow("Debug"); window.putPageStart(); window.put("  <b>Mbox Debug Window (version:" + mboxVersion + ")</b></br>"); window.put("<p/>"); window.put("<b>Page</b>: " + document.location); window.put(" <ul>"); if (mboxFactoryDefault.isEnabled()) { window.put("  <li>Enabled: true</li>"); } else { window.put( '  <li>Enabled: <span style="color:red"><b>false</b></span></li>'); } window.put("  <li>Cookies enabled: " + mboxCookieIsEnabled() + "</li>"); window.put("  <li>Page URL: '" + document.location + "'</li>"); window.put("  <li>Cookies: '" + document.cookie + "'</li>"); mboxFactoryDefault.getMboxes().each(function(K) { var R = K.getName(); window.put("  <li>mbox: '" + R + "'"); window.put("   <ul>"); if (K.message != '') { window.put('   <li><span style="color: red"><b>Error: ' + K.message + '</b></span></li>'); } if (K.getDefaultDiv() == null) { window.put('    <li><span style="color: red">' + '<b>Error: cannot find mbox in dom</b></span></li>'); } window.put('    <li><a href="' + K.getURL() + '">' + K.getURL() + '</a></li>'); window.put("   </ul>"); window.put("  </li>"); }); window.put(" </ul>"); window.putCloseButton(); window.putPageEnd();};mboxDebugWindow = function(g) { this.g = g + " " + document.location.hostname; var mc = /\W/g; var nc = this.g.replace(mc, '_'); this.lc = window.open("", "mboxDebugWindow" + nc, "width=600,height=300,resizable,scrollbars=yes,toolbar=yes"); if (this.lc == null) { alert("Unable to open Offermatica's mboxDebugWindow Window.\n" + "Are you blocking popups?\n"); }};mboxDebugWindow.prototype.put = function(pc) { if (this.lc == null) { return; } try { this.lc.document.writeln(pc); this.lc.scrollBy(0, 1000); } catch (e) { alert("Unable to write to the current mboxDebug window.\n" + "Please close any open debug window"); this.lc = null; }};mboxDebugWindow.prototype.putCloseButton = function() { this.put("<a href=\"javascript:mboxDebugWindowClose()\">" + "click here to close debug window</a>");};mboxDebugWindow.prototype.putPageStart = function() { this.put("<html><head>" + " <title>" + this.g + "</title>" + "  <" + "scr" + "ipt>" + "   function mboxDebugWindowClose() {" + "     try {" + "       window.opener.mboxDebugger.disable();" + "     } catch(e) {" + "       alert('Could not disable debug mode.\\n'" + "         + 'Browse to a page containing an mbox and\\n'" + "         + 'click on close link.');" + "     }" + "     window.close();" + "   }" + "  <" + "\/scr" + "ipt>" + " </head>" + " <body>");};mboxDebugWindow.prototype.putPageEnd = function() { this.put("</body></html>"); if (this.lc != null) { this.lc.document.close(); }};if (typeof mboxDebugger == 'undefined') { mboxDebugger = new mboxDebug("debug", "mboxDebug", mboxFactoryDefault);}