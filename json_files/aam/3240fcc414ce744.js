APP =window.APP ={};APP.collections ={helpers :{}
};APP.models ={};APP.views ={};APP.routers ={};APP.state ={vars :{images :{},urls :{},globals :{}
}
};APP.cache ={};APP.dialogs ={};APP.templates ={};ADOBE.AM.pid =1166;APP.state.vars.images.clone_standard ='/images/aam/Clone_Standard.png';APP.state.vars.images.play_standard ='/portal/images/icons/12x12/Play_Standard.png';APP.state.vars.urls.trend_graph_api ='/portal/Analytics/TraitTrendReport.ddx';APP.state.vars.urls.segment_graph_api ='/portal/Analytics/SegmentTrendReport.ddx';APP.state.vars.urls.algotraits_page ='/portal/Traits/Traits.ddx';APP.state.vars.globals.max_reach_audience_size =parseInt(555000000,10);Backbone.Marionette =(function(Backbone,_,$){var Marionette ={};Marionette.EventBinder =function(){this._eventBindings =[];};_.extend(Marionette.EventBinder.prototype,{bindTo:function (obj,eventName,callback,context) {context =context ||this;obj.on(eventName,callback,context);var binding ={obj:obj,eventName:eventName,callback:callback,context:context };this._eventBindings.push(binding);return binding;},unbindFrom:function(binding){binding.obj.off(binding.eventName,binding.callback,binding.context);this._eventBindings =_.reject(this._eventBindings,function(bind){return bind ===binding;});},unbindAll:function () {var that =this;var bindings =_.map(this._eventBindings,_.identity);_.each(bindings,function (binding,index) {that.unbindFrom(binding);});}
});Marionette.EventBinder.extend =Backbone.View.extend;Marionette.View =Backbone.View.extend({constructor:function(){var eventBinder =new Marionette.EventBinder();_.extend(this,eventBinder);Backbone.View.prototype.constructor.apply(this,arguments);this.bindTo(this,"show",this.onShowCalled,this);},getTemplate:function(){var template;if (this.options &&this.options.template){template =this.options.template;} else {template =this.template;}
    return template;},serializeData:function(){var data;if (this.model) {data =this.model.toJSON();}
else if (this.collection) {data ={items:this.collection.toJSON() };}
    data =this.mixinTemplateHelpers(data);return data;},mixinTemplateHelpers:function(target){target =target ||{};var templateHelpers =this.templateHelpers;if (_.isFunction(templateHelpers)){templateHelpers =templateHelpers.call(this);}
    return _.extend(target,templateHelpers);},configureTriggers:function(){if (!this.triggers) {return;}
    var triggers =this.triggers;var that =this;var triggerEvents ={};if (_.isFunction(triggers)){triggers =triggers.call(this);}
    _.each(triggers,function(value,key){triggerEvents[key] =function(e){if (e &&e.preventDefault){e.preventDefault();}
        if (e &&e.stopPropagation){e.stopPropagation();}
        that.trigger(value);};});return triggerEvents;},delegateEvents:function(events){events =events ||this.events;if (_.isFunction(events)){events =events.call(this);}
    var combinedEvents ={};var triggers =this.configureTriggers();_.extend(combinedEvents,events,triggers);Backbone.View.prototype.delegateEvents.call(this,combinedEvents);},onShowCalled:function(){},close:function(){if (this.beforeClose) {this.beforeClose();}
    this.remove();if (this.onClose) {this.onClose();}
    this.trigger('close');this.unbindAll();this.unbind();},bindUIElements:function(){if (!this.ui) {return;}
    var that =this;if (!this.uiBindings) {this.uiBindings =this.ui;}
    this.ui ={};_.each(_.keys(this.uiBindings),function(key) {var selector =that.uiBindings[key];that.ui[key] =that.$(selector);});}
});Marionette.ItemView =Marionette.View.extend({constructor:function(){Marionette.View.prototype.constructor.apply(this,arguments);if (this.initialEvents){this.initialEvents();}
},render:function(){if (this.beforeRender){this.beforeRender();}
    this.trigger("before:render",this);this.trigger("item:before:render",this);var data =this.serializeData();var template =this.getTemplate();var html =Marionette.Renderer.render(template,data);this.$el.html(html);this.bindUIElements();if (this.onRender){this.onRender();}
    this.trigger("render",this);this.trigger("item:rendered",this);return this;},close:function(){this.trigger('item:before:close');Marionette.View.prototype.close.apply(this,arguments);this.trigger('item:closed');}
});Marionette.CollectionView =Marionette.View.extend({constructor:function(){Marionette.View.prototype.constructor.apply(this,arguments);this.initChildViewStorage();this.initialEvents();this.onShowCallbacks =new Marionette.Callbacks();},initialEvents:function(){if (this.collection){this.bindTo(this.collection,"add",this.addChildView,this);this.bindTo(this.collection,"remove",this.removeItemView,this);this.bindTo(this.collection,"reset",this.render,this);}
},addChildView:function(item,collection,options){this.closeEmptyView();var ItemView =this.getItemView();return this.addItemView(item,ItemView,options.index);},onShowCalled:function(){this.onShowCallbacks.run();},triggerBeforeRender:function(){if (this.beforeRender) {this.beforeRender();}
    this.trigger("before:render",this);this.trigger("collection:before:render",this);},triggerRendered:function(){if (this.onRender) {this.onRender();}
    this.trigger("render",this);this.trigger("collection:rendered",this);},render:function(){this.triggerBeforeRender();this.closeEmptyView();this.closeChildren();if (this.collection &&this.collection.length > 0) {this.showCollection();} else {this.showEmptyView();}
    this.triggerRendered();return this;},showCollection:function(){var that =this;var ItemView =this.getItemView();this.collection.each(function(item,index){that.addItemView(item,ItemView,index);});},showEmptyView:function(){var EmptyView =this.options.emptyView ||this.emptyView;if (EmptyView &&!this._showingEmptyView){this._showingEmptyView =true;var model =new Backbone.Model();this.addItemView(model,EmptyView,0);}
},closeEmptyView:function(){if (this._showingEmptyView){this.closeChildren();delete this._showingEmptyView;}
},getItemView:function(){var itemView =this.options.itemView ||this.itemView;if (!itemView){var err =new Error("An `itemView` must be specified");err.name ="NoItemViewError";throw err;}
    return itemView;},addItemView:function(item,ItemView,index){var that =this;var view =this.buildItemView(item,ItemView);this.storeChild(view);if (this.onItemAdded){this.onItemAdded(view);}
    this.trigger("item:added",view);var renderResult =this.renderItemView(view,index);if (view.onShow){this.onShowCallbacks.add(view.onShow,view);}
    var childBinding =this.bindTo(view,"all",function(){var args =slice.call(arguments);args[0] ="itemview:"+ args[0];args.splice(1,0,view);that.trigger.apply(that,args);});this.childBindings =this.childBindings ||{};this.childBindings[view.cid] =childBinding;return renderResult;},renderItemView:function(view,index) {view.render();this.appendHtml(this,view,index);},buildItemView:function(item,ItemView){var itemViewOptions =_.result(this,"itemViewOptions");var options =_.extend({model:item},itemViewOptions);var view =new ItemView(options);return view;},removeItemView:function(item){var view =this.children[item.cid];if (view){var childBinding =this.childBindings[view.cid];if (childBinding) {this.unbindFrom(childBinding);delete this.childBindings[view.cid];}
    view.close();delete this.children[item.cid];}
    if (!this.collection ||this.collection.length ===0){this.showEmptyView();}
    this.trigger("item:removed",view);},appendHtml:function(collectionView,itemView,index){collectionView.$el.append(itemView.el);},storeChild:function(view){this.children[view.model.cid] =view;},initChildViewStorage:function(){this.children ={};},close:function(){this.trigger("collection:before:close");this.closeChildren();Marionette.View.prototype.close.apply(this,arguments);this.trigger("collection:closed");},closeChildren:function(){var that =this;if (this.children){_.each(_.clone(this.children),function(childView){that.removeItemView(childView.model);});}
}
});Marionette.CompositeView =Marionette.CollectionView.extend({constructor:function(options){Marionette.CollectionView.apply(this,arguments);this.itemView =this.getItemView();},initialEvents:function(){if (this.collection){this.bindTo(this.collection,"add",this.addChildView,this);this.bindTo(this.collection,"remove",this.removeItemView,this);this.bindTo(this.collection,"reset",this.renderCollection,this);}
},getItemView:function(){return this.itemView ||this.constructor;},render:function(){var that =this;this.resetItemViewContainer();var html =this.renderModel();this.$el.html(html);this.bindUIElements();this.trigger("composite:model:rendered");this.trigger("render");this.renderCollection();this.trigger("composite:rendered");return this;},renderCollection:function(){Marionette.CollectionView.prototype.render.apply(this,arguments);this.trigger("composite:collection:rendered");},renderModel:function(){var data ={};data =this.serializeData();var template =this.getTemplate();return Marionette.Renderer.render(template,data);},appendHtml:function(cv,iv){var $container =this.getItemViewContainer(cv);$container.append(iv.el);},getItemViewContainer:function(containerView){var container;if ("$itemViewContainer"in containerView){container =containerView.$itemViewContainer;} else {if (containerView.itemViewContainer){container =containerView.$(_.result(containerView,"itemViewContainer"));if (container.length <=0) {var err =new Error("Missing `itemViewContainer`");err.name ="ItemViewContainerMissingError";throw err;}
} else {container =containerView.$el;}
    containerView.$itemViewContainer =container;}
    return container;},resetItemViewContainer:function(){if (this.$itemViewContainer){delete this.$itemViewContainer;}
}
});Marionette.Region =function(options){this.options =options ||{};var eventBinder =new Marionette.EventBinder();_.extend(this,eventBinder,options);if (!this.el){var err =new Error("An 'el' must be specified");err.name ="NoElError";throw err;}
    if (this.initialize){this.initialize.apply(this,arguments);}
};_.extend(Marionette.Region.prototype,Backbone.Events,{show:function(view){this.ensureEl();this.close();view.render();this.open(view);if (view.onShow) {view.onShow();}
    view.trigger("show");if (this.onShow) {this.onShow(view);}
    this.trigger("view:show",view);this.currentView =view;},ensureEl:function(){if (!this.$el ||this.$el.length ===0){this.$el =this.getEl(this.el);}
},getEl:function(selector){return $(selector);},open:function(view){this.$el.html(view.el);},close:function(){var view =this.currentView;if (!view){return;}
    if (view.close) {view.close();}
    this.trigger("view:closed",view);delete this.currentView;},attachView:function(view){this.currentView =view;},reset:function(){this.close();delete this.$el;}
});Marionette.Region.extend =Backbone.View.extend;Marionette.Layout =Marionette.ItemView.extend({regionType:Marionette.Region,constructor:function () {Backbone.Marionette.ItemView.apply(this,arguments);this.initializeRegions();},render:function(){var result =Marionette.ItemView.prototype.render.apply(this,arguments);this.render =function(){this.closeRegions();this.reInitializeRegions();var result =Marionette.ItemView.prototype.render.apply(this,arguments);return result;};return result;},close:function () {this.closeRegions();this.destroyRegions();Backbone.Marionette.ItemView.prototype.close.call(this,arguments);},initializeRegions:function () {if (!this.regionManagers){this.regionManagers ={};}
    var that =this;_.each(this.regions,function (region,name) {if (typeof region !='string'&&typeof region.selector !='string') {throw new Exception('Region must be specified as a selector '+
    'string or an object with selector property');}
        selector =typeof region ==='string'?region :region.selector;var regionType =typeof region.regionType ==='undefined'?that.regionType :region.regionType;var regionManager =new regionType({el:selector,getEl:function(selector){return that.$(selector);}
        });that.regionManagers[name] =regionManager;that[name] =regionManager;});},reInitializeRegions:function(){if (this.regionManagers &&_.size(this.regionManagers)===0){this.initializeRegions();} else {_.each(this.regionManagers,function(region){region.reset();});}
},closeRegions:function () {var that =this;_.each(this.regionManagers,function (manager,name) {manager.close();});},destroyRegions:function(){var that =this;_.each(this.regionManagers,function (manager,name) {delete that[name];});this.regionManagers ={};}
});Marionette.Application =function(options){this.initCallbacks =new Marionette.Callbacks();this.vent =new Marionette.EventAggregator();this.submodules ={};var eventBinder =new Marionette.EventBinder();_.extend(this,eventBinder,options);};_.extend(Marionette.Application.prototype,Backbone.Events,{addInitializer:function(initializer){this.initCallbacks.add(initializer);},start:function(options){this.trigger("initialize:before",options);this.initCallbacks.run(options,this);this.trigger("initialize:after",options);this.trigger("start",options);},addRegions:function(regions){var regionValue,regionObj,region;for(region in regions){if (regions.hasOwnProperty(region)){regionValue =regions[region];if (typeof regionValue ==="string"){regionObj =new Marionette.Region({el:regionValue
});} else {regionObj =new regionValue();}
    this[region] =regionObj;}
}
},removeRegion:function(region) {this[region].close();delete this[region];},module:function(moduleNames,moduleDefinition){var args =slice.call(arguments);args.unshift(this);return Marionette.Module.create.apply(Marionette.Module,args);}
});Marionette.Application.extend =Backbone.View.extend;Marionette.AppRouter =Backbone.Router.extend({constructor:function(options){Backbone.Router.prototype.constructor.call(this,options);if (this.appRoutes){var controller =this.controller;if (options &&options.controller) {controller =options.controller;}
    this.processAppRoutes(controller,this.appRoutes);}
},processAppRoutes:function(controller,appRoutes){var method,methodName;var route,routesLength,i;var routes =[];var router =this;for(route in appRoutes){if (appRoutes.hasOwnProperty(route)){routes.unshift([route,appRoutes[route]]);}
}
    routesLength =routes.length;for (i =0;i < routesLength;i++){route =routes[i][0];methodName =routes[i][1];method =controller[methodName];if (!method){var msg ="Method '"+ methodName + "' was not found on the controller";var err =new Error(msg);err.name ="NoMethodError";throw err;}
        method =_.bind(method,controller);router.route(route,methodName,method);}
}
});Marionette.Module =function(moduleName,app,customArgs){this.moduleName =moduleName;this.submodules ={};this._setupInitializersAndFinalizers();this._config ={};this._config.app =app;this._config.customArgs =customArgs;this._config.definitions =[];var eventBinder =new Marionette.EventBinder();_.extend(this,eventBinder);};_.extend(Marionette.Module.prototype,Backbone.Events,{addInitializer:function(callback){this._initializerCallbacks.add(callback);},addFinalizer:function(callback){this._finalizerCallbacks.add(callback);},start:function(options){if (this._isInitialized){return;}
    this._runModuleDefinition();this._initializerCallbacks.run(options,this);this._isInitialized =true;if (this.submodules){_.each(this.submodules,function(mod){mod.start(options);});}
},stop:function(){if (!this._isInitialized){return;}
    this._isInitialized =false;this._finalizerCallbacks.run();this._setupInitializersAndFinalizers();_.each(this.submodules,function(mod){mod.stop();});},addDefinition:function(moduleDefinition){this._config.definitions.push(moduleDefinition);},_runModuleDefinition:function(){if (this._config.definitions.length ===0) {return;}
    var args =_.flatten([this,this._config.app,Backbone,Marionette,$,_,this._config.customArgs
    ]);var definitionCount =this._config.definitions.length-1;for(var i=0;i <=definitionCount;i++){var definition =this._config.definitions[i];definition.apply(this,args);}
},_setupInitializersAndFinalizers:function(){this._initializerCallbacks =new Marionette.Callbacks();this._finalizerCallbacks =new Marionette.Callbacks();}
});_.extend(Marionette.Module,{create:function(app,moduleNames,moduleDefinition){var that =this;var parentModule =app;moduleNames =moduleNames.split(".");var customArgs =slice.apply(arguments);customArgs.splice(0,3);var length =moduleNames.length;_.each(moduleNames,function(moduleName,i){var isLastModuleInChain =(i ===length-1);var module =parentModule[moduleName];if (!module){module =new Marionette.Module(moduleName,app,customArgs);parentModule[moduleName] =module;parentModule.submodules[moduleName] =module;}
    if (isLastModuleInChain ){that._createModuleDefinition(module,moduleDefinition,app);}
    parentModule =module;});return parentModule;},_createModuleDefinition:function(module,moduleDefinition,app){var moduleOptions =this._getModuleDefinitionOptions(moduleDefinition);if (moduleOptions.definition){module.addDefinition(moduleOptions.definition);}
    if (moduleOptions.startWithApp){app.addInitializer(function(options){module.start(options);});}
},_getModuleDefinitionOptions:function(moduleDefinition){var options ={startWithApp:true };if (!moduleDefinition){return options;}
    if (_.isFunction(moduleDefinition)){options.definition =moduleDefinition;} else {options.definition =moduleDefinition.define;if (moduleDefinition.hasOwnProperty("startWithApp")){options.startWithApp =moduleDefinition.startWithApp;}
    }
    return options;}
});Marionette.TemplateCache =function(templateId){this.templateId =templateId;};_.extend(Marionette.TemplateCache,{templateCaches:{},get:function(templateId){var that =this;var cachedTemplate =this.templateCaches[templateId];if (!cachedTemplate){cachedTemplate =new Marionette.TemplateCache(templateId);this.templateCaches[templateId] =cachedTemplate;}
    return cachedTemplate.load();},clear:function(){var i;var length =arguments.length;if (length > 0){for(i=0;i<length;i++){delete this.templateCaches[arguments[i]];}
} else {this.templateCaches ={};}
}
});_.extend(Marionette.TemplateCache.prototype,{load:function(){var that =this;if (this.compiledTemplate){return this.compiledTemplate;}
    var template =this.loadTemplate(this.templateId);this.compiledTemplate =this.compileTemplate(template);return this.compiledTemplate;},loadTemplate:function(templateId){var template =$(templateId).html();if (!template ||template.length ===0){var msg ="Could not find template: '"+ templateId + "'";var err =new Error(msg);err.name ="NoTemplateError";throw err;}
    return template;},compileTemplate:function(rawTemplate){return _.template(rawTemplate);}
});Marionette.Renderer ={render:function(template,data){var templateFunc =typeof template ==='function'?template :Marionette.TemplateCache.get(template);var html =templateFunc(data);return html;}
};Marionette.Callbacks =function(){this.deferred =$.Deferred();this.promise =this.deferred.promise();};_.extend(Marionette.Callbacks.prototype,{add:function(callback,contextOverride){this.promise.done(function(context,options){if (contextOverride){context =contextOverride;}
    callback.call(context,options);});},run:function(options,context){this.deferred.resolve(context,options);}
});Marionette.EventAggregator =Marionette.EventBinder.extend({constructor:function(options){Marionette.EventBinder.apply(this,arguments);_.extend(this,options);},bindTo:function(eventName,callback,context){return Marionette.EventBinder.prototype.bindTo.call(this,this,eventName,callback,context);}
});_.extend(Marionette.EventAggregator.prototype,Backbone.Events);Marionette.EventAggregator.extend =Backbone.View.extend;var slice =Array.prototype.slice;return Marionette;})(Backbone,_,window.jQuery ||window.Zepto ||window.ender);if (typeof DEMDEX ==="undefined") {var DEMDEX ={constants :{},TIM :{constants :{}
}
};}
DEMDEX.UTILS ={statusArray :{"UNDEFINED":"Undefined","ACTIVE":"Active","INACTIVE":"Inactive","DELETED":"Deleted"},currentTime :function(){return new Date().getTime();},dirtyMonitor :{_configs :{cleanup :true,cleaned :false
},_dirtyBit :false,_onDirty :function() {},_onClean :function() {},_elements :[],_errors :[],_defaults :{actions :{"INPUT":"keydown","SELECT":"change","TEXTAREA":"keydown"}
},_cleanup :function() {var self =this;if (!this._configs.cleaned) {$.each(this._elements,function(i,obj) {self._monitorElement(obj,false);});}
},_dirtyIt :function() {this._dirtyBit =1;this._onDirty()
    this._configs.cleanup &&this._cleanup();},_monitorElement :function(arg,watch) {var $elems =arg.element;var action =arg.action ||this._defaults.actions[$elems[0].nodeName.toUpperCase()];action +=".dirtyUtil";if (watch) {var dirtyIt =$.proxy(this._dirtyIt,this)
    if (arg.delegate) {$elems.delegate(arg.delegate,action,dirtyIt)
    }
    else {$elems.bind(action,dirtyIt);}
}
else {$elems.unbind(action);}
},_validate :function() {},isDirty :function() {return this._dirtyBit;},clean :function() {this._dirtyBit =false;this._cleanup();this._onClean();},monitor :function(config) {var self =this;if (config.cleanup) {this._configs.cleanup =config.cleanup;}
    if (config.onDirty &&typeof config.onDirty =="function") {this._onDirty =config.onDirty;}
    if (config.onClean &&typeof config.onClean =="function") {this._onClean =config.onClean;}
    this._elements =config.elements;$.each(config.elements,function(i,obj) {self._monitorElement(obj,true);});}
},pressedEnter :function(e){var keycode;if (window.event){keycode =window.event.keyCode;}else if (e){keycode =e.which;}else{keycode =e.keyCode;}
    if (keycode ==13){return true;}else{return false;}
},addTimeStamp :function(url){var newURL =url;if("&"==url.charAt(url.length-1)){newURL +="ignoreThisTimeStamp="+ this.currentTime() + "&";}else{newURL +="&ignoreThisTimeStamp="+ this.currentTime() + "&";}
    return newURL;},formatPercent:function(num){if(num !=null &&num !=""){num =num * 100;num =num.toFixed(2);num +="%";}
    return num;},formatNumber :function(num,endPoint){var startPoint =0;if(parseInt(num ) < 0 ) {startPoint =1;}
    if(num !=null &&num !=""){num =num.toString();if(endPoint ==null){endPoint =num.length - 1;}
        if(parseInt(num.substring(startPoint,endPoint+1) ) < 1000){return num;}else{var newNum =num.substr(0,endPoint-2) + ","+ num.substr(endPoint-2);return this.formatNumber(newNum,endPoint-3);}
    }else{return num;}
},parseTime :function(dateString){var dateVal =0;pattern1 =/\d+\/\d+\/\d+/;

    if(pattern1.test(dateString) ){var dArray =dateString.split('/');var month =dArray[0] - 1;var day =dArray[1];var year =dArray[2];dateVal =new Date(year,month,day);}
    return dateVal.getTime();},convertToShortDate :function(mils){var date =new Date(parseInt(mils));var month =date.getMonth() + 1;var day =date.getDate();var year =date.getFullYear();return month + "/"+ day + "/"+ year;},encodeDate :function(dateStr){if(dateStr ==null){return "";}
    var dateArr =dateStr.split("/");if(dateArr.length !=3){return "";}
    return dateArr[2] + "-"+ dateArr[0] + "-"+ dateArr[1];},decodeDate :function(dateStr){if(dateStr ==null){return "";}
    var dateArr =dateStr.split("-");if(dateArr.length !=3){return "";}
    return dateArr[1] + "/"+ dateArr[2] + "/"+ dateArr[0];},unescape :function (str){return str.replace(/&amp;/g, "&").replace(/&quot;/g, "\"").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&rsquo;/,"'");

},truncLongStr :function(str,maxLength ){strLength =str.length;if(strLength > maxLength ){return str.substr(0,maxLength - 3) + "...";}else{return str;}
},loadingMsg :'<div class="loadingMsg">'+
'<p><span class="icon-largeLoader">Loading</span></p>'+ '</div>',noDataMsg :'<div class="noDataMsg"><p>No results returned from search.</p></div>',formatFolderHierarchy :function (obj ){var newObj ={"attr":{"id":obj.folderId + "_folder","rel":"folder"},"data":obj.name
};if($.isArray(obj.subFolders) &&obj.subFolders.length > 0){var children =[];$.each(obj.subFolders ,function (i,child){var childObj =DEMDEX.UTILS.formatFolderHierarchy(child);children.push(childObj );}
);$.extend(newObj,{"state":"closed","children":children});}
    return newObj;}
}
if (typeof DEMDEX ==="undefined") {var DEMDEX ={constants :{},TIM :{constants :{}
}
};}
DEMDEX.GRAPH ={timeArray :[],timeAxisTickFormatter:function(val,axis) {if(DEMDEX.GRAPH.timeArray[val]){var date =DEMDEX.GRAPH.timeArray[val];date =DEMDEX.GRAPH.timeArray[val].substring(0,date.lastIndexOf('/'));return date;}else{return "";}
},yAxisTickFormatter :function(val,axis) {label =DEMDEX.UTILS.formatNumber(val);return label;},showTooltip :function(x,y,contents) {$('<div id="tooltip">'+ contents + '</div>').css({position:'absolute',display:'none',top:y + 10,left:x + 10,border:'1px solid #333',padding:'2px','text-align':'left','background-color':'#eee',opacity:0.90
}).appendTo("body").fadeIn(200);},hoverOverGraph :function (event,pos,item) {if (item) {if (previousPoint !=item.datapoint) {previousPoint =item.datapoint;$("#tooltip").remove();var x =DEMDEX.GRAPH.timeArray[item.datapoint[0] ];var y =item.datapoint[1];var num =DEMDEX.UTILS.formatNumber(parseInt(y));var jsDate =DEMDEX.UTILS.parseTime(x);var date =new Date(parseInt(jsDate));DEMDEX.GRAPH.showTooltip(item.pageX,item.pageY,item.series.label + ": "+ num + "<br/>"+ date.toLocaleDateString() );}
}else{$("#tooltip").remove();previousPoint =null;}
}
}
var Mediator =(function(toDebug) {var debug =toDebug ?function(message) {console.log(message);} :function(){},components ={},active_component =null,main_component =null;var isValidComponent =function(component) {if (main_component ==null) {return true;}
    if (active_component ==null) {return true;}
    return main_component ==component ||component.match(RegExp("^"+ active_component));};var broadcast =function(event,args,source) {var e =event ||false;var a =args ||[];if (!e) {return;}
    debug(["Mediator received",e,a].join(' '));for (var c in components) {if (!isValidComponent(c)) {debug("Mediator skipping "+ c);continue;}
        if (typeof components[c]["on"+ e] =="function") {var s =source ||components[c];try {debug("Mediator calling "+ e + " on "+ c);components[c]["on"+ e].call(s,a);} catch (err) {debug(["Mediator error.",e,a,s,err].join(' '));}
        }
    }
};var addComponent =function(name,component,replaceDuplicate) {debug("Mediator adding func: "+ JSON.stringify(component) + " to "+ name);if (name in components) {if (replaceDuplicate) {removeComponent(name);} else {throw new Error('Mediator name conflict: '+ name);}
}
    components[name] =component;};var removeComponent =function(name) {debug("Mediator deleting "+ name);if (name in components) {delete components[name];}
};var getComponent =function(name) {return components[name] ||false;};var contains =function(name) {return (name in components);};var setActiveComponent =function(component_name) {active_component =component_name;debug("Mediator activating: "+ active_component);};var setMainComponent =function(component_name) {main_component =component_name;debug("Mediator setting main component to: "+ main_component);};return {name :"Mediator",broadcast :broadcast,add :addComponent,rem :removeComponent,get :getComponent,has :contains,setMainComponent :setMainComponent,setActiveComponent :setActiveComponent
};}(false));(function(_,APP) {_.templateSettings ={interpolate:/\<\@\=(.+?)\@\>/gim,

    evaluate:/\<\@(.+?)\@\>/gim

};APP.templates.makeTemplate =function(template_name,args) {var template =null;if (template_name instanceof Array) {var tmp =this[template_name[0]];for (var i =1;i < template_name.length;i++) {tmp =tmp[template_name[i]];}
    template =tmp;}
else {template =this[template_name];}
    for (var key in args) {if (args.hasOwnProperty(key)) {template =template.replace(key,args[key]);}
    }
    return template;};APP.templates.getLocalizedMessage =function(code) {return ADOBE.AM.MESSAGES.getMessage(code).message;};APP.templates.graph_no_data =''+ '<div class="noDataMsg"><p>'+ APP.templates.getLocalizedMessage('model_has_no_data')
+ '</p></div>';APP.templates.graph_not_run =''+ '<div class="noDataMsg"><p>'+ APP.templates.getLocalizedMessage('model_has_not_run')
+ '</p></div>';APP.templates.graph_reach_exceeded =''+ '<div class="noDataMsg"><p>'+ APP.templates.getLocalizedMessage('no_valid_model_run_values')
+ '</p></div>';APP.templates.list_page_toolbar ='<ul class="toolbar">'+ '%%CREATE_BUTTON_LI%%'+ '%%ADD_TO_DESTINATION%%'+ '%%CREATE_MODEL_WITH_SELECTED_LI%%'+ '%%DELETE_BUTTON_LI%%'+ '</ul>';APP.templates.list_page_toolbar_create_button ='<li data-type="newSegment"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create New Segment</li>';APP.templates.list_page_toolbar_edit_button ='<li data-type="editSegment"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Edit Segment</li>';APP.templates.toolbar_delete_selected_button ='<li data-type="deleteSelected"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/AlertDeactivate_Standard.png">Delete Selected</li>';APP.templates.toolbar_delete_button ='<li data-type="deleteSegment"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png">Delete</li>';APP.templates.toolbar_clone_button ='<li data-type="cloneSegment"><img class="icon" src="/images/aam/Clone_Standard.png" />Clone</li>';APP.templates.toolbar_create_model_with_selected ='<li data-type="createModelWithSelected"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create Model with Selected</li>';APP.templates.can_show_segment_to_destination_in_sb_toolbar_buttons ='<li data-type="addToDestination"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Add Selected To Destination</li>';APP.templates.view_page_toolbar ='<ul class="toolbar">'+ '%%CREATE_BUTTON_LI%%'+ '%%EDIT_BUTTON_LI%%'+ '%%CLONE_BUTTON_LI%%'+ '%%DELETE_BUTTON_LI%%'+ '</ul>';APP.templates.segment_result_item ='<td>'+ '<span class="result_checkbox">'+ '<@ if (typeof checked == "undefined" || checked == false) { @>'+ '<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_unchecked.png" class="result_checkbox_disabled" />'+ '<@ } else { @>'+ '<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_checked.png" class="result_checkbox_enabled" />'+ '<@ } @>'+ '</span>'+ '</td>'+ '<td><@= sid @></td>'+ '<td><a href="#view/<@= sid @>"><@= name @></a></td>'+ '<td class="description"><span title="<@= description @>"><@= description @></span></td>'+ '<td>'+ '<@ if (status == "ACTIVE") { @>Active'+ '<@ } else { @><span class="gray_text">Inactive</span>'+ '<@ } @>'+ '</td>'+ '<td>'+ '<@ if (permissions.edit) { @>'+ '<a href="#edit/<@= sid @>"><img class="edit btn_action" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Edit_Standard.png" alt="Edit" title="Edit" /></a>'+ '<@ if (status == "ACTIVE") { @>'+ '<img class="pause btn_action" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Pause_Standard.png" alt="Pause" title="Pause" />'+ '<@ } else { @>'+ '<img class="play btn_action" src="%%IMG_PLAY_STANDARD%%" alt="Play" title="Play" />'+ '<@ } @>'+ '<@ } @>'+ '<@ if (permissions.clone) { @>'+ '<img class="clone btn_action" src="%%IMG_CLONE_STANDARD%%" alt="Clone" title="Clone" />'+ '<@ } @>'+ '<@ if (permissions._delete) { @>'+ '<img class="delete btn_action" alt="Delete" title="Delete" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png" />'+ '<@ } @>'+ '</td>';APP.templates.server_pagination ='<div class="breadcrumb">'+'<span class="cell">View'+'<select class="serverhowmany">'+'<option value="10" <@ if (pageSize == 10) { @>selected<@ } @>>10</option>'+'<option value="25" <@ if (pageSize == 25) { @>selected<@ } @>>25</option>'+'<option value="50" <@ if (pageSize == 50) { @>selected<@ } @>>50</option>'+'</select>'+'/ page'+'&nbsp;&nbsp;</span>'+'<span class="cell">'+'<@ if (page > firstPage) { @>'+'<a href="#" class="serverprevious">'+'<button style="min-width:28px;width:28px;">&#9668;</button>&nbsp;&nbsp;'+'</a>'+'<@ }else{ @>'+'<button style="min-width:28px;width:28px;" class="disabled">&#9668;</button>'+'<@ } @>'+'&nbsp;&nbsp;<span>'+'<select name="pagination_pages" class="pagination_pages">'+'<@ if (page == 0) { page = 1;  @>'+'<@ } else if (page > 0) { page++; } @>'+'<@ for(p = 1; p <= totalPages; p++){ @>'+'<option value="<@= p @>" class="page <@ if (page == p) { @>selected <@ } @>" <@ if (page == p) { @>selected<@ } @>><@= p @></option>'+'<@ } @>'+'</select>'+'<span class="divider">&nbsp;/&nbsp;</span>'+'<@= typeof totalPages != "undefined" ? totalPages : 0 @>'+'&nbsp;&nbsp;</span>'+'<@ if (page < totalPages) { @>'+'<a href="#" class="servernext">'+'<button style="min-width:28px;width:28px;">&#9658;</button>'+'</a>'+'<@ } else { @>'+'<button style="min-width:28px;width:28px;" class="disabled">&#9658;</button>'+'<@ } @>'+'</span>'+ '</div>';APP.templates.view_page_basic_info ='<h3>Basic Information</h3><table><tbody>'+'<tr><td class="label">Segment ID:</td><td><@= sid @></td></tr>'+'<tr><td class="label">Legacy ID:</td><td><@= legacyId @></td></tr>'+'<tr><td class="label">Name:</td><td><@= name @></td></tr>'+'<tr><td class="label">Description:</td><td><@= description @></td></tr>'+'<tr><td class="label">Integration Code:</td><td><@= integrationCode @></td></tr>'+'<tr><td class="label">Data Source:</td><td><@= dataSourceName @></td></tr>'+'<tr><td class="label">Stored In:</td><td><@= path @></td></tr>'+'<tr><td class="label">Status:</td><td>'+ '<@ if (status == "ACTIVE") { @>Active'+ '<@ } else { @>Inactive'+ '<@ } @>'+'</td></tr>'+'<tr><td class="label">Real-time Segment Population:</td><td>7 Days: <@= instantUniques7Day @><br />30 Days: <@= instantUniques30Day @><br />60 Days: <@= instantUniques60Day @></td></tr>'+'<tr><td class="label">Total Segment Population:</td><td>7 Days: <@= totalUniques7Day @><br />30 Days: <@= totalUniques30Day @><br />60 Days: <@= totalUniques60Day @></td></tr>'+'</tbody></table><div class="clear"></div>';APP.templates.edit_page_basic_info ='<div id="sebiBox" class="left basicInfo"><form><table class="infoTable"><tbody>'+'<tr class="sb_edit_basic_info_sid"><td class="label" data-type="basic_info_sid">Segment ID:</td><td><@= the_sid @></td></tr>'+'<tr class="sb_edit_basic_info_csegid"><td class="label" data-type="basic_info_csegid">Legacy ID:</td><td><@= the_csegid @></td></tr>'+'<tr><td class="label">Name:</td><td><input type="text" size="30" name="name" value="<@= name || "" @>" /></td></tr>'+'<tr><td class="label">Description:</td><td><input type="text" size="30" name="description" value="<@= the_description @>" /></td></tr>'+'<tr><td class="label">Integration Code:</td><td><input type="text" size="30" name="integrationCode" value="<@= integrationCode @>" /></td></tr>'+'<tr><td class="label">Data Source:</td><td class="segment_datasources"><@= dataSourceName @></td></tr>'+'<tr><td class="label">Status:</td><td>'+ '<select name="status">'+'<option value="ACTIVE" <@ if (status == "ACTIVE") { @>selected="selected"<@ } @>>Active</option>'+'<option value="INACTIVE" <@ if (status == "INACTIVE") { @>selected="selected"<@ } @>>Inactive</option>'+'</select>'+'</td></tr>'+'<tr>'+'<td></td>'+'</tr>'+'</tbody></table></form><div class="clear"></div></div>';APP.templates.edit_page_datasources ='<select name="dataSourceId">'+ '<@ _.each(datasources, function(ds) { @>'+ '<option value="<@= ds.get("dataSourceId") @>" <@ if (ds.get("dataSourceId") == model_dataProviderId) { @>selected="selected" <@ } @>><@= ds.get("name") @> (DPID: <@= ds.get("dataSourceId") @>)</option>'+ '<@ }) @>'+ '</select>';APP.templates.historic_segment_size ='<div class="AUI_content_white" id="historic_segment_size">'+ '<div class="panel_title">Estimated Historic Segment Size <span class="context-help" title="Help" data-id="r_segment_data.html">&nbsp;</span></div>'+ '<div class="panel_content">'+ '     <div class="days_7">Last 7 Days: <span class="day_number_7">-</span></div>'+ '     <div class="days_30">Last 30 Days: <span class="day_number_30">-</span></div>'+ '     <div class="days_60">Last 60 Days: <span class="day_number_60">-</span></div>'+ '<div class="recalculate_size"><button type="button" class="secondary">Recalculate Size</button></div>'+ '</div>'+ '</div>';APP.templates.instant_segment_size ='<div class="AUI_content_white">'+ '<div class="panel_title">Real-time Segment Population <span class="context-help" title="Help" data-id="r_segment_data.html">&nbsp;</span></div>'+ '<div class="panel_content">'+ '     <div>Last 7 Days: <span class="7day_number"><@= instantUniques7Day @></span></div>'+ '     <div>Last 30 Days: <span class="30day_number"><@= instantUniques30Day @></span></div>'+ '     <div>Last 60 Days: <span class="60day_number"><@= instantUniques60Day @></span></div>'+ '</div>'+ '</div>';APP.templates.realized_segment_size ='<div class="AUI_content_white">'+ '<div class="panel_title">Total Segment Population <span class="context-help" title="Help" data-id="r_segment_data.html">&nbsp;</span></div>'+ '<div class="panel_content">'+ '     <div>Last 7 Days: <span class="7day_number"><@= totalUniques7Day @></span></div>'+ '     <div>Last 30 Days: <span class="30day_number"><@= totalUniques30Day @></span></div>'+ '     <div>Last 60 Days: <span class="60day_number"><@= totalUniques60Day @></span></div>'+ '</div>'+ '</div>';APP.templates.viewpage_destination_table_row ='<td><@= destination_id @></td><td><a href="'+ APP.state.vars.manage_destination_path + '?destinationId=<@= destination_id @>#view"><@= destination_name @></a></td><td><@= destination_type @></td><td><@= ADOBE.AM.UTILS.HELPERS.decorateWithSpanAndSlice(derivedMapping) @></td>';APP.templates.destination_table_editable_row ='<td><@= destination_id @></td><td><@= destination_name @></td><td><@= destination_type @></td><td><@= ADOBE.AM.UTILS.HELPERS.decorateWithSpanAndSlice(derivedMapping) @></td><td><@= startDate ? startDate : "" @></td><td><@= endDate ? endDate : "" @></td><td class="actions"><a class="edit" rel="<@= destinationId @>,<@= destinationMappingId @>"><img class="icon" src="https://www.omniture-static.com/aui/1.0.1/images/icons/12x12/Edit_Standard.png"></a> <a class="remove" rel="<@= destinationId @>,<@= destinationMappingId @>"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png"></a></td>';APP.templates.viewpage_destination_message ='%%MESSAGE%%';APP.templates.browse_traits_modal =''+ '<div id="browse_traits_modal">'+'<div class="layout-2-col " style="width:1000px;height:550px;">'+'<div class="sidebar col1 panels trait_storage">'+'<div class="trait_search"></div>'+ '<h4>Traits Storage</h4>'+'<div id="traits_folder_tree""></div>'+'</div>'+'<div class="col2">'+'<div class="panels traits_list">'+ '<form id="form_traits">'+'<table class="table bb-table-widget traits_table" id="traits_table" width="100%">'+'<thead>'+'<tr>'+'<th class="column_checkbox disabled column_radio">'+'<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_unchecked.png" class="AUI_Menu_icon result_checkbox_disabled" />'+'<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_checked.png" class="AUI_Menu_icon result_checkbox_enabled" />'+'</th>'+'<th class="sortable" data-sortby="sid">Trait ID</th>'+'<th class="sortable" data-sortby="name">Name</th>'+'<th class="sortable" data-sortby="traitType">Type</th>'+'<th class="sortable" data-sortby="dataSourceId">Data Source</th>'+'<th class="sortable" data-sortby="uniques7Day">7-Day Uniques</th>'+'<th class="sortable" data-sortby="uniques30Day">30-Uniques</th>'+'<th class="sortable" data-sortby="uniques60Day">60-Day Uniques</th>'+'</tr>'+'</thead>'+'<tbody id="traits_table_tbody"></tbody>'+'</table>'+ '</form>'+'<div id="traits_pagination" class="pagination"></div>'+'</div>'+'</div>'+ '</div>'+ '</div>';APP.templates.browse_segments_modal =''+ '<div id="browse_segments_modal">'+'<div class="layout-2-col " style="width:1000px;height:550px;">'+'<div class="col1 panels segment_storage">'+'<h4>Segments Storage</h4>'+'<div class="segment_search"></div>'+'<div id="segment_folder_tree""></div>'+'</div>'+'<div class="col2">'+'<div class="panels segments_list">'+ '<form id="form_segments">'+'<table class="table bb-table-widget" id="segments_table" width="100%">'+'<thead>'+'<tr>'+ '<th class="column_checkbox disabled"></th>'+'<th class="sortable" data-sortby="sid">Segment ID</th>'+'<th class="sortable" data-sortby="name">Name</th>'+'<th class="sortable" data-sortby="description">Description</th>'+'<th class="sortable" data-sortby="status">Status</th>'+'</tr>'+'</thead>'+'<tbody id="segments_table_tbody"></tbody>'+'</table>'+'</form>'+'<div id="segments_pagination" class="pagination"></div>'+'</div>'+'</div>'+ '</div>'+ '</div>';APP.templates.browse_destinations_modal =''+ '<div id="browse_destinations_modal">'+'<div class="layout-2-col " style="width:1000px;height:550px;">'+'<div class="col1 panels destinations_storage">'+'<h4>Destinations Search</h4>'+'<div class="destination_search"></div>'+'</div>'+'<div class="col2" style="float: left; margin-left: 10px;">'+'<div class="panels destinations_list" style="h overflow: auto;">'+'<table class="table bb-table-widget browse_destinations_table" style="width: 756px;">'+'<thead>'+'<tr>'+'<th>'+'</th>'+'<th class="sortable" data-type="destinationId">Destination ID</th>'+'<th class="sortable" data-type="name">Name</th>'+'<th class="sortable" data-type="description">Description</th>'+'<th class="sortable" data-type="destinationType">Type</th>'+'</tr>'+'</thead>'+'<tbody id="traits_table_tbody"></tbody>'+'</table>'+'</div>'+'</div>'+'<div class="clear"></div>'+ '</div>'+ '</div>';APP.templates.browse_models_modal =''+ '<div id="browse_models_modal">'+'<div class="layout-2-col " style="width:1000px;height:550px;">'+'<div class="col1 panels models_search">'+'<h4>Models Search</h4>'+'</div>'+'<div class="col2" style="float: left; margin-left: 10px;">'+'<div class="panels models_list" style="overflow: auto;">'+ '<form id="form_models">'+ '<table class="table bb-table-widget browse_models_table" id="models_table" style="width: 756px;">'+ '<thead>'+ '<tr>'+ '<th>'+ '</th>'+ '<th class="sortable" data-sortby="algoModelId">ID</th>'+ '<th class="sortable" data-sortby="name">Name</th>'+ '<th class="sortable" data-sortby="description">Description</th>'+ '<th class="sortable" data-sortby="algorithm">Algorithm</th>'+ '<th class="sortable" data-sortby="status">Status</th>'+ '<th class="sortable" data-sortby="lookback">Look Back</th>'+ '<th class="sortable" data-sortby="lastSuccessfulRunTimestamp">Last Successful Run</th>'+ '</tr>'+ '</thead>'+ '<tbody id="models_table_tbody"></tbody>'+ '</table>'+ '</form>'+'</div>'+'</div>'+'<div class="clear"></div>'+ '</div>'+ '</div>';APP.templates.model_table_row =''+ '<td>'+ '<span class="radio">'+ '<input type="radio" name="selected_model" value="<@= t.get("algoModelId") @>" />'+ '</span>'+ '</td>'+ '<td><@= t.get("algoModelId") @></td>'+ '<td><@= t.get("name") @></td>'+ '<td><@= t.get("description") @></td>'+ '<td><@= displayAlgorithm(t.get("algoTypeId")) @></td>'+ '<td><@= displayStatus(t.get("status")) @></td>'+ '<td><@= t.get("lookBackPeriod") @></td>'+ '<td><@= formatTimestamp(t.get("lastSuccessfulRunTimestamp")) @></td>';APP.templates.trait_table_row =''+ '<td>'+ '<@ if (document.getElementsByTagName("body")[0].getAttribute("class").indexOf("Models") > -1) { @>'+ '<span class="radio">'+ '<input type="radio" name="selected_trait" value="<@= t.get("sid") @>" />'+ '</span>'+ '<@ } else { @>'+ '<span class="result_checkbox">'+ '<@ if (t.get("checked") == true) { @>'+ '<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_checked.png" class="result_checkbox_disabled" />'+ '<@ } else { @>'+ '<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_unchecked.png" class="result_checkbox_enabled" />'+ '<@ } @>'+ '</span>'+ '<@ } @>'+ '</td>'+ '<td><@= t.get("sid") @></td>'+ '<td><@= t.get("name") @></td>'+ '<td><@= getTraitTypeName(t.get("traitType")) || "" @></td>'+ '<td><@= (dataSourceName + "(" + t.get("dataSourceId") + ")") || "" @></td>'+ '<td class="days_7"><@= ADOBE.AM.UTILS.HELPERS.formatNumber(t.get("uniques7Day")) @></td>'+ '<td class="days_30"><@= ADOBE.AM.UTILS.HELPERS.formatNumber(t.get("uniques30Day")) @></td>'+ '<td class="days_60"><@= ADOBE.AM.UTILS.HELPERS.formatNumber(t.get("uniques60Day")) @></td>';APP.templates.segment_table_row =''+ '<td>'+'<span class="radio">'+ '<input type="radio" name="selected_trait" value="<@= t.get("sid") @>" />'+ '</span>'+ '</td>'+ '<td><@= t.get("sid") @></td>'+ '<td><@= t.get("name") @></td>'+ '<td><@= t.get("description") @></td>'+ '<td>'+ '<@ if (t.get("status") == "ACTIVE") { @>Active'+ '<@ } else { @><span class="gray_text">Inactive</span>'+ '<@ } @>'+ '</td>';APP.templates.destination_table_row =''+ '<td>'+ '<input id="order_<@= t.get(\"destinationId\") @>" name="addDestRadio" type="radio" />'+ '</td>'+ '<td><@= t.get("destinationId") @></td>'+ '<td><@= t.get("name") @></td>'+ '<td><@= t.get("description") || "" @></td>'+ '<td><@ switch (t.get("destinationType")) { case "PUSH": @>URL<@ break; case "S2S": @>Server-to-Server<@ break; case "ADS": @>Cookie<@ break; default: @><@= t.get("destinationType") || "" @><@ break; } @></td>';APP.templates.segment_builder_widget ={};APP.templates.segment_builder_widget.elements ={};APP.templates.segment_builder_widget.elements.op =''+ '<tr class="ruleOp <@= op_wrapper_class @>">'+'<td class="first"></td>'+'<td colspan="3" class="middle">'+'<select class="ruleOpSelect">'+'<option <@= selected == false ? "selected=selected" : "" @>></option>'+'<option <@= selected == "AND" ? "selected=selected" : "" @>>AND</option>'+'<option <@= selected == "OR" ? "selected=selected" : "" @>>OR</option>'+'<option <@= selected == "AND NOT" ? "selected=selected" : "" @>>AND NOT</option>'+'</select>'+'<span><@= selected @></span>'+'</td>'+'<td class="last"></td>'+ '</tr>';APP.templates.segment_builder_widget.elements.rule_wrapper =''+'<div class="rule_wrapper">'+'<div class="rule_content" style="position:relative;float:left"><@= content @></div>'+APP.templates.segment_builder_widget.elements.solr
+'<br class="clear" />'+'</div>';APP.templates.segment_builder_widget.elements.rule =''+'<tr data-sid="<@= sid @>" class="<@= sid @>_rule_sid traitRule <@ if (rowspan) { @>rf<@ } @>">'+'<td class="first"><img style="display:block;margin: 4px 0 0 10px;" class="mover" src="https://www.omniture-static.com/aui/1.0.2/images/ui/Tables/grabber.png" /></td>'+'<td class="trait"><p class="trait_name table_cell"><a title="<@= name@>"><@= name @></a></p></td>'+'<td class="days_30"><p class="table_cell table_uniques">Last 30 Days: <span class="day_number_30"><@= uniques @></span></p></td>'+'<td class="actions"><img src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png" alt="Delete" class="delete_icon" /></td>'+'<td class="last" width="10"></td>'+'<@ if (rowspan) { @>'+'<@= rf_html @>'+'<@ } @>'+'</tr>';APP.templates.segment_builder_widget.elements.rf_cell =''+'<td class="rf_cell <@ if (typeof state != \"undefined\") {@><@= state @><@ } else {@>off<@}@>" rowspan="<@= rowspan @>">'+'<img class="rf_off" src="'+ APP.state.vars.images.rf_off + '" />'+'<img class="rf_on" src="'+ APP.state.vars.images.rf_on + '" />'+'<img class="rf_clicked" src="'+ APP.state.vars.images.rf_clicked + '" />'+'<div class="solr_wrapper"><span class="days_30">Last 30 Days:  </span><span class="solr_number">-</span></div>'+'<div style="position:relative"><div class="rf_popup">'+'<p class="rf_title">Recency and Frequency<span class="context-help" title="Help" data-id="c_recency_frequency.html">&nbsp;</span></p>'+'<select class="frequency_ops">'+'<option value="<=" <@= frequency_ops == "<=" ? "selected=selected" : "" @>><=</option>'+'<option value="==" <@= frequency_ops == "==" ? "selected=selected" : "" @>>==</option>'+'<option value=">=" <@= frequency_ops == ">=" ? "selected=selected" : "" @>>>=</option>'+'</select>'+'<span class="frequency_ops"><@= frequency_ops @></span>'+'<input type="text" size="2" value="<@= frequency_val @>" class="frequency_val" />'+'<span class="frequency_val"><@= frequency_val @></span>'+'<span> times in</span>'+'<div class="rf_design">'+'<div class="left line"></div>'+'<p class="left">/</p>'+'<div class="right line"></div>'+'<br class="clear" />'+'</div>'+'<select class="recency_ops">'+'<option value="<=" <@= recency_ops == "<=" ? "selected=selected" : "" @>><=</option>'+'<option value=">=" <@= recency_ops == ">=" ? "selected=selected" : "" @>>>=</option>'+'</select>'+'<span class="recency_ops"><@= recency_ops @></span>'+'<input type="text" size="2" value="<@= recency_val @>" class="recency_val" />'+'<span class="recency_val"><@= recency_val @></span>'+'<span> days ago</span>'+'<br class="clear" />'+'<button type="button" class="primary">Clear</button>'+'</div></div>'+'</td>';APP.templates.rules_with_top_bottom =''+'<tr class="groupTop ruleBorder">'+'<td class="first"></td>'+'<td colspan="3"></td>'+'<td class="last"></td>'+'</tr>'+'<@= html @>'+'<tr class="groupBtm ruleBorder">'+'<td class="first"></td>'+'<td colspan="3"></td>'+'<td class="last"></td>'+'</tr>';APP.templates.segment_builder_widget.segment_traits_tab =''+ '<div class="st_top">'+ '<div class="ruleDisplay">'+'<table class="groupTable">'+'<tbody>'+'</tbody>'+'</table>'+'</div>'+ '</div>'+ '<div class="st_bottom">'+ '<div class="panel_title">Add a Trait</div>'+ '<div class="panel_title">Search by Trait</div>'+ '<div>'+'<input id="trait_autocomplete" type="text" value="" size="40" />'+ '<img class="autocomplete_loading" src="https://www.omniture-static.com/aui/1.0.2/images/icons/16x16/Loading_Animated.gif" />&nbsp;'+ '<button type="button" class="primary" id="trait_add">Add Trait</button>'+ '<button type="button" class="primary" id="trait_browse">Browse All Traits</button>'+'</div>'+ '</div>';APP.templates.segment_builder_widget.segment_expression_tab =''+ '<div class="segment_expression">'+ '<textarea id="segment_expression" cols="120" rows="10"></textarea>'+ '<p style="line-height:28px">'+ '<button type="button" class="primary validate_expression">Validate Expression</button><button type="button" class="reset_and_return">Reset and Return to Basic View</button>'+'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="see_all_traits">Click to see all traits</a>'+ '</p>'+'<div class="list_traits_in_segment"></div>'+ '</div>';APP.templates.segment_builder_widget.trait_modal =''+ '<div class="trait_modal">'+ '<h4>Basic Information</h4>'+'<table>'+'<tr>'+'<td class="label">Trait ID</td>'+'<td><@= t.get("sid") @></td>'+'</tr>'+'<tr>'+'<td class="label">Name</td>'+'<td><@= t.get("name") @></td>'+'</tr>'+'<td class="label">Description</td>'+'<td><@= t.get("description") @></td>'+'</tr>'+'<tr>'+'<td class="label">Type</td>'+'<td><@= type @></td>'+'</tr>'+'<td class="label">Data Source</td>'+'<td><@= datasource @></td>'+'</tr>'+ '<tr>'+'<td class="label">Trait Rule</td>'+'<td><@= t.get("traitRule") || "" @></td>'+'</tr>'+'<tr>'+'<td class="label">Integration Code</td>'+'<td><@= t.get("integrationCode") || "" @></td>'+'</tr>'+'<td class="label">Stored In</td>'+'<td><@= folder @></td>'+'</tr>'+'<tr>'+'<td class="label">Data Category</td>'+'<td><@= category @></td>'+'</tr>'+'<td class="label days_7">7-Day Uniques</td>'+ '<td><@ if (isNaN(t.get("uniques7Day"))) {@>&mdash;<@} else {@><@= ADOBE.AM.UTILS.HELPERS.formatNumber(t.get("uniques7Day")) @><@} @></td>'+'</tr>'+'<tr>'+'<td class="label days_30">30-Day Uniques</td>'+ '<td><@ if (isNaN(t.get("uniques30Day"))) {@>&mdash;<@} else {@><@= ADOBE.AM.UTILS.HELPERS.formatNumber(t.get("uniques30Day")) @><@} @></td>'+'</tr>'+'<tr>'+'<td class="label days_60">60-Day Uniques</td>'+'<td><@ if (isNaN(t.get("uniques60Day"))) {@>&mdash;<@} else {@><@= ADOBE.AM.UTILS.HELPERS.formatNumber(t.get("uniques60Day")) @><@} @></td>'+'</tr>'+'<tr class="last-child">'+'<td class="label">Comments</td>'+'<td><@= t.get("comments") || "" @></td>'+'</tr>'+'</table>'+ '</div>';APP.templates.model_builder ={};APP.templates.model_builder.page ={};APP.templates.model_builder.basic_info_accordion =''+ '<div class="input_holder"><label for="name">Name:</label><input type="text" name="name" value="<@= name @>" /></div>'+ '<div class="input_holder"><label for="description">Description:</label><input type="text" name="description" value="<@ try { @><@= description @><@ } catch(err) {} @>" /></div>'+ '<div class="input_holder"><label for="status">Status:</label>'+ '<select name="status">'+ '<option value="ACTIVE" <@= isSelected("ACTIVE") @>>Active</option>'+ '<option value="INACTIVE" <@= isSelected("INACTIVE") @>>Inactive</option>'+ '</select>'+ '</div>'+ '<input type="hidden" name="dataSources" value="<@ try { @><@= dataSources @><@ } catch(err) {} @>" />';APP.templates.model_builder.configuration_accordion =''+ '<div class="trait_or_segment section"></div>'+ '<div class="lookback_and_algorithms section"></div>'+ '<div class="layout-helper">'+ '<div class="layout-helper-sub">'+ '<div class="datasources section"></div>'+ '</div>'+ '</div>';APP.templates.model_builder.page.create_edit =''+ '<div class="page_title">Model Builder</div>'+ '<br style="clear:both" />'+ '<div id="basic_info_accordion"></div>'+ '<div id="configuration_accordion"></div>'+ '<div class="action_btns">'+'<button class="save primary">Save</button>'+'<button class="cancel">Cancel</button>'+ '</div>';APP.templates.model_builder.page.trait_or_segment =''+ '<input type="hidden" value="<@ try { @><@= sid @><@ } catch(err) {} @>" name="sid" />'+ '<h1>Select a Baseline Trait or Segment</h1>'+ '<div class="btns">'+ '<@ if (can_show_view_traits()) { @><button type="button" class="primary task" id="browse_all_traits">Browse All Traits</button><@ } @>'+ '<@ if (can_show_view_segments()) { @><button type="button" class="primary task" id="browse_all_segments">Browse All Segments</button><@ } @>'+ '</div>'+ '<div id="traitsegment_wrapper">'+ '<div class="traitsegment_inner"><hr />'+ '<div class="basic_info">'+ '<h2 class="trait_basic_info">Baseline Trait Information</h2>'+ '<h2 class="segment_basic_info">Baseline Segment Information</h2>'+ '<dl>'+ '<dt>Name:</dt>'+ '<dd><@= name @></dd>'+ '<dt>Description:</dt>'+ '<dd><@ try { @><@= description @><@ } catch(err) {} @></dd>'+ '<dt>Stored In:</dt>'+ '<dd><@ try { @><@= c_folderPath @><@ } catch(err) {} @></dd>'+ '<dt class="segment_status">Status:</dt>'+ '<dd>'+ '<@ if (status == "ACTIVE") { @>Active'+ '<@ } else { @><span class="gray_text">Inactive</span>'+ '<@ } @>'+ '</dd>'+ '</dl>'+ '</div>'+ '<div class="graph">'+ '<h2 class="segment_graph">Segment Graph</h2>'+ '<h2 class="trait_graph">Trait Graph</h2>'+ '<div id="graph_container"><div id="cloudVizChart"></div></div>'+ '</div>'+ '</div>'+ '</div>';APP.templates.model_builder.page.lookback_algorithms_create =''+ '<div id="lookback">'+ '<h1>Select Look Back Period</h1>'+ '<p>Look back period of '+ '<select name="lookBackPeriod">'+ '<option value="30">30</option>'+ '<option value="60">60</option>'+ '<option value="90">90</option>'+ '</select>'+ ' days.</p>'+ '</div>'+ '<div id="algorithms">'+ '<h1>Select Algorithm</h1>'+ '</div>';APP.templates.model_builder.page.lookback_algorithms_readonly =''+ '<div id="lookback">'+ '<h1>Selected Look Back Period:</h1>'+ '<p>Look back period of <@= lookBackPeriod @> days.</p>'+ '</div>'+ '<div id="algorithms">'+ '<h1>Selected Algorithm:</h1>'+ '<p> <@= getAlgorithmName(algoTypeId) @> </p>'+ '</div>';APP.templates.model_builder.page.algorithm_row =''+ '<div class="radiobtn">'+ '<input type="radio" name="algoTypeId" value="<@= algoTypeId @>" />'+ '</div><div class="name"><@= name @></div>';APP.templates.model_builder.page.datasources_create =''+ '<h1>Select Available Data</h1>'+ '<div id="datasources_container">'+ '<table class="table">'+ '<thead><tr>'+ '<th width="4%" class="checkbox">'+ '<div>'+ '<input type="checkbox" />'+ '</div>'+ '</th>'+ '<th width="10%" class="sortable" data-sortby="dataSourceId">DPID</th>'+ '<th width="58%" class="sortable" data-sortby="name">Name</th>'+ '<th width="28%" class="sortable" data-sortby="first_third">First/Third Party Data</th></tr>'+ '</thead>'+ '<tbody></tbody>'+ '</table>'+ '</div>';APP.templates.model_builder.page.datasource_create_row =''+ '<td class="checkbox">'+ '<div>'+ '<input type="checkbox" value="<@= dataSourceId @>" />'+ '</div>'+ '</td>'+ '<td><@= dataSourceId @></td>'+ '<td><@= name @></td>'+ '<td><@= isFirstParty(pid) ? "First Party" : "Third Party" @></td>';APP.templates.model_builder.page.datasources_readonly =''+ '<h1>Selected Data</h1>'+ '<div id="datasources_container">'+ '<table class="table">'+ '<thead><tr>'+ '<th width="10%" class="sortable" data-sortby="dataSourceId">DPID</th>'+ '<th width="63%" class="sortable" data-sortby="name">Name</th>'+ '<th width="27%" class="sortable">First/Third Party Data</th></tr>'+ '</thead>'+ '<tbody>'+ '</tbody>'+ '</table>'+ '</div>';APP.templates.model_builder.page.datasource_readonly_row =''+ '<td><@= dataSourceId @></td>'+ '<td><@= name @></td>'+ '<td><@= isFirstParty(pid) ? "First Party" : "Third Party" @></td>';APP.templates.model_builder.page.process_freq =''+ '<h1>Select Look Back Period</h1>'+ '<p>Process model every '+ '<select name="intervalSeconds">'+ '<option value="2592000">30</option>'+ '<option value="5184000">60</option>'+ '<option value="7776000">90</option>'+ '</select>'+ ' days.';APP.templates.model_builder.page.view_page =''+ '<div id="ModelView">'+'<div class="top_toolbar">'+'<ul class="toolbar">'+ '<@ if (can_show_create_button()) {@><li class="new_model"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create New Model</li><@ } @>'+ '<@ if (can_show_edit_button()) {@><li class="edit_model"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Edit_Standard.png">Edit</li><@ } @>'+ '<@ if (can_show_clone_button()) {@><li class="clone_model"><img class="icon" src="%%IMG_CLONE_STANDARD%%">Clone</li><@ } @>'+ '<@ if (show_delete_button()) {@><li class="delete_model"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png">Delete</li><@ } @>'+ '<@ if (can_show_pause_play_buttons()) {@><li class="status"><@= getStatusImage() @></li><@ } @>'+ '</ul>'+'</div>'+'<h1 class="page_title"><@= getModelName() @></h1><span class="context-help" title="Help" data-id="c_models_summary.html">&nbsp;</span>'+'<div class="basic_info_and_graph dashboard">'+'<div class="reach_accuracy_view right"></div>'+'<div class="basic_info_view basicInfo left"></div>'+'</div>'+'<div class="dashboard no-border">'+ '<div class="layout_helper_model_processing">'+'<div class="widget left model_processing_history_wrapper">'+'<h3>Model Processing History (Last 10 Processes)</h3>'+'<div class="model_processing_history"></div>'+'</div>'+ '</div>'+ '<div class="layout_helper_influential_traits">'+'<div class="widget right last influential_traits_wrapper">'+'<h3>Influential Traits (Top 50)</h3>'+'<div class="influential_traits"></div>'+'</div>'+ '</div>'+'<br class="clear" />'+'</div>'+'<div class="dashboard bottom no-border">'+'<div class="widget traits_using_model_name_wrapper">'+'<h3>Traits Using <@= getModelName() @></h3>'+'<div class="traits_using_model_name"></div>'+'</div>'+'</div>';APP.templates.model_builder.page.model_basic_information =''+'<div class="basic_info">'+ '<h3>Basic Information</h3>'+ '<dl>'+ '<dt>Name:</dt>'+ '<dd><@= name @></dd>'+ '<dt>Description:</dt>'+ '<dd><@= displayValue(description) @></dd>'+ '<dt>Baseline <span class="<@= getBaselineType() @>"><span class="trait">Trait</span><span class="segment">Segment</span></span>:</dt>'+ '<dd><@= getBaselineName() @> (<@= sid @>)</dd>'+ '<dt>Algorithm:</dt>'+ '<dd><@= algorithm.name @></dd>'+ '<dt>Historic Increment:</dt>'+ '<dd><@= lookBackPeriod @> Days</dd>'+ '<dt>Last Run:</dt>'+ '<dd><@ try {@><@= formatTimestamp(lastSuccessfulRunTimestamp) @><@} catch(__err__) {@>-<@}@></dd>'+ '</dl>'+ '</div>';APP.templates.model_builder.page.model_reach_accuracy_graph =''+ '<div class="graph">'+'<h3>Model Reach & Accuracy</h3>'+ '<div id="model_graph_container"></div>'+ '</div>';APP.templates.model_builder.page.model_processing_history =''+ '<table class="table">'+'<thead>'+'<th>Processing Date and Time</th>'+ '<th>Data Generated?</th>'+'</thead>'+'<tbody class="history_list"></tbody>'+ '</table>';APP.templates.model_builder.page.model_processing_history_row ='<td><@= datetime @></td><td><@= dataGenerated @></td>';APP.templates.model_builder.page.model_processing_history_not_run =''+ '<tr><td>'+ APP.templates.getLocalizedMessage('model_has_not_run')
+ '</td></tr>';APP.templates.model_builder.page.model_processing_history_nodata =''+ '<tr><td>'+ APP.templates.getLocalizedMessage('model_has_not_run')
+ '</td></tr>';APP.templates.model_builder.page.influential_traits =''+ '<div class="table_wrapper">'+'<table class="table">'+'<thead>'+'<th class="sortable desc" data-sortby="rank" width="5%">Rank</th>'+'<th class="sortable" data-sortby="sid" width="10%">Trait ID</th>'+'<th class="sortable" data-sortby="name" width="25%">Name</th>'+'<th width="45%">Description</th>'+'<th class="sortable" data-sortby="uniques30Day" width="15%">30-Day Uniques</th>'+'</thead>'+'<tbody class="influential_trait_list"></tbody>'+ '</table>'+ '</div>'+ '<button type="button" class="primary">View All Influential Traits</button>';APP.templates.model_builder.page.influential_traits_row =''+ '<td><@= rank @></td>'+ '<td class="sid"><a href="#" data-sid="<@= sid @>"><@= sid @></a></td>'+ '<td class="name"><a href="#" data-sid="<@= sid @>"><@= name @></a></td>'+ '<td><@= description @></td>'+ '<td class="days_30"><@= ADOBE.AM.UTILS.HELPERS.formatNumber(uniques30Day) @></td>';APP.templates.model_builder.page.influential_traits_nodata =''+ '<tr class="influential_traits_nodata">'+'<td colspan="5">'+APP.templates.getLocalizedMessage('influential_traits_nodata')
+'</td>'+ '</tr>';APP.templates.model_builder.page.influential_traits_not_run =''+ '<tr class="influential_traits_nodata">'+'<td colspan="5">'+APP.templates.getLocalizedMessage('model_has_not_run')
+'</td>'+ '</tr>';APP.templates.model_builder.page.traits_using_model_name =''+ '<div class="table_wrapper">'+ '<table class="table">'+'<thead>'+'<th class="sortable" data-sortby="sid" width="8%">Trait ID</th>'+'<th class="sortable" data-sortby="name" width="25%">Name</th>'+'<th width="42%">Description</th>'+'<th class="sortable" data-sortby="reach" width="10%">Reach</th>'+'<th class="sortable" data-sortby="accuracy" width="15%">Accuracy</th>'+'</thead>'+'<tbody class="traits_using_model_name"></tbody>'+ '</table>'+ '</div>'+ '<@ if (canCreateTrait()) { @>'+ '<button type="button" class="primary">Create New Trait with Model</button>'+ '<@ } @>';APP.templates.model_builder.page.traits_using_model_name_empty_row =''+ '<td colspan="5">No traits found</td>';APP.templates.model_builder.page.traits_using_model_name_row =''+ '<td class="sid"><a href="#" data-sid="<@= sid @>"><@= sid @></a></td>'+ '<td class="name"><a href="#" data-sid="<@= sid @>"><@= name @></a></td>'+ '<td><@= description@></td>'+ '<td><@= displayReach() @></td>'+ '<td><@= displayAccuracy() @></td>';APP.templates.model_builder.page.influential_traits_modal =''+ '<div id="influential_traits_modal">'+'<div class="layout-2-col " style="width:1000px;height:550px;">'+'<div class="panels influential_traits_list">'+'<table class="table bb-table-widget" id="influential_traits_table" width="100%">'+'<thead>'+'<tr>'+'<th class="sortable" data-sortby="rank" width="5%">Rank</th>'+'<th class="sortable" data-sortby="sid" width="10%">Trait ID</th>'+'<th class="sortable" data-sortby="name" width="25%">Name</th>'+'<th width="45%">Description</th>'+'<th class="sortable" data-sortby="uniques30Day" width="15%">Uniques</th>'+'</tr>'+'</thead>'+'<tbody id="influential_traits_table_tbody"></tbody>'+'</table>'+'<div id="influential_traits_pagination" class="pagination"></div>'+'</div>'+'</div>'+ '</div>';APP.templates.model_builder.page.influential_trait_table_row =''+ '<td><@= t.get("rank") @></td>'+ '<td><@= t.get("sid") @></td>'+ '<td><@= t.get("name") @></td>'+ '<td><@= t.get("description") @></td>'+ '<td class="days_30"><@= ADOBE.AM.UTILS.HELPERS.formatNumber(t.get("uniques30Day")) @></td>';APP.templates.model_builder.page.list_page =''+ '<div id="ModelList">'+'<div class="top_toolbar">'+'<ul class="toolbar">'+ '<@ if (can_show_create_button()) {@><li class="new_model"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create New Model</li><@ } @>'+ '<li class="new_trait"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">New Trait with Selected Model</li>'+ '<@ if (can_show_delete_button()) {@><li class="delete_model"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png">Delete</li><@ } @>'+ '</ul>'+'</div>'+'<div class="layout-2-col">'+'<div class="col1 model_storage container">'+'<h4>Model Storage</h4>'+'</div>'+'<div class="col2 container">'+'<div class="models_list"></div>'+'<div id="model_pagination" class="pagination"></div>'+'</div>'+ '</div>'+ '</div>';APP.templates.model_builder.page.list_models_table =''+ '<table class="table" id="models_table">'+'<thead>'+'<tr>'+'<th width="1%" data-sortby="name"><input type="checkbox" /></th>'+'<th width="1%" class="sortable" data-sortby="algoModelId">ID</th>'+'<th width="20%" class="sortable" data-sortby="name">Name</th>'+'<th width="27%" class="sortable" data-sortby="description">Description</th>'+'<th width="10%" class="sortable" data-sortby="algoTypeId">Algorithm</th>'+'<th width="8%" class="sortable" data-sortby="status">Status</th>'+'<th width="12%" class="sortable" data-sortby="lookBackPeriod">Look Back</th>'+'<th width="10%" class="sortable" data-sortby="lastSuccessfulRunTimestamp">Last Successful Run</th>'+'<th width="10%" class="actions">Actions</th>'+'</th>'+'</thead>'+'<tbody></tbody>'+ '</table>';APP.templates.model_builder.page.list_models_table_row =''+ '<td>'+ '<span class="result_checkbox"><@= displayCheckbox() @></span>'+ '</td>'+ '<td><@= algoModelId @></td>'+ '<td><a href="#view/<@= algoModelId @>"><@= name @></a></td>'+ '<td><@= description @></td>'+ '<td><@= displayAlgorithm() @></td>'+ '<td><@= displayStatus(status) @></td>'+ '<td><@= lookBackPeriod @></td>'+ '<td><@= formatTimestamp(lastSuccessfulRunTimestamp) @></td>'+ '<td class="actions">'+ '<@ if (can_show_edit_button()) {@><a href="#edit/<@= algoModelId @>"><img class="edit btn_action" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Edit_Standard.png" alt="Edit" title="Edit" /></a><@ } @>'+'<@ if (can_show_pause_play_buttons()) {@><@= getStatusImage() @><@ } @>'+'<@ if (can_show_clone_button()) {@><a href="#clone/<@= algoModelId @>"><img class="clone btn_action" src="%%IMG_CLONE_STANDARD%%" alt="Clone" title="Clone" /></a><@ } @>'+'<@ if (show_delete_button()) { @><img class="delete btn_action" alt="Delete" title="Delete" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png" /><@ } @>'+ '</td>';APP.templates.algo_trait ={};APP.templates.algo_trait.page ={};APP.templates.algo_trait.page.create_edit_page =''+ '<div class="page_title">Algorithmic Trait</div>'+ '<br style="clear:both" />'+ '<div id="basic_info_accordion"></div>'+ '<div id="configuration_accordion"></div>'+ '<input type="hidden" name="folderId" value="" />'+ '<input type="hidden" name="categoryId" value="" />'+ '<input type="hidden" name="algoModelId" value="" />'+ '<div class="action_btns">'+'<button type="button" class="save primary">Save</button>'+'<button type="button" class="cancel">Cancel</button>'+ '</div>';APP.templates.algo_trait.page.basic_info_accordion =''+ '<div id="basic_inputs"></div>'+ '<div class="layout_helper">'+ '<div class="layout_helper_sub">'+ '<div id="categories"></div>'+ '</div>'+ '<div class="layout_helper_sub">'+ '<div id="traits_storage"></div>'+ '</div>'+ '</div>';APP.templates.algo_trait.page.configuration_accordion =''+ '<div class="section select_model"></div>'+ '<div id="reach_accuracy_group">'+ '<div class="adjust_reach_accuracy section"></div>'+ '<div class="reach_accuracy section"></div>'+ '</div>';APP.templates.algo_trait.page.basic_inputs =''+ '<div class="input_row"><label for="name">Name:</label><input type="text" name="name" value="<@ try { @><@= name @><@ } catch(err) {} @>" /></div>'+ '<div class="input_row"><label for="description">Description:</label><input type="text" name="description" value="<@ try { @><@= description @><@ } catch(err) {} @>" /></div>'+ '<div class="input_row"><label for="datasource">Data Source:</label>'+ '<select name="dataSourceId">'+ '<option value="">Select a Data Source</option>'+ '<@ _.each(dataSources, function(dataSrc) { @>'+ '<option value="<@= dataSrc.dataSourceId @>" <@ try { if (dataSrc.dataSourceId == dataSourceId) { @>selected="selected"<@ }} catch(err) {} @>><@= dataSrc.name @> (DPID: <@= dataSrc.dataSourceId @>)</option>'+ ' <@ }); @>'+ '</select>'+ '</div>'+ '<@ if (!isAlgoTrait()) { @>'+ '<div class="input_row"><label for="pixelType">Event Type:</label>'+ '<select name="type">'+ '<option value="">Select an Event Type</option>'+ '<@ _.each(pixelTypes, function(pxType) { @>'+ '<option value="<@= pxType.pixelType @>" <@ try { if (pxType.pixelType == type) { @>selected="selected"<@ }} catch(err) {} @>><@= pxType.name @></option>'+ '<@ }); @>'+ '</select>'+ '</div>'+ '<@ } @>'+ '<div class="input_row"><label for="integrationCode">Integration Code:</label><input type="text" name="integrationCode" value="<@ try { @><@= integrationCode @><@ } catch(err) {} @>" /></div>'+ '<@ if (!isAlgoTrait()) { @>'+ '<div class="input_row">'+ '<label for="comments">Comments:</label>'+ '<textarea name="comments"><@ try { @><@= comments @><@ } catch(err) {} @></textarea>'+ '</div>'+ '<@ } @>';APP.templates.algo_trait.page.traits_storage =''+ '<h3>Store In:</h3>'+ '<div id="traits_folder_tree"></div>';APP.templates.algo_trait.page.data_category =''+ '<h3>Data Category: <span class="optional">(Optional)</span></h3>'+ '<div id="category_folder_tree"></div>';APP.templates.algo_trait.select_model =''+ '<h3><@= isEditMode() ? "Algorithmic Trait Model: " : "Select a Model for the Algorithmic Trait: " @><@= name @></h3>'+ '<@ if (!isEditMode()) { @>'+ '<button type="button" id="browse_all_models" class="primary"><@= (isCreateMode() && name === "") ? "Browse All Models" : "Update" @></button>'+ '<@ } @>';APP.templates.algo_trait.adjust_reach_accuracy =''+ '<h3>Adjust Reach & Accuracy</h3>'+ '<div id="reach_accuracy_graph" style="height:440px;width:595px"></div>'+ '<div id="reach_accuracy_slider" style="margin-left:64px"></div>';APP.templates.algo_trait.reach_accuracy =''+ '<h3>Reach & Accuracy</h3>'+ '<div class="reach_accuracy_table">'+ '<table class="table">'+ '<thead>'+ '<tr>'+ '<th>Accuracy</th>'+ '<th>Reach</th>'+ '</tr>'+ '</thead>'+ '<tbody class="reach_accuracy_table_body"></tbody>'+ '</table>'+ '</div>';APP.templates.algo_trait.reach_accuracy_row =''+ '<td><@= AccuracyValue @></td>'+ '<td><@= formatNumber(ReachValue) @></td>';APP.templates.algo_trait.view_page_toolbar_buttons =''+ '<ul class="toolbar">'+ '<@ if (data.add) { @><li class="new_algotrait"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create New Trait<ul id="atMenu" class="am-aui-menu"><li class="item_rule_based_trait"><a href="#new/rule" rel="rb">Rules-based</a></li><li><a href="#new/algo">Algorithmic</a></li><li><a href="#new/onboarded">Onboarded</a></li></ul></li><@ } @>'+ '<@ if (data.edit) { @><li class="edit_algotrait"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Edit_Standard.png">Edit</li><@ } @>'+ '<@ if (data.clone) { @><li class="clone_algotrait"><img class="icon" src="%%IMG_CLONE_STANDARD%%">Clone</li><@ } @>'+ '<@ if (data.del) { @><li class="delete_algotrait"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/ClearXGrey_Buttcon.png">Delete</li><@ } @>'+ '</ul>';APP.templates.algo_trait.basic_information =''+ '<h3>Basic Information</h3>';APP.templates.algo_trait.segments_with_trait =''+ '<div>'+ '<table class="table" width="100%">'+ '<thead>'+ '<th width="10%">Segment ID</th>'+ '<th width="40%" class="sortable" data-sortby="name">Name</th>'+ '<th width="50%">Description</th>'+ '</thead>'+ '<tbody class="segments_with_trait"></tbody>'+ '</table>'+ '</div>';APP.templates.trait ={};APP.templates.trait.page ={};APP.templates.trait.page.graph =''+ '<div class="reach_accuracy_view">'+ '<h3>Trait Uniques</h3>'+ '<div id="algo_trait_graph_container"></div>'+ '</div>';APP.templates.trait.views ={};APP.templates.trait.views.basic_info =''+ '<dt>Trait ID:</dt>'+ '<dd><@= d.sid @></dd>'+ '<dt>Description:</dt>'+ '<dd><@= d.description @></dd>'+ '<dt>Data Source:</dt>'+ '<dd><@= d._datasource @></dd>'+ '<@ if (!d.isAlgoTrait()) { @>'+ '<dt>Event Type:</dt>'+ '<dd><@ if (d._type) { @><@= d._type @><@ } @></dd>'+ '<@ } @>'+ '<dt>Integration Code:</dt>'+ '<dd><@= d._integrationCode @></dd>'+ '<dt>Stored In:</dt>'+ '<dd><@= d._folder @> </dd>'+ '<dt>Data Category:</dt>'+ '<dd><@= d._category @></dd>'+ '<@ if (!d.isAlgoTrait()) { @>'+ '<dt>Comments:</dt>'+ '<dd><@= d._comments @></dd>'+ '<@ } @>';APP.templates.trait_builder ={};APP.templates.trait_builder.page ={};APP.templates.trait_builder.page.list_page =''+ '<div id="TraitList">'+'<div class="top_toolbar">'+'</div>'+'<div class="layout-2-col">'+'<div class="col1">'+ '<div class="sidebar trait_sidebar container">'+ '<div class="trait_search">'+ '</div>'+ '<div class="trait_storage">'+ '<h4>Trait Storage</h4>'+ '</div>'+ '</div>'+'</div>'+'<div class="col2 container">'+'<div class="traits_list"></div>'+'<div id="trait_pagination" class="pagination"></div>'+'</div>'+ '</div>'+ '</div>';APP.templates.trait_builder.list_page_toolbar_buttons =''+ '<ul class="toolbar">'+ '<@ if (data.add) { @><li class="new_algotrait"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create New Trait<ul id="atMenu" class="am-aui-menu"><li class="item_rule_based_trait"><a href="#new/rule" rel="rb">Rules-based</a></li><li><a href="#new/algo">Algorithmic</a></li><li><a href="#new/onboarded">Onboarded</a></li></ul></li><@ } @>'+ '<@ if (data.create_model) { @><li class="createModelWithTrait"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create Model with Selected</li><@ } @>'+ '<@ if (data.can_show_segment) { @><li class="createSegmentWithTraits"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Add_Standard.png">Create Segment with Selected</li><@ } @>'+ '<@ if (data.can_show_delete) { @><li class="deleteSelected"><img class="icon" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/AlertDeactivate_Standard.png">Delete Selected</li><@ } @>'+ '</ul>';APP.templates.trait_builder.page.create_edit_page =''+ '<div class="page_title"><@= type @> Trait</div>'+ '<br style="clear:both" />'+ '<div id="accordion_basicinfo"></div>'+ '<div id="accordion_second"></div>'+ '<@ if (type == "Rule-based" || type == "Onboarded") { @>'+ '<div id="accordion_traitexp">'+ '<div id="rulesDiv"></div>'+ '<div id="testExp"></div>'+ '</div>'+ '<@ } @>'+ '<input type="hidden" name="folderId" value="" />'+ '<input type="hidden" name="categoryId" value="" />'+ '<input type="hidden" name="algoModelId" value="" />'+ '<input type="hidden" name="accuracy" value="" />'+ '<div class="action_btns">'+'<button type="button" class="save primary">Save</button>'+'<button type="button" class="cancel">Cancel</button>'+ '</div>';APP.templates.trait_builder.page.create_page ={};APP.templates.trait_builder.page.create_page.advanced_options =''+ 'Expire after: <input id="ttl" value="<@ try { @><@= ttl @><@ } catch(err) {@>0<@} @>" name="ttl" type="text" size="3" /> days.';APP.templates.trait_builder.page.create_page.exp_panel_content =''+ '<div id="codeView" class="tabContent" style="">'+ '<textarea name="traitRule" id="traitRule" rows="10" cols="141"><@ try {@><@=traitRule@><@} catch(__err__){}@></textarea>'+ '<div class="button_wrap">'+ '<button type="button" id="validateBtn" class="primary">Validate Expression</button>'+ '<button type="button" id="resetExp" class="secondary">Reset and Return to Expression Builder</button>'+ '</div>'+ '</div>';APP.templates.trait_builder.page.create_page.test_section =''+ '<label for="testUrl">Test Event URL</label>'+ '<input id="testUrl" type="text" name="testUrl">'+ '<label for="testHeader">Test HTTP Header</label>'+ '<textarea id="testHeader" cols="50" rows="5" name="testHeader"></textarea>'+ '<div class="button_wrap"><button type="button" class="primary" id="testUrlBtn">Test</button></div>';APP.templates.trait_builder.page.view_page ={};APP.templates.trait_builder.page.view_page.graph_wrapper =''+ '<h3>Trait Graph</h3>'+ '<div class="graph_container"></div>';}(_,APP));if (typeof ADOBE =="undefined") {var ADOBE ={};}
if (typeof ADOBE.AM =="undefined") {ADOBE.AM ={};}
ADOBE.AM.Region ={};ADOBE.AM.Region.Models ={};ADOBE.AM.Region.Models.Region =(function (adobe,backbone) {if (arguments.length ===0) {adobe =ADOBE;backbone =Backbone;}
    return backbone.Model.extend({url:function () {return adobe.AM.API.REGION.regions.url(this.get("id"));},getCode:function () {return this.get("code");}});}
());ADOBE.AM.Region.Collections ={};ADOBE.AM.Region.Collections.Regions =(function (backbone,Region,adobe) {if (arguments.length ===0) {backbone =Backbone;Region =ADOBE.AM.Region.Models.Region;adobe =ADOBE;}
    return backbone.Collection.extend({model:Region,url:function () {return adobe.AM.API.REGION.regions.url();},findByRegionId:function (id) {var _id =parseInt(id,10);return this.findWhere({regionId:_id});}});}
());ADOBE.AM.Limits ={};ADOBE.AM.Limits.Models ={};ADOBE.AM.Limits.Models.Limits =(function (backbone,adobe,globals) {var pid,api;if (arguments.length ==0) {backbone =Backbone;api =ADOBE.AM.API;} else {pid =globals.pid;api =adobe.AM.API;}
    var LimitsModel =Backbone.Model.extend({isLoaded:function () {return !!Object.keys(this.attributes).length;}});return LimitsModel;}
());ADOBE.AM.Group ={};ADOBE.AM.Group.Models ={};ADOBE.AM.Group.Models.Group =(function (adobe,backbone) {if (arguments.length ===0) {adobe =ADOBE;backbone =Backbone;}
    return backbone.Model.extend({defaults:{name:"",description:"",wildcardPermissions:[],users:[]},url:function () {return adobe.AM.API.GROUPS.group.url(this.get("id"));},getClonableAttributes:function () {var attrs ={};_.each(this.defaults,function (val,key) {if (key ==="name") {attrs[key] ="";} else {if (key ==="users") {var _users =this.get(key);attrs[key] =_users;} else {attrs[key] =this.get(key);}
    }
    },this);return attrs;},validate:function (attrs) {if ($.trim(attrs.name) ==""||attrs.name ==null) {return "Name cannot be empty.";}
    }},{activeGroup:null});}
());ADOBE.AM.Group.Collections ={};ADOBE.AM.Group.Collections.Groups =(function (backbone,Group,adobe) {if (arguments.length ===0) {backbone =Backbone;Group =ADOBE.AM.Group.Models.Group;adobe =ADOBE;}
    return backbone.Collection.extend({model:Group,query_string_args:{},addQueryStringArgs:function (qs) {_.extend(this.query_string_args,qs);},url:function () {return adobe.AM.API.GROUPS.group.url();},findById:function (id) {var _id =parseInt(id,10);return this.findWhere({id:_id});},sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.query_string_args);options.data =data;options.url =this.url();return backbone.sync(method,model,options);},comparator:function (model) {return model.get("name").toLowerCase();}});}
());ADOBE.AM.User ={};ADOBE.AM.User.Models ={};ADOBE.AM.User.Models.User =(function (adobe,backbone) {if (arguments.length ===0) {backbone =Backbone;adobe =ADOBE;}
    return backbone.Model.extend({defaults:{phoneNumber:"",firstName:"",lastName:"",email:"",username:"",status:"INACTIVE",groups:[],title:"",admin:false},groupAttributeName:"groups",adminAttributeName:"admin",idAttribute:"uid",getPasswordUrl:function () {return adobe.AM.API.USERS.user.url() + this.get("uid") + "/reset-password";},getPasswordUpdateUrl:function () {return adobe.AM.API.USERS.user.url() + "self/update-password";},getSelfUpdateUrl:function () {return adobe.AM.API.USERS.user.url() + "self/update";},isStatusActive:function () {return this.get("status") ===this.constructor.statuses.ACTIVE;},getClonableAttritbues:function () {var attrs ={};_.each(this.defaults,function (val,key) {if (key ==="username") {attrs[key] ="";} else {if (key ==="groups") {var _groups =this.get(key);attrs[key] =_groups;} else {attrs[key] =this.get(key);}
    }
    },this);return attrs;},changePassword:function () {return $.ajax({url:this.getPasswordUrl(),type:"POST",dataType:"json",contentType:"application/json",data:JSON.stringify(this.uid)});},updatePassword:function (args) {return $.ajax({url:this.getPasswordUpdateUrl(),type:"POST",dataType:"json",contentType:"application/json",data:JSON.stringify(args)});},updateSelf:function (props) {var modelAttributes =this.attributes;if (_.isArray(props)) {modelAttributes ={};_.each(this.attributes,function (val,key) {if (props.indexOf(key) >=0) {modelAttributes[key] =val;}
    });}
        return $.ajax({url:this.getSelfUpdateUrl(),type:"PUT",dataType:"json",contentType:"application/json",data:JSON.stringify(modelAttributes)});},urlRoot:adobe.AM.API.USERS.user.url()},{statuses:{ACTIVE:"ACTIVE",INACTIVE:"INACTIVE",LOCKED:"LOCKED"}});}
());ADOBE.AM.User.Collections ={};ADOBE.AM.User.Collections.Users =(function (backbone,User,adobe) {if (arguments.length ===0) {backbone =Backbone;User =ADOBE.AM.User.Models.User;adobe =ADOBE;}
    return backbone.Collection.extend({model:User,query_string_args:{},addQueryStringArgs:function (qs) {_.extend(this.query_string_args,qs);},url:function () {return adobe.AM.API.USERS.user.url();},findByUid:function (uid) {var _uid =parseInt(uid,10);return this.findWhere({uid:_uid});},sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.query_string_args);options.data =data;options.url =this.url();return backbone.sync(method,model,options);},comparator:function (model) {return model.get("lastName").toLowerCase();}});}
());ADOBE.AM.Permission ={};ADOBE.AM.Permission.Models ={};ADOBE.AM.Permission.Models.Permission =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Model.extend({valid_permissions:[],initialize:function (args) {var name =null;if (!args) {throw new Error("name is required");}
        if (!args.name &&this.name ===null) {throw new Error("name is required");}
        name =args.name ||this.name;if (name.match(/Permission$/) === null) {
            throw new Error("name must end with Permission");}
        if (args.permissions ===void 0 ||args.permissions !==void 0 &&!(args.permissions instanceof Array)) {throw new Error("permissions are required");}
    },hasPermission:function (perms) {if (perms instanceof Array) {return !_.difference(perms,this.getPermissions()).length;}
        if (typeof perms !="string") {throw new Error("Argument must be either a String or an Array");}
        return _.indexOf(this.getPermissions(),perms) > -1;},getPermissions:function () {return this.get("permissions");},getName:function () {if (this.get("name") !==void 0) {return this.get("name");}
        return this.name;}});}
());ADOBE.AM.DataSource ={};ADOBE.AM.DataSource.Collections ={};ADOBE.AM.DataSource.Collections.AvailableIdTypes =(function (backbone,adobe) {var api;if (arguments.length ==0) {api =ADOBE.AM.API;backbone =Backbone;} else {api =adobe.AM.API;}
    return backbone.Collection.extend({parse:function (response) {if (!Array.isArray(response)) {throw new Error("Response not valid!");}
        return response.map(function (type) {return {type:type};});},isIdTypeCrossDevice:function (type) {return type ==="CROSS_DEVICE";},url:function () {return api.DATASOURCES.idTypes.url();},getValues:function () {return this.pluck("type");}});}
());ADOBE.AM.DataSource.Collections.MarketingCloudVisitorIDs =(function (backbone,adobe) {var api;if (arguments.length ==0) {api =ADOBE.AM.API;backbone =Backbone;} else {api =adobe.AM.API;}
    return backbone.Collection.extend({parse:function (response) {if (!Array.isArray(response)) {throw new Error("Response not valid!");}
        return response.map(function (id) {return {id:id};});},getValues:function () {return this.pluck("id");},url:function () {return api.DATASOURCES.marketingCloudVisitorIdVersions.url();}});}
());ADOBE.AM.DataSource.Models ={};ADOBE.AM.DataSource.Models.DataSourcePermission =(function (permission) {if (permission ==undefined) {permission =ADOBE.AM.Permission.Models.Permission;}
    return permission.extend({name:"DataSourcePermission"});}
());ADOBE.AM.DataSource.Models.DataSource =(function (_,backbone,adobe,globals,DataSourcePermission,MarketingCloudVisitorIDs,AvailableIdTypes) {"use strict";var pid,api;if (arguments.length ===0) {_ =window._;pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;DataSourcePermission =ADOBE.AM.DataSource.Models.DataSourcePermission;MarketingCloudVisitorIDs =ADOBE.AM.DataSource.Collections.MarketingCloudVisitorIDs;AvailableIdTypes =ADOBE.AM.DataSource.Collections.AvailableIdTypes;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Model.extend({defaults:{name:"",outboundS2S:false,description:"",inboundS2S:false,integrationCode:"",allowDataSharing:false,useAudienceManagerVisitorID:false,uniqueSegmentIntegrationCodes:false,uniqueTraitIntegrationCodes:false,masterDataSourceIdProvider:false,marketingCloudVisitorIdVersion:0,idType:""},set:function (attributes,options) {if (_.isObject(attributes) &&attributes.hasOwnProperty("idType") &&this.isIdTypeCrossDevice(attributes.idType)) {attributes.useAudienceManagerVisitorID =false;} else {if (_.isString(attributes) &&attributes ==="idType"&&this.isIdTypeCrossDevice(options)) {this.attributes.useAudienceManagerVisitorID =false;}
    }
        return backbone.Model.prototype.set.call(this,attributes,options);},initialize:function (args) {this.set({id:this.get("dataSourceId")});this.relational =this.relational ||{};if (args &&args.permissions) {this.setDataSourcePermissions(args.permissions);}
    },idAttribute:"dataSourceId",setDataSourcePermissions:function (perms) {var relational =this.relational ||{};relational.permissions =new DataSourcePermission({permissions:perms});},url:function () {return api.DATASOURCES.dataSources.url(this.get("dataSourceId"));},getDataProviderId:function () {return this.get("dataSourceId") ||this.get("dataSourceId");},parse:function (response) {var perms =response.permissions;if (perms &&_.isArray(perms)) {this.setDataSourcePermissions(perms);}
        return response;},canSetUniqueTraitIntegrationCodes:function () {return this.isNew();},canSetUniqueSegmentIntegrationCodes:function () {return this.isNew();},isFirstParty:function () {return this.get("pid") ===pid;},getIdTypes:function () {return this.constructor.IDTYPES;},isIdTypeCrossDevice:function (type) {return this.getIdTypes().isIdTypeCrossDevice(type);},isAAMIdDisabled:function () {return this.isIdTypeCrossDevice(this.get("idType"));},getMarketingCloudVIDs:function () {return this.constructor.MARKETING_CLOUD_VIDS;},Bootstrap:function () {return this.constructor.Bootstrap();}},{IDTYPES:new AvailableIdTypes(),MARKETING_CLOUD_VIDS:new MarketingCloudVisitorIDs(),Bootstrap:function () {var deferred =$.Deferred();$.when(this.IDTYPES.fetch(),this.MARKETING_CLOUD_VIDS.fetch()).then(deferred.resolve,deferred.reject);return deferred.promise();}});}
());ADOBE.AM.Common ={};ADOBE.AM.Common.Collections ={};ADOBE.AM.Common.Collections.PaginatedItems =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Paginator.requestPager.extend({custom_query_string_params:{},url:"",queryAttribute:"search",pageSizeAttribute:"pageSize",skipAttribute:"page",orderAttribute:"sortBy",customAttribute1:"descending",firstPage:0,page:0,pageSize:50,sortField:"name",descending:true,customParam1:"descending",hook_parse:null,total:null,initialize:function (args) {if (args &&args.hook_parse) {this.hook_parse =args.hook_parse;}
        if (args &&args.custom_query_string_params) {this.custom_query_string_params =args.custom_query_string_params;}
    },parse:function (response) {this.totalPages =Math.ceil(response.total / this.pageSize);this.total =response.total;if (this.hook_parse !=null) {response =this.hook_parse(response);}
        return response.list;},setParams:function (args) {if (typeof args.customParam1 !="undefined") {this.customParam1 =args.customParam1;delete args.customParam1;}
        if (typeof args.query !="undefined") {this.query =args.query;delete args.query;}
        if (typeof args.sortField !="undefined") {this.sortField =args.sortField;delete args.sortField;}
        _.extend(this.custom_query_string_params,args);},resetPagination:function () {this.totalPages =0;this.page =0;this.firstPage =0;this.lastPage =0;this.customParam1 =false;},goTo:function (page) {if (page !==undefined) {this.page =parseInt(page,10);if (this.page > 0) {this.page--;}
        this.pager();}
    },pendingRequest:null,sync:function (method,model,options) {return backbone.Paginator.requestPager.prototype.sync.call(this,method,model,options);}});}
());ADOBE.AM.Algorithm ={};ADOBE.AM.Algorithm.Models ={};ADOBE.AM.Algorithm.Models.Algorithm =(function (backbone,adobe,globals) {var pid =null;var algorithm_url;if (arguments.length ==0) {pid =ADOBE.AM.pid;backbone =Backbone;algorithm_url =ADOBE.AM.API.MODELS.algorithms.url;} else {pid =globals.pid;algorithm_url =adobe.AM.API.MODELS.algorithms.url;}
    return backbone.Model.extend({initialize:function (args) {if (args &&args.algoTypeId) {this.set({id:args.algoTypeId});}
    },getName:function () {return this.get("name");},urlRoot:algorithm_url()});}
());ADOBE.AM.Algorithm.Collections ={};ADOBE.AM.Algorithm.Collections.Algorithms =(function (backbone,algorithm,adobe,globals) {var pid,algorithm_url;if (arguments.length ==0) {pid =ADOBE.AM.pid;backbone =Backbone;algorithm =ADOBE.AM.Algorithm.Models.Algorithm;api =ADOBE.AM.API;} else {pid =globals.pid;api =adobe.AM.API;}
    if (typeof backbone ==undefined) {pid =globals.pid;algorithm_url =null;}
    return backbone.Collection.extend({model:algorithm,url:api.MODELS.algorithms.url()});}
());ADOBE.AM.User.Models.UserPermission =(function (permission) {if (permission ==undefined) {permission =ADOBE.AM.Permission.Models.Permission;}
    return permission.extend({name:"UserPermission"});}
());ADOBE.AM.Taxonomy ={};ADOBE.AM.Taxonomy.Models ={};ADOBE.AM.Taxonomy.Models.Category =(function (backbone,adobe,globals) {var pid,api;if (arguments.length ==0) {api =ADOBE.AM.API;pid =ADOBE.AM.pid;backbone =Backbone;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Model.extend({initialize:function () {this.set({id:this.get("categoryId")});},url:function () {return api.TAXONOMY.categories.url(this.get("categoryId"));},getCategoryId:function () {return this.get("categoryId");}});}
());ADOBE.AM.Taxonomy.Collections ={};ADOBE.AM.Taxonomy.Collections.Categories =(function (backbone,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Collection.extend({url:api.TAXONOMY.categories.url()});}
());ADOBE.AM.DataSource.Models.BlankModel =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Model.extend({validate:function (attrs) {var errors =[];if (attrs.name ==null ||attrs.name ==="") {errors.push("Name cannot be empty");}
        this.errors =errors;return this.errors.length ==0 ?"":errors.join("\n");}});}
());ADOBE.AM.DataSource.Collections.DataSources =(function (backbone,DataSource,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;DataSource =ADOBE.AM.DataSource.Models.DataSource;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Collection.extend({model:DataSource,url:function () {return api.DATASOURCES.dataSources.url();},getFirstParty:function (pid) {if (typeof pid =="undefined") {return [];}
        return this.filter(function (ds) {return parseInt(ds.get("pid"),10) ===pid;});}});}
());ADOBE.AM.DataSource.Collections.DataSourcesForModeling =(function (backbone,DataSources,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;DataSources =ADOBE.AM.DataSource.Collections.DataSources;} else {pid =globals.pid;api =adobe.AM.API;}
    return DataSources.extend({url:function () {return api.DATASOURCES.dataSources_modeling.url();}});}
());ADOBE.AM.Destination ={};ADOBE.AM.Destination.Models ={};ADOBE.AM.Destination.Models.DataOrderTraits =(function (backbone,adobe) {var api;if (arguments.length ==0) {api =ADOBE.AM.API;backbone =Backbone;} else {api =adobe.AM.API;}
    return backbone.Model.extend({properties_to_filter:["pid","id"],intialize:function (args) {_.bindAll(this,"populateMapping");this.set({id:this.destinationMappingId});},populateMapping:function (dest) {var mapping =api.DESTINATION.destination.getMapping(dest,this.toJSON());this.set({derivedMapping:mapping});},sync:function (method,model,options) {var data ={};var tmp_options ={};if (method ==="update"||method ==="create") {for (var key in this.attributes) {if (_.indexOf(this.properties_to_filter,key) ==-1) {data[key] =this.attributes[key];}
    }
        tmp_options.data =JSON.stringify(data);if (_.isObject(options.data) &&!_.isEmpty(options.data)) {_.extend(tmp_options.data,options.data);delete options.data;}
        _.extend(tmp_options,options,{dataType:"json",contentType:"application/json"});} else {tmp_options =options;}
        return backbone.sync(method,model,tmp_options);}});}
());ADOBE.AM.Destination.Collections ={};ADOBE.AM.Destination.Collections.DataOrderTraits =(function (backbone,DataOrderTraits) {if (backbone ==undefined) {backbone =Backbone;}
    if (DataOrderTraits ==undefined) {DataOrderTraits =ADOBE.AM.Destination.Models.DataOrderTraits;}
    return backbone.Collection.extend({initialize:function () {_.bindAll(this,"populateMappings");},model:DataOrderTraits,populateMappings:function (destination) {for (var i =0;i < this.length;i++) {var model =this.at(i);model.populateMapping(destination);}
    }});}
());ADOBE.AM.Destination.Collections.Platforms =(function (backbone,adobe) {if (arguments.length ==0) {adobe =ADOBE;backbone =Backbone;}
    return backbone.Collection.extend({url:function () {return adobe.AM.API.DESTINATION.availablePlatforms.url();},parse:function (response) {var sortedResponse =[];if (Array.isArray(response)) {sortedResponse =response.sort(function (a,b) {var lowercaseA =a.toLowerCase();var lowercaseB =b.toLowerCase();if (lowercaseA > lowercaseB) {return 1;} else {if (lowercaseA < lowercaseB) {return -1;}
    }
        return 0;});return sortedResponse.map(function (platform) {var name =platform;var firstLetter =platform.charAt(0);var firstLetterUpperCase =firstLetter.toUpperCase();if (firstLetter ===firstLetterUpperCase) {name =firstLetterUpperCase + platform.slice(1).toLowerCase();}
        return {type:platform,name:name};});}
        throw new Error("Bad data returned from API");}});}
());ADOBE.AM.Destination.Models.Destination =(function (backbone,DataOrderTraits,adobe,Platforms) {if (arguments.length ==0) {adobe =ADOBE;backbone =Backbone;DataOrderTraits =ADOBE.AM.Destination.Collections.DataOrderTraits;Platforms =ADOBE.AM.Destination.Collections.Platforms;}
    return backbone.Model.extend({properties_to_filter:["pid"],initialize:function () {_.bindAll(this,"populateTraits");var ttp =this.get("mappings");if (ttp &&ttp.length > 0) {this.populateTraits(ttp);}
    },populateTraits:function (ttp) {var collection =new DataOrderTraits(ttp);collection.populateMappings(this.toJSON());this.set({DataOrderTraits:collection});},isBidManagerType:function () {var con =this.constructor;return this.get("destinationType") ===con.TYPES.s2s &&con.SPECIAL_TYPES.BID_MANAGER.isBidManager(parseInt(this.get("dataSourceId"),10));},getPlatformName:function (type) {var platformObj =this.constructor.PLATFORMS.where({type:type});return platformObj.length ?platformObj[0].get("name") :"";},getPlatforms:function () {return this.constructor.PLATFORMS;},getDefaultAutoFillMapping:function () {return this.constructor.AUTOFILL_MAPPING.DEFAULT_CODE;},isAutoFillCustomValue:function (type) {type =type ||this.get("mappingAutoFiller");return this.constructor.AUTOFILL_MAPPING.isCustomValue(type);},isAutoFillSegmentId:function (type) {type =type ||this.get("mappingAutoFiller");return this.constructor.AUTOFILL_MAPPING.isSegmentId(type);},isAutoFillIntegrationCode:function (type) {type =type ||this.get("mappingAutoFiller");return this.constructor.AUTOFILL_MAPPING.isIntegrationCode(type);},isAutoFillMappingEnabled:function (type) {type =type ||this.get("mappingAutoFiller");return this.constructor.AUTOFILL_MAPPING.isAutoFillMappingEnabled(type);},getTranslatedAutoFillMappingCodes:function () {return this.constructor.AUTOFILL_MAPPING.TRANSLATED;},sync:function (method,model,options) {var data ={};var tmp_options ={};if (method ==="update"||method ==="create") {for (var key in this.attributes) {if (_.indexOf(this.properties_to_filter,key) ==-1) {data[key] =this.attributes[key];}
    }
        tmp_options.data =JSON.stringify(data);if (_.isObject(options.data) &&!_.isEmpty(options.data)) {_.extend(tmp_options.data,options.data);delete options.data;}
        _.extend(tmp_options,options,{dataType:"json",contentType:"application/json"});} else {tmp_options =options;}
        return backbone.sync(method,model,tmp_options);}},{SPECIAL_TYPES:{BID_MANAGER:{dpid:[771],isBidManager:function (dpid) {return this.dpid.indexOf(parseInt(dpid,10)) >=0;}}},TYPES:{s2s:"S2S"},AUTOFILL_MAPPING:{TRANSLATED:{IC:"Integration Code",SID:"Segment ID",NONE:"None"},CODES:{IC:"IC",NONE:"NONE",SID:"SID"},DEFAULT_CODE:"NONE",isCustomValue:function (type) {return type ===this.CODES.NONE;},isSegmentId:function (type) {return type ===this.CODES.SID;},isIntegrationCode:function (type) {return type ===this.CODES.IC;},isAutoFillMappingEnabled:function (type) {return this.isSegmentId(type) ||this.isIntegrationCode(type);}},PLATFORMS:new Platforms()});}
());ADOBE.AM.Destination.Models.AutocompleteDestination =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Model.extend({initialize:function (args) {this.set({id:this.get("destinationId")});}});}
());ADOBE.AM.Destination.Models.SingleDestination =(function (backbone,adobe) {var api,utils;if (arguments.length ==0) {api =ADOBE.AM.API;backbone =Backbone;utils =ADOBE.AM.UTILS;} else {api =adobe.AM.API;utils =adobe.AM.UTILS;}
    return backbone.Model.extend({properties_to_filter:["pid","id"],initialize:function (args) {},urlRoot:api.DESTINATION.search.url(),validate:utils.MODELS.validators.validateData,sync:function (method,model,options) {var data ={};var tmp_options ={};if (method ==="update"||method ==="create") {for (var key in this.attributes) {if (_.indexOf(this.properties_to_filter,key) ==-1) {data[key] =this.attributes[key];}
    }
        tmp_options.data =JSON.stringify(data);if (_.isObject(options.data) &&!_.isEmpty(options.data)) {_.extend(tmp_options.data,options.data);delete options.data;}
        _.extend(tmp_options,options,{dataType:"json",contentType:"application/json"});} else {tmp_options =options;}
        return backbone.sync(method,model,tmp_options);}});}
());ADOBE.AM.Destination.Collections.Destinations =(function (backbone,Destination,adobe,globals) {var pid,api,utils;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;Destination =ADOBE.AM.Destination.Models.Destination;utils =ADOBE.AM.UTILS;} else {pid =globals.pid;api =adobe.AM.API;utils =adobe.AM.UTILS;}
    return backbone.Collection.extend({model:Destination,url:api.DESTINATION.destination.url(),query_string_args:{},addQueryStringArgs:function (qs) {_.extend(this.query_string_args,qs);},hasSegment:function (sid) {this.addQueryStringArgs({containsSegment:sid});},sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.query_string_args);options.data =data;options.url =this.url;return backbone.sync(method,model,options);}});}
());ADOBE.AM.Destination.Collections.DestinationsAutocomplete =(function (backbone,AutocompleteDestination,adobe,globals) {var pid,api;if (arguments.length ==0) {AutocompleteDestination =ADOBE.AM.Destination.Models.AutocompleteDestination;pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Collection.extend({model:AutocompleteDestination,url:function (qs) {if (typeof qs !="object"||!qs) {qs ={};}
        return api.DESTINATION.destination.url(qs);}});}
());ADOBE.AM.Segment ={};ADOBE.AM.Segment.Models ={};ADOBE.AM.Segment.Models.SegmentPermission =(function (Permission) {if (Permission ==undefined) {Permission =ADOBE.AM.Permission.Models.Permission;}
    return Permission.extend({name:"SegmentPermission"});}
());ADOBE.AM.Segment.Models.Folder =(function (backbone,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;} else {api =adobe.AM.API;pid =globals.pid;}
    return backbone.Model.extend({initialize:function () {this.set({id:this.get("folderId")});},url:function () {return api.FOLDERS.folder.url("segments",this.get("folderId"));}});}
());ADOBE.AM.Segment.Models.Segment =(function (backbone,SegmentFolder,DataSource,Destinations,SegmentPermission,adobe,globals) {var pid,api;if (arguments.length ==0) {backbone =Backbone;SegmentFolder =ADOBE.AM.Segment.Models.Folder;DataSource =ADOBE.AM.DataSource.Models.DataSource;SegmentPermission =ADOBE.AM.Segment.Models.SegmentPermission;Destinations =ADOBE.AM.Destination.Collections.Destinations;api =ADOBE.AM.API;pid =ADOBE.AM.pid;adobe_am =ADOBE.AM;} else {adobe_am =adobe.AM;pid =globals.pid;api =adobe.AM.API;}
    return backbone.Model.extend({valid_API_properties:["dataSourceId","sid","description","name","startTime","segmentRule","folderId","status","integrationCode"],getActiveStatus:function () {return "ACTIVE";},getInactiveStatus:function () {return "INACTIVE";},defaults:{name:null},validate:function (attrs) {var errors =[];if (attrs.name ==null ||attrs.name ==="") {errors.push("Name cannot be empty");}
        var numericFolderId =parseInt(attrs.folderId,10);if (!_.isNumber(numericFolderId) ||!(numericFolderId >=0)) {errors.push("Folder cannot be empty");}
        this.errors =errors;return this.errors.length ==0 ?"":errors.join("\n");},initialize:function (args) {if (args.sid) {this.set({sid:args.sid});}
        this.set({id:this.get("sid")});this.relational =this.relational ||{};this.relational.folder =new SegmentFolder();this.relational.dataSource =new DataSource();this.relational.destinations =new Destinations();if (args &&args.permissions) {this.setSegmentPermissions(args.permissions);}
    },canViewAllTraits:function () {var inaccessible_traits =this.get("hiddenTraits");if (typeof inaccessible_traits =="undefined") {return true;}
        return inaccessible_traits &&inaccessible_traits.length ===0;},canMapAllTraits:function () {var mappable_traits =this.get("mappableTraits"),traits =this.get("traits");if (typeof mappable_traits =="undefined") {return false;}
        return (mappable_traits &&traits) &&(mappable_traits.length ===traits.length);},resetModel:function () {this.clear({silent:true});this.set(this.defaults,{silent:true});},url:function () {return api.SEGMENTS.segment.url(this.get("sid"));},setStatus:function (status) {var that =this;this.save({status:status},{error:function (obj,textStatus,errorThrown) {var alertObj ={title:(status =="ACTIVE"?"Play":"Pause") + " Segment"};that.set("status","ACTIVE");alertObj.errorMsg ="Sorry, an error occured when trying to change status for segment: "+ that.get("name") + ". Please try again.";alertObj.msg =errorThrown;adobe_am.alertBox &&adobe_am.alertBox(alertObj);}});},getFolder:function (callback) {var that =this;this.relational.folder.set({folderId:this.get("folderId")});this.relational.folder.fetch({success:function (model,response) {that.set({folderModel:model});if (typeof callback =="function") {callback();}
    }});},getDataSource:function (getMultiple) {var that =this;if (!getMultiple) {this.relational.dataSource.set({dataSourceId:that.get("dataSourceId")});}
        this.relational.dataSource.fetch({success:function (model,response) {that.set({dataSourceModel:model});}});},getDestinations:function (uncached) {var that =this,dests =this.get("destinationCollection");if (dests instanceof backbone.Collection &&!uncached) {return dests;}
        var $jqxhr =this.relational.destinations.fetch({data:{containsSegment:this.get("sid")}}).done(function (models) {that.set({destinationCollection:that.relational.destinations});}).fail(function () {that.set({destinationCollection:new backbone.Collection()});});return $jqxhr;},getDataSourceModelProp:function (prop) {var data_source_model =this.get("dataSourceModel");if (!data_source_model ||!data_source_model instanceof backbone.Model) {return "";}
        return data_source_model.get(prop);},getFolderModelProp:function (prop) {var folderModel =this.get("folderModel");if (!folderModel ||!(folderModel instanceof backbone.Model)) {return false;}
        return folderModel.get(prop);},sync:function (method,model,options) {var data ={};var tmp_options ={};if (method ==="update"||method ==="create") {for (var key in this.attributes) {if (_.indexOf(this.valid_API_properties,key) >=0) {data[key] =this.attributes[key];}
    }
        tmp_options.data =JSON.stringify(data);if (_.isObject(options.data) &&!_.isEmpty(options.data)) {_.extend(tmp_options.data,options.data);delete options.data;}
        _.extend(tmp_options,options,{dataType:"json",contentType:"application/json"});} else {tmp_options =options;}
        return backbone.sync(method,model,tmp_options);},parse:function (response) {var perms =response.permissions;if (perms &&_.isArray(perms)) {this.setSegmentPermissions(perms);}
        return response;},setSegmentPermissions:function (perms) {var relational =this.relational ||{};relational.permissions =new SegmentPermission({permissions:perms});}},{segmentTraitType:"SEGMENT",isRealizationTimeEmpty:function (realizationTime) {return parseInt(realizationTime,10) ===0;}});}
());ADOBE.AM.Segment.Collections ={};ADOBE.AM.Segment.Collections.PaginatedSegments =(function (PaginatedItems,Segment,adobe) {if (PaginatedItems ==undefined) {PaginatedItems =ADOBE.AM.Common.Collections.PaginatedItems;}
    if (Segment ==undefined) {Segment =ADOBE.AM.Segment.Models.Segment;}
    var api =adobe ==undefined ?ADOBE.AM.API :adobe.AM.API;return PaginatedItems.extend({custom_query_string_params:{},model:Segment,sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.custom_query_string_params);options.data =data;options.url =this.url;if (this.pendingRequest) {if (this.pendingRequest.readyState &&this.pendingRequest.readyState !=4) {this.pendingRequest.abort();}
    }
        this.pendingRequest =PaginatedItems.prototype.sync(method,model,options);return this.pendingRequest;},url:api.SEGMENTS.segment.url()});}
());ADOBE.AM.Segment.Collections.Segments =(function (backbone,adobe,Segment) {var api;if (arguments.length ==0) {backbone =Backbone;api =ADOBE.AM.API;Segment =ADOBE.AM.Segment.Models.Segment;} else {api =adobe.AM.API;}
    return backbone.Collection.extend({query_string_params:{},model:Segment,url:api.SEGMENTS.search.url(),sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.query_string_params);options.data =data;options.url =this.url;return backbone.sync(method,model,options);}});}
());ADOBE.AM.Segment.Views ={};ADOBE.AM.Segment.Views.SegmentsFolderTree =(function (backbone,adobe_am,mediator) {if (arguments.length ==0) {backbone =Backbone;adobe_am =ADOBE.AM;mediator =Mediator;}
    return backbone.View.extend({tagName:"div",className:"segmentsFolderTree",isRendered:false,render:function (args) {this.isRendered =true;$(this.el).addClass("folder_tree");$(this.parentElement).append($(this.el));this.addFolderWidget();this.loadFolders(args);},addFolderWidget:function () {var tree =null,that =this;this.folderTree =new adobe_am.hierarchy_tree();tree =this.folderTree;tree.treeElement =this.el;tree.initially_open =["#0_folder"];tree.initially_select =this.tree_options.initially_select;tree.showCheckboxes =false;tree.folderThemeSrc ="/portal/Segments/themes/default/style.css";tree.folderSrc =this.tree_options.folderSrc;tree.inc3rdParty =this.tree_options.inc3rdParty;tree.foldersOnly =this.tree_options.foldersOnly;tree.formatData =this.tree_options.formatData;this.tree =tree;},loadFolders:function (args) {var folderTree =this.folderTree,loadedTree =this.tree.loadTree(),that =this,args =args ||{},broadcast =args.broadcast ||false;$(folderTree.treeElement).html("");loadedTree.bind("loaded.jstree",function (event,data) {mediator.broadcast("SegmentTreeLoaded",{tree:that.$el});});loadedTree.bind("select_node.jstree",function (event,data) {var folderNode =$(folderTree.treeElement).jstree("get_selected").attr("id");var folderId =parseInt(folderNode,10);mediator.broadcast("SegmentFolderSelectReceived",{folderNode:folderNode,folderId:folderId});event.stopPropagation();});},makeJSTreeId:function (id) {return "#"+ id + "_segment_folder";},selectNode:function (id) {var tree_specific_id =id;if (!isNaN(id)) {tree_specific_id =this.makeJSTreeId(id);}
        this.$el.jstree("select_node",tree_specific_id);},clearFolders:function () {var tree =this.folderTree;$(tree.treeElement).jstree("get_selected").find("a.selectedNode").removeClass("selectedNode");},initialize:function (args) {_.bindAll(this,"render");_.bindAll(this,"addFolderWidget");_.bindAll(this,"loadFolders");_.bindAll(this,"selectNode");this.parentElement =args.parentElement;this.tree_options =args.tree_options;}});}
());ADOBE.AM.Model ={};ADOBE.AM.Model.Models ={};ADOBE.AM.Model.Models.RunStat =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Model.extend({getAccuracy:function () {return this.get("AccuracyValue");},getReach:function () {return this.get("ReachValue");}},{ReachThresholdName:"REACH",AccuracyThresholdName:"ACCURACY"});}
());ADOBE.AM.Model.Models.History =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Model.extend({initialize:function (timestamp) {this.set("timestamp",timestamp);}});}
());ADOBE.AM.Trait ={};ADOBE.AM.Trait.Models ={};ADOBE.AM.Trait.Models.TraitPermission =(function (permission) {if (permission ==undefined) {permission =ADOBE.AM.Permission.Models.Permission;}
    return permission.extend({name:"TraitPermission"});}
());ADOBE.AM.Trait.Models.Type =(function (backbone,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Model.extend({initialize:function (args) {if (args &&args.pixelType) {this.set({id:args.pixelType});}
    },url:function () {return api.TRAITS.type.url(this.get("pixelType"));}});}
());ADOBE.AM.Trait.Models.Folder =(function (backbone,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Model.extend({initialize:function (args) {if (args &&args.folderId) {this.set({id:args.folderId});}
    },url:function () {return api.TRAITS.folders.url(this.get("folderId"));},getFolderId:function () {return this.get("folderId");}});}
());ADOBE.AM.Trait.Models.Trait =(function (backbone,TraitFolder,TraitType,DataSource,TaxonomyCategory,adobe,globals,TraitPermission) {var pid,algorithm_url,api,utils;if (arguments.length ==0) {pid =ADOBE.AM.pid;backbone =Backbone;TraitFolder =ADOBE.AM.Trait.Models.Folder;TraitType =ADOBE.AM.Trait.Models.Type;DataSource =ADOBE.AM.DataSource.Models.DataSource;TaxonomyCategory =ADOBE.AM.Taxonomy.Models.Category;utils =ADOBE.AM.UTILS;api =ADOBE.AM.API;TraitPermission =ADOBE.AM.Trait.Models.TraitPermission;} else {pid =globals.pid;api =adobe.AM.API;utils =adobe.AM.UTILS;}
    return backbone.Model.extend({idAttribute:"sid",relational:{},query_string_params:{},valid_API_properties:["name","description","dataSourceId","algoModelId","integrationCode","comments","type","folderId","categoryId","traitRule","ttl","traitType","thresholdType","accuracy"],getValidProperties:function () {var trait_type =this.get("traitType");if (trait_type ==this.constructor.RuleBasedTraitType ||trait_type ==this.constructor.OnBoardedTraitType) {return _.without(this.valid_API_properties,"algoModelId","accuracy","thresholdType");}
        if (trait_type ==this.constructor.AlgoTraitType) {return _.without(this.valid_API_properties,"traitRule","comments","type");}
        return this.valid_API_properties;},initialize:function (args) {if (args &&args.sid) {this.set({id:args.sid});}
        this.relational ={};this.relational.folder =new TraitFolder();this.relational.type =new TraitType();this.relational.dataSource =new DataSource();this.relational.category =new TaxonomyCategory();if (args &&args.permissions) {this.setTraitPermissions(args.permissions);}
        if (args &&args.query_string_params) {this.setParams(args.query_string_params);}
    },isDPMTrait:function () {return utils.HELPERS.isDPMTrait(this.get("traitType"));},isAlgoTrait:function () {return utils.HELPERS.isAlgoTrait(this.get("traitType"));},isRuleBasedTrait:function () {return this.constructor.RuleBasedTraitType ==this.get("traitType");},isOnboardedTrait:function () {return this.constructor.OnBoardedTraitType ==this.get("traitType");},isDeletable:function () {return this.get("traitType") ==this.constructor.RuleBasedTraitType ||this.get("traitType") ==this.constructor.AlgoTraitType ||this.get("traitType") ==this.constructor.OnBoardedTraitType;},isEditable:function () {return this.get("traitType") ==this.constructor.RuleBasedTraitType ||this.get("traitType") ==this.constructor.AlgoTraitType ||this.get("traitType") ==this.constructor.OnBoardedTraitType;},isClonable:function () {return this.get("traitType") ==this.constructor.RuleBasedTraitType ||this.get("traitType") ==this.constructor.AlgoTraitType;},getFolder:function () {var that =this;this.relational.folder.set({folderId:this.get("folderId")});return this.relational.folder.fetch({success:function (model,response) {that.set({folderModel:model});}});},getFolder2:function () {return this.relational.folder;},folderExists:function () {return !!this.relational.folder.getFolderId();},loadFolder:function () {var folderId =this.get("folderId");this.relational.folder.set({folderId:folderId});return this.relational.folder.fetch();},getCategory:function () {var that =this;this.relational.category.set({categoryId:this.get("categoryId")});return this.relational.category.fetch({success:function (model,response) {that.set({categoryModel:model});}});},getCategory2:function () {if (this.relational.category.get("categoryId")) {return this.relational.category;}
        return false;},loadCategory:function () {var categoryId =this.get("categoryId");this.relational.category.set({categoryId:categoryId});return this.relational.category.fetch();},categoryExists:function () {return !!this.relational.category.getCategoryId();},getDataSource:function (getMultiple) {var that =this;if (!getMultiple) {var dpid =that.get("dataSourceId");this.relational.dataSource.set({dataSourceId:dpid});}
        return this.relational.dataSource.fetch({success:function (model,response) {that.set({dataSourceModel:model});}});},loadDataSource:function () {var dataSourceId =this.get("dataSourceId");this.relational.dataSource.set({dataSourceId:dataSourceId});return this.relational.dataSource.fetch();},getDataSource2:function () {return this.relational.dataSource;},dataSourceExists:function () {return !!this.relational.dataSource.getDataProviderId();},getType:function (getMultiple) {var that =this;if (!getMultiple) {this.relational.type.set({pixelType:that.get("type")});}
        return this.relational.type.fetch({success:function (model) {that.set({typeModel:model});}});},getType2:function () {return this.relational.type;},setTraitPermissions:function (perms) {this.relational.permissions =new TraitPermission({permissions:perms});},setReach:function (value) {this.model.set("thresholdType","REACH");this.model.set("accuracy",value);},setAccuracy:function (value) {this.model.set("thresholdType","ACCURACY");this.model.set("accuracy",value);},setParams:function (obj) {_.extend(this.query_string_params,obj);},url:function () {var qsp ="";for (var key in this.query_string_params) {if (this.query_string_params.hasOwnProperty((key))) {qsp +=key + "="+ this.query_string_params[key] + "&";}
    }
        if (qsp !=="") {qsp ="?"+ qsp.replace(/\&$/, "");
        }
        return api.TRAITS.trait.url(this.get("sid")) + qsp;},sync:function (method,model,options) {var data ={};var tmp_options ={};if (method ==="update"||method ==="create") {for (var key in this.attributes) {if (_.indexOf(this.valid_API_properties,key) >=0) {data[key] =this.attributes[key];}
    }
        tmp_options.data =JSON.stringify(data);if (_.isObject(options.data) &&!_.isEmpty(options.data)) {_.extend(tmp_options.data,options.data);delete options.data;}
        _.extend(tmp_options,options,{dataType:"json",contentType:"application/json"});} else {tmp_options =options;}
        return backbone.sync(method,model,tmp_options);},parse:function (response) {var perms =response.permissions;if (perms &&_.isArray(perms)) {this.setTraitPermissions(perms);}
        return response;},validate:utils.MODELS.validators.validateData},{AlgoTraitType:"ALGO_TRAIT",RuleBasedTraitType:"RULE_BASED_TRAIT",OnBoardedTraitType:"ON_BOARDED_TRAIT",getTraitTypeName:function (trait_type) {switch (trait_type) {case "RULE_BASED_TRAIT":return "Rule-based";case "ON_BOARDED_TRAIT":return "Onboarded";case "ALGO_TRAIT":return "Algorithmic";default:return "Unknown";}
    },AlgoModelClass:null});}
());ADOBE.AM.Trait.Collections ={};ADOBE.AM.Trait.Collections.PaginatedTraits =(function (backbone,Trait,PaginatedItems,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;Trait =ADOBE.AM.Trait.Models.Trait;PaginatedItems =ADOBE.AM.Common.Collections.PaginatedItems;} else {pid =globals.pid;api =adobe.AM.API;}
    return PaginatedItems.extend({custom_query_string_params:{},pendingRequest:{},model:Trait,sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.custom_query_string_params);options.data =data;options.url =this.url;if (this.pendingRequest) {if (this.pendingRequest.readyState &&this.pendingRequest.readyState !=4) {this.pendingRequest.abort();}
    }
        this.pendingRequest =PaginatedItems.prototype.sync(method,model,options);return this.pendingRequest;},url:api.TRAITS.trait2.url()});}
());ADOBE.AM.Model.Models.ModelPermission =(function (permission) {if (permission ==undefined) {permission =ADOBE.AM.Permission.Models.Permission;}
    return permission.extend({name:"ModelPermission"});}
());ADOBE.AM.Model.Collections ={};ADOBE.AM.Model.Collections.ProcessingHistory =(function (backbone,History,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;backbone =Backbone;api =ADOBE.AM.API;History =ADOBE.AM.Model.Models.History;} else {api =adobe.AM.API;pid =globals.pid;}
    return backbone.Collection.extend({model:History,makeUrl:function (algoModelId) {this.url =api.MODELS.processing_history(algoModelId);}});}
());ADOBE.AM.Model.Collections.RunStats =(function (backbone,RunStat,globals,adobe) {var pid,api;if (arguments.length ==0) {RunStat =ADOBE.AM.Model.Models.RunStat;api =ADOBE.AM.API;pid =ADOBE.AM.pid;backbone =Backbone;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Collection.extend({model:RunStat,makeUrl:function (model_id) {this.url =api.MODELS.run_stats.url(model_id);},getMinAccuracy:function () {var value =this.at(0);if (value) {return value.getAccuracy();}
        throw new Error("No model run statistics");},parse:function (response) {var values ={},result =[],adjusted_i =0,that =this,obj ={},max_accuracy =1,expected_interval =0.05;function adjustAccuracy(a) {return parseFloat(a).toFixed(2);}
        if (response &&response instanceof Array &&response.length) {_.each(response,function (arr) {values[arr.AccuracyValue.toFixed(2)] =arr.ReachValue;});if (response &&response instanceof Array &&response.length) {_.each(response,function (arr) {if (arr.ReachValue <=that.constructor.MAX_REACH_AUDIENCE_SIZE) {var adjusted_acc =parseFloat(arr.AccuracyValue).toFixed(2);result.push({AccuracyValue:adjusted_acc,ReachValue:arr.ReachValue});}
        });}
        }
        return result;},getReachFromAccuracy:function (acc) {var reach =null,results =this.where({AccuracyValue:acc});if (results.length) {reach =results[0].getReach();}
        return reach;},getEstimatedAccuracy:function (reach) {var acc_interval =5,max_reach_index =-1,min_reach_index =-1;this.each(function (m,i) {if (parseInt(m.get("ReachValue"),10) > reach) {max_reach_index =i;}
    });min_reach_index =max_reach_index + 1;if (max_reach_index ==-1) {return 0;} else {if (max_reach_index ==(this.length - 1)) {return 1;} else {var model_max_reach =this.at(max_reach_index);var model_min_reach =this.at(min_reach_index);var max_reach =model_max_reach.get("ReachValue");var min_reach =model_min_reach.get("ReachValue");var reach_inverval =parseInt((max_reach - min_reach) / acc_interval,10);var estimated_acc =model_max_reach.get("AccuracyValue");var loop_reach =parseInt(max_reach - reach_inverval,10);while (loop_reach > reach) {estimated_acc =parseFloat(estimated_acc) + 0.01;loop_reach =parseInt(loop_reach - reach_inverval,10);}
        return parseFloat(estimated_acc).toFixed(2);}
    }
    }},{MAX_REACH_AUDIENCE_SIZE:null});}
());ADOBE.AM.Model.Models.AlgoModel =(function (backbone,ModelPermission,DataSource,Algorithm,RunStats,PaginatedTraits,Trait,ProcessingHistory,Segment,adobe,globals) {var pid,api,utils;if (arguments.length ==0) {backbone =Backbone;DataSource =ADOBE.AM.DataSource.Models.DataSource;Algorithm =ADOBE.AM.Algorithm.Models.Algorithm;RunStats =ADOBE.AM.Model.Collections.RunStats;PaginatedTraits =ADOBE.AM.Trait.Collections.PaginatedTraits;Trait =ADOBE.AM.Trait.Models.Trait;ProcessingHistory =ADOBE.AM.Model.Collections.ProcessingHistory;Segment =ADOBE.AM.Segment.Models.Segment;ModelPermission =ADOBE.AM.Model.Models.ModelPermission;api =ADOBE.AM.API;pid =ADOBE.AM.pid;utils =ADOBE.AM.UTILS;} else {pid =globals.pid;api =adobe.AM.API;utils =adobe.AM.UTILS;}
    return backbone.Model.extend({valid_API_properties:{put:["name","description","status","sid","dataSources","algoTypeId","lookBackPeriod"],post:["name","description","dataSources","sid","algoTypeId","lookBackPeriod","status"]},initialize:function (args) {if (args &&args.algoModelId) {this.set({id:args.algoModelId});}
        this.relational ={};this.relational.dataSource =new DataSource();this.relational.algorithm =new Algorithm();this.relational.run_stats =new RunStats();this.relational.baseline =null;var TraitsUsingModelName =PaginatedTraits.extend({sort:function () {backbone.Collection.prototype.sort.apply(this,arguments);}});this.relational.traits_using_model_name =new TraitsUsingModelName({custom_query_string_params:{usesModel:null,page:0,pageSize:10,restrictType:"ALGO_TRAIT"},pendingRequest:{}});var InfluentialTraits =PaginatedTraits;this.relational.influential_traits =new InfluentialTraits({custom_query_string_params:{},pendingRequest:{}});this.relational.processing_history =new ProcessingHistory();if (args &&args.permissions) {this.setModelPermissions(args.permissions);}
    },loadRunStats:function () {this.relational.run_stats.makeUrl(this.get("id"));return this.relational.run_stats.fetch();},loadModelHistory:function () {this.relational.processing_history.makeUrl(this.get("id"));return this.relational.processing_history.fetch();},loadAlgorithm:function (algorithm_id) {var algoTypeId =this.get("algoTypeId");if (algorithm_id !=undefined) {algoTypeId =algorithm_id;}
        this.relational.algorithm.set({id:algoTypeId});return this.relational.algorithm.fetch();},loadTraitsUsingModelName:function () {this.relational.traits_using_model_name.setParams({usesModel:this.get("algoModelId")});return this.relational.traits_using_model_name.fetch();},loadInfluentialTraits:function (args) {this.relational.influential_traits.url =api.MODELS.influential_traits.url(this.get("id"));this.relational.influential_traits.resetPagination();this.relational.influential_traits.setParams(args);return this.relational.influential_traits.pager();},loadBaseline:function (baselineTraitType) {var isTrait =utils.HELPERS.isTrait(baselineTraitType);if (isTrait) {this.relational.baseline =new Trait({sid:this.get("sid")});} else {this.relational.baseline =new Segment({sid:this.get("sid")});}
        return this.relational.baseline.fetch({data:{includeMetrics:true}});},getRunStats:function () {return this.relational.run_stats;},runStatsAreValid:function () {return this.relational.run_stats.length > 1;},getModelHistory:function () {return this.relational.processing_history;},getAlgorithm:function () {return this.relational.algorithm;},getInfluentialTraits:function () {return this.relational.influential_traits;},getTraitsUsingModelName:function () {return this.relational.traits_using_model_name;},getRelationalData:function () {var data ={};_.each(this.relational,function (model,key) {var obj ={};obj[key] =model.toJSON();_.extend(data,obj);});return data;},setStatus:function (status) {return this.save({status:status});},wasLastRunSuccessfulWithData:function () {return !!this.get("lastSuccessfulRunTimestamp") &&this.get("lastRunStatus") ==this.constructor.processing_status.RUN_WITH_DATA;},hasBeenRunSuccessfullyOnce:function () {return !!this.get("lastSuccessfulRunTimestamp");},didLastRunHaveNoData:function () {return this.get("lastRunStatus") ==this.constructor.processing_status.RUN_WITH_NO_DATA;},setModelPermissions:function (perms) {var relational =this.relational ||{};relational.permissions =new ModelPermission({permissions:perms});},urlRoot:api.MODELS.algo_model.url(),methodURL:{"read":function () {var append =!this.isNew() ?this.get("id") + "?returnbaselinetraittype=true&includePermissions=true":"";return this.urlRoot + append;},"create":function () {return this.urlRoot;},"update":function () {return this.urlRoot + this.get("id") + "?includePermissions=true";},"delete":function () {return this.urlRoot + this.get("id");}},parse:function (response) {var perms =response.permissions;if (perms &&_.isArray(perms)) {this.setModelPermissions(perms);}
        return response;},sync:function (method,model,options) {var func =null,data ={},tmp_options ={},url =model.urlRoot;options =options ||{};func =model.methodURL[method.toLowerCase()];if (typeof func =="function") {url =func.call(model);}
        options.url =url;if (method ==="update"||method ==="create") {for (var key in this.attributes) {if (_.indexOf(this.valid_API_properties["put"],key) >=0) {data[key] =this.attributes[key];}
        }
            tmp_options.data =JSON.stringify(data);if (_.isObject(options.data) &&!_.isEmpty(options.data)) {_.extend(tmp_options.data,options.data);delete options.data;}
            _.extend(tmp_options,options,{dataType:"json",contentType:"application/json"});} else {tmp_options =options;}
        return backbone.sync(method,model,tmp_options);},validate:utils.MODELS.validators.validateData},{getActiveStatus:function () {return "ACTIVE";},getInactiveStatus:function () {return "INACTIVE";},getStatusName:function (status) {if (status =="ACTIVE") {return "Active";}
        return "Inactive";},processing_status:{RUN_FAILED:0,RUN_WITH_DATA:1,RUN_WITH_NO_DATA:2}});}
());ADOBE.AM.Model.Collections.Models =(function (backbone,AlgoModel) {if (backbone ==undefined) {backbone =Backbone;}
    if (AlgoModel ==undefined) {AlgoModel =ADOBE.AM.Model.Models.AlgoModel;}
    return backbone.Collection.extend({model:AlgoModel});}
());ADOBE.AM.Model.Collections.PaginatedModels =(function (backbone,PaginatedItems,AlgoModel,adobe,globals) {var pid,api;if (arguments.length ==0) {PaginatedItems =ADOBE.AM.Common.Collections.PaginatedItems;AlgoModel =ADOBE.AM.Model.Models.AlgoModel;api =ADOBE.AM.API;pid =ADOBE.AM.pid;backbone =Backbone;} else {pid =globals.pid;api =adobe.AM.API;}
    return PaginatedItems.extend({model:AlgoModel,pendingRequest:{},custom_query_string_params:{},sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.custom_query_string_params);options.data =data;options.url =this.url;if (this.pendingRequest) {if (this.pendingRequest.readyState &&this.pendingRequest.readyState !=4) {this.pendingRequest.abort();}
    }
        this.pendingRequest =PaginatedItems.prototype.sync(method,model,options);return this.pendingRequest;},url:api.MODELS.algo_model.url(),bulkDelete:function (model_ids) {if (model_ids ==undefined ||!_.isArray(model_ids) ||model_ids.length ==0) {return false;}
        var difference =_.difference(model_ids,this.pluck("id"));if (difference.length) {return false;}
        var bulk_delete_url =api.MODELS.bulk_delete.url();var $jqxhr =$.ajax({dataType:"json",contentType:"application/json",url:bulk_delete_url,type:"POST",data:JSON.stringify(model_ids)});return $jqxhr;}});}
());ADOBE.AM.Widget ={};ADOBE.AM.Widget.Views ={};ADOBE.AM.Widget.Views.DestinationsToolbar =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.View.extend({initialize:function (args) {_.bindAll(this,"render");_.extend(this,args);}});}
());ADOBE.AM.Widget.Views.Table =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.View.extend({events:{"click thead th.sortable":"tableColumnHeaderClick","click thead th.column_checkbox":"tableColumnCheckboxClick"},query_params:{},tableColumnCheckboxClick:function (event) {var $element =$(event.currentTarget),checkbox_enabled =$element.hasClass("enabled") ||false;if (checkbox_enabled) {$element.removeClass("enabled").addClass("disabled");this.collection.each(function (model) {if (model.get("checked")) {model.set({checked:false});}
    });} else {$element.removeClass("disabled").addClass("enabled");this.collection.each(function (model) {if (!model.get("checked")) {model.set({checked:true});}
    });}
    },tableColumnHeaderClick:function (event) {var $element =$(event.currentTarget),comparator_func =function () {},clicked =$element.data("type");if ($element.hasClass("desc")) {this.$table_col_headers.removeClass("desc asc");$element.addClass("asc");comparator_func =function (a,b) {if (a.get(clicked) ==b.get(clicked)) {return 0;} else {if (a.get(clicked) < b.get(clicked)) {return -1;} else {return 1;}
    }
    };} else {this.$table_col_headers.removeClass("desc asc");$element.addClass("desc");comparator_func =function (a,b) {if (a.get(clicked) ==b.get(clicked)) {return 0;} else {if (a.get(clicked) < b.get(clicked)) {return 1;} else {return -1;}
    }
    };}
        this.collection.comparator =comparator_func;this.collection.sort();this.onBeforeSort();},initialize:function (args) {var tags =this.collection ||null;_.bindAll(this,"addOne");_.bindAll(this,"addAll");_.bindAll(this,"remove");_.bindAll(this,"render");_.bindAll(this,"emptyTable");_.extend(this,args);this.$table_col_headers =this.$el.find("th");this.$table_body =this.$el.find("tbody");if (tags) {tags.on("add",this.addOne,this);tags.on("reset",this.addAll,this);tags.on("all",this.render,this);}
    },onBeforeSort:function () {},onAfterSort:function () {},render:function () {},emptyTable:function () {this.$table_body.empty();},addAll:function () {this.emptyTable();if (this.collection.length > 0) {this.collection.each(this.addOne);} else {var colspan =this.$table_col_headers.length;this.$table_body.html("<tr><td colspan=\"" + colspan + "\">"+ "No results returned"+ "</td></tr>");}
        this.onAfterSort();},addOne:function (item) {var view =new this.new_row({model:item});this.$table_body.append(view.render().el);}});}
());ADOBE.AM.Widget.Views.PaginatedTable =(function (Table) {if (Table ==undefined) {Table =ADOBE.AM.Widget.Views.Table;}
    return Table.extend({tableColumnCheckboxClick:function (event) {var that =this,$element =$(event.currentTarget),checkbox_enabled =$element.hasClass("enabled") ||false;if (checkbox_enabled) {$element.removeClass("enabled").addClass("disabled");this.collection.each(function (model) {if (model.get("checked")) {model.set({checked:false});var index_to_remove =$.inArray(model.get("sid"),that.checkedRows);that.checkedRows.splice(index_to_remove,1);if (that.cache) {that.cache.cache.splice(index_to_remove,1);}
    }
    });} else {$element.removeClass("disabled").addClass("enabled");this.collection.each(function (model) {if (!model.get("checked")) {model.set({checked:true});that.checkedRows.push(model.get("sid"));if (that.cache) {that.cache.addTrait(model.toJSON());}
    }
    });}
    },tableColumnHeaderClick:function (event) {var descendingOrder =null,$element =$(event.currentTarget),type =$element.data("type");if ($element.hasClass("desc")) {descendingOrder =true;this.$table_col_headers.removeClass("desc asc");$element.addClass("asc");} else {descendingOrder =false;this.$table_col_headers.removeClass("desc asc");$element.addClass("desc");}
        this.collection.resetPagination();this.collection.setParams(_.extend(this.query_params,{customParam1:descendingOrder,sortField:type}));this.collection.pager();}});}
());ADOBE.AM.Widget.Views.PaginatedTable2 =(function (Table) {if (Table ==undefined) {Table =ADOBE.AM.Widget.Views.Table;}
    return Table.extend({tableColumnCheckboxClick:function (event) {var that =this,$element =$(event.currentTarget),checkbox_enabled =$element.hasClass("enabled") ||false;if (checkbox_enabled) {$element.removeClass("enabled").addClass("disabled");this.collection.each(function (model) {if (model.get("checked")) {model.set({checked:false});var index_to_remove =$.inArray(model.get("sid"),that.checkedRows);that.checkedRows.splice(index_to_remove,1);if (that.cache) {that.cache.cache.splice(index_to_remove,1);}
    }
    });} else {$element.removeClass("disabled").addClass("enabled");this.collection.each(function (model) {if (!model.get("checked")) {model.set({checked:true});that.checkedRows.push(model.get("sid"));if (that.cache) {that.cache.addTrait(model.toJSON());}
    }
    });}
    },tableColumnHeaderClick:function (event) {var descendingOrder =null,$element =$(event.currentTarget),type =$element.data("sortby");if ($element.hasClass("desc")) {descendingOrder =true;this.$table_col_headers.removeClass("desc asc");$element.addClass("asc");} else {descendingOrder =false;this.$table_col_headers.removeClass("desc asc");$element.addClass("desc");}
        this.collection.resetPagination();this.collection.setParams(_.extend(this.query_params,{customParam1:descendingOrder,sortField:type,includePermissions:true}));this.collection.pager();this.onBeforeSort();}});}
());ADOBE.AM.Widget.Views.Toolbar =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.View.extend({events:{"click li":"buttonClick"},buttonClick:function (event) {var $element =$(event.currentTarget),type =$element.data("type");if (typeof this.userActions[type] !=="undefined") {this.userActions[type].call(this,$element);}
    },render:function () {$(this.el).html(this.template());},initialize:function (options) {_.bindAll(this,"render");this.userActions =options.userActions;this.template =options.template;}});}
());ADOBE.AM.Widget.Views.SearchBox =(function (backbone,cookies,mediator,aui,adobe,globals) {var pid,api;if (arguments.length ==0) {api =ADOBE.AM.API;pid =ADOBE.AM.pid;backbone =Backbone;mediator =Mediator;aui =AUI;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.View.extend({initialize:function (args) {_.bindAll(this,"render");_.bindAll(this,"clear");_.bindAll(this,"getSearchButton");_.bindAll(this,"triggerSearch");this.errors =[];this.template =args.template;this.parentElement =args.parentElement;this.parent_identifier =args.parent_identifier;this.searchTermCookieName =args.searchTermCookieName;this.selectedFolderCookieName =args.selectedFolderCookieName;this.query_string_args ={};if (args &&args.beforeSearch) {this.beforeSearch =args.beforeSearch;}
        if (args &&args.query_string_args) {this.query_string_args =args.query_string_args;}
    },events:{"keypress button.AUI_SearchField_Search":"triggerSearch","keyup input[type=text]":"triggerSearchOnEnter"},beforeSearch:function () {},triggerSearchOnEnter:function (e) {if (e.keyCode !=13) {return;}
        this.triggerSearch(e);},clear:function () {this.aui_reference.set("value","");},validateSearchTerm:function (term) {return true;},triggerSearch:function (e) {var that =this,result =null,okButton =null,message =null,event_type =null,search_term =that.aui_reference.get("value") ||"",search_term_cookie_value =$.cookies.get(this.searchTermCookieName);if (e) {event_type =e.type;}
        if (search_term_cookie_value !=="undefined"&&search_term_cookie_value !==null &&$.trim($(".AUI_SearchField input[type=text]").val()) ===""&&event_type !=="keyup"&&event_type !=="click") {this.aui_reference.set("value",search_term_cookie_value);search_term =search_term_cookie_value;} else {if (event_type =="click"||event_type =="keyup") {if ($.trim($(".AUI_SearchField input[type=text]").val()).length) {this.aui_reference.set("value",search_term =$(".AUI_SearchField input[type=text]").val());}
            if ($.trim(search_term).length) {$.cookies.set(this.searchTermCookieName,search_term);}
            $.cookies.del(this.selectedFolderCookieName);if (APP.views.ListPage.SegmentFolderTree.segmentTree) {APP.views.ListPage.SegmentFolderTree.clearFolders();}
        }
        }
        result =this.validateSearchTerm(search_term);if (!result) {okButton =document.createElement("button");okButton.className ="primary";okButton.innerHTML ="OK";message ="<p>"+ that.errors.join("<br />") + "</p>";this.errors =[];var modal =new aui.Dialog({header:"Error",content:message,width:"280px",height:"130px",footer:okButton,center:true}).render();aui.addListener(okButton,"click",function () {modal.hide();},modal);modal.show();return false;}
        mediator.broadcast("ShowLoadingReceived");this.errors =[];this.beforeSearch();this.collection.setParams(_.extend({query:search_term},this.query_string_args));this.collection.resetPagination();this.collection.fetch({success:function (coll,response) {mediator.broadcast("HideLoadingReceived",{loaded:"collection"});if (response.total ===0) {$("#segment_table_tbody").append("<tr><td colspan=\"6\">"+ "No results returned"+ "</td></tr>");}
        },error:function () {mediator.broadcast("HideLoadingReceived");}});mediator.broadcast("SearchRequestReceived",{search:search_term});},getSearchButton:function () {return this.$el.find("button.AUI_SearchField_Search").get(0);},render:function () {var search_button =null,clear_button =null,that =this;$(this.parentElement).append($(this.el).html(this.template()));this.aui_reference =aui.SimpleSearch({parent:this.parent_identifier,width:"151px"}).render();search_button =this.getSearchButton();clear_button =this.$el.find(".AUI_SearchField_Close").get(0);aui.addListener(search_button,"click",this.triggerSearch);aui.addListener(clear_button,"click",function () {$.cookies.del(that.searchTermCookieName);});}});}
());ADOBE.AM.Widget.Views.SearchField =(function (backbone,aui) {if (backbone ==undefined) {backbone =Backbone;}
    if (aui ==undefined) {aui =AUI;}
    return backbone.View.extend({query_string_args:{},errors:[],initialize:function (args) {_.bindAll(this,"render");_.bindAll(this,"clear");_.bindAll(this,"getSearchButton");_.bindAll(this,"triggerSearch");if (args &&args.query_string_args) {this.query_string_args =args.query_string_args;}
        if (args &&args.beforeSearch) {this.beforeSearch =args.beforeSearch;}
        if (args &&args.afterSearch) {this.afterSearch =args.afterSearch;}
        this.render();},events:{"keypress button.AUI_SearchField_Search":"triggerSearch","keyup input[type=text]":"triggerSearchOnEnter"},triggerSearchOnEnter:function (e) {if (e.keyCode !=13) {e.preventDefault();e.stopPropagation();return false;}
        this.triggerSearch(e);},clear:function () {this.aui_reference.set("value","");},beforeSearch:function () {},afterSearch:function () {},triggerSearch:function (e) {var that =this,search_term =that.aui_reference.get("value");this.beforeSearch();this.errors =[];this.collection.setParams(_.extend({query:search_term},this.query_string_args));this.collection.resetPagination();this.collection.fetch().always(this.afterSearch);},getSearchButton:function () {return this.$el.find("button.AUI_SearchField_Search").get(0);},render:function () {var button =null;this.aui_reference =aui.SimpleSearch({parent:this.el,width:"151px"}).render();button =this.getSearchButton();aui.addListener(button,"click",this.triggerSearch);}});}
());ADOBE.AM.Widget.Views.SearchFieldNoPagination =(function (SearchField,mediator) {if (SearchField ==undefined) {SearchField =ADOBE.AM.Widget.Views.SearchField;}
    if (mediator ==undefined) {mediator =Mediator;}
    return SearchField.extend({triggerSearch:function (e,queryString) {var that =this,search_term =that.aui_reference.get("value");mediator.broadcast("ShowLoadingReceived");this.errors =[];if (typeof queryString ==="string"&&queryString.length) {queryString ="&"+ queryString;} else {queryString ="";}
        this.collection.fetch({data:"search="+ search_term + queryString}).always(function () {mediator.broadcast("HideLoadingReceived");});}});}
());ADOBE.AM.Widget.Views.Accordion =(function (backbone,aui) {if (backbone ==undefined) {backbone =Backbone;}
    if (aui ==undefined) {aui =AUI;}
    return backbone.View.extend({renderSubViews:function () {var that =this;_.each(this.sub_views,function (view) {view.render(that.el);});},hasBeenRendered:function () {return this.isRendered;},initialize:function (args) {var panel_args =null;_.bindAll(this,"render");_.bindAll(this,"renderSubViews");_.bindAll(this,"hasBeenRendered");_.bindAll(this,"isVisible");this.isRendered =false;this.sub_views =args.sub_views;this.lazy_load_views =args.lazy_load_views;if (args.help) {this.help =args.help;}
        panel_args ={title:args.title,parent:args.parent};if (args.aui_args) {_.extend(panel_args,args.aui_args);}
        this.panel =new aui.CollapsiblePanel(panel_args);return true;},isVisible:function () {return this.$el.is("visible");},render:function () {var that =this;this.panel.on("change:expanded",function () {});this.panel.render();this.el =this.panel.el("content");this.$el =$(this.el);this.renderSubViews();this.isRendered =true;if (this.help &&!$(this.panel.el("title")).find(".context-help").length) {$(this.panel.el("title")).append($("<span class=\"context-help\" title=\"Help\" data-id=\"" + this.help + "\">&nbsp;</span>"));}
        return this;}});}
());ADOBE.AM.Widget.Views.Tabs =(function (backbone,aui) {if (backbone ==undefined) {backbone =Backbone;}
    if (aui ==undefined) {aui =AUI;}
    return backbone.View.extend({initialize:function (args) {_.extend(this,args);_.bindAll(this,"render");_.bindAll(this,"processTabs");_.bindAll(this,"processEvents");this.isRendered =false;this.events =this.aui_args.events;delete this.aui_args.events;this.processTabs();this.processEvents();},processEvents:function () {var that =this;if (!this.events) {return;}
        _.each(this.events,function (func,key) {that.tabs.on.call(that.tabs,key,func);});},processTabs:function () {this.tabs =new aui.Tabs(this.aui_args);},render:function () {this.tabs.render();}});}
());ADOBE.AM.Widget.Views.Autocomplete =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.View.extend({initialize:function (args) {_.bindAll(this,"render");_.bindAll(this,"attachAutocomplete");_.bindAll(this,"getSelected");_.extend(this,args);if (typeof args.query_string_args =="undefined") {this.query_string_args ={};}
        this.attachAutocomplete();if (args &&args.hook_open) {this.hook_open =args.hook_open;}
        if (args &&args.hook_format_reponse) {this.hook_format_reponse =args.hook_format_response;}
    },hook_open:null,attachAutocomplete:function () {var that =this,onsearch =function () {};if (this.loading_icon) {onsearch =function (event,ui) {that.loading_icon.css("visibility","visible");};}
        $(this.el).autocomplete({minLength:1,search:onsearch,source:function (request,response) {if (that.collection) {that.collection.reset();}
            that.collection.addQueryStringArgs({search:request.term});that.collection.fetch().done(function (data) {if (that.loading_icon) {that.loading_icon.css("visibility","hidden");}
                that.collection.reset(data.list);if (that.hook_format_response) {response($.map(data.list,that.hook_format_response));}
                return data.list;});},select:function (event,ui) {$(that.el).data("item",ui.item);if (that.select_callback) {that.select_callback.apply(this,arguments);}
        },open:function (event,ui) {if (that.hook_open !=null) {that.hook_open.apply(this,[that,event,ui]);}
        }});},getSelected:function () {var selected_item =$(this.el).data("item");if (!selected_item) {return false;}
        var search ={};search[this.getById] =selected_item[this.getById];var backbone_item =this.collection.where(search);return backbone_item[0];}});}
());ADOBE.AM.Widget.Views.PaginatedView =(function (backbone,templates) {if (backbone ==undefined) {backbone =Backbone;}
    if (templates ==undefined) {templates =APP.templates;}
    return backbone.View.extend({events:{"click a.servernext":"nextResultPage","click a.serverprevious":"previousResultPage","change select.serverhowmany":"changeCount","change select.pagination_pages":"gotoPage"},tagName:"aside",template:_.template(templates.server_pagination),initialize:function (args) {_.extend(this,args);this.isRendered =false;this.collection.on("reset",this.render,this);this.collection.on("change",this.render,this);this.$el.appendTo(this.parent_element);},beforeEventClick:function () {},afterRender:function () {},render:function () {var html =this.template(this.collection.info());this.$el.html(html);if (this.isRendered) {this.afterRender();} else {this.isRendered =true;}
    },nextResultPage:function (e) {this.beforeEventClick();e.preventDefault();this.collection.requestNextPage();},previousResultPage:function (e) {this.beforeEventClick();e.preventDefault();this.collection.requestPreviousPage();},gotoPage:function (e) {this.beforeEventClick();e.preventDefault();var page =$(e.target).val();this.collection.goTo(page);},changeCount:function (e) {this.beforeEventClick();e.preventDefault();var per =$(e.target).val();this.collection.howManyPer(per);}});}
());ADOBE.AM.Trait.Models.AlgoTrait =(function (Trait,AlgoModel) {if (arguments.length ==0) {Trait =ADOBE.AM.Trait.Models.Trait;AlgoModel =ADOBE.AM.Model.Models.AlgoModel;}
    return Trait.extend({loadAlgoModel:function () {if (AlgoModel ===null) {throw Error("Trait model must have AlgoModelClass static variable defined");}
        this.relational.model =new AlgoModel({id:this.get("algoModelId")});return this.relational.model.fetch();},getAlgoModel:function () {return this.relational.model;}});}
());ADOBE.AM.Trait.Collections.Types =(function (backbone,TraitType,adobe) {var api;if (arguments.length ==0) {TraitType =ADOBE.AM.Trait.Models.Type;api =ADOBE.AM.API;backbone =Backbone;} else {api =adobe.AM.API;}
    return backbone.Collection.extend({model:TraitType,url:api.TRAITS.type.url()});}
());ADOBE.AM.Trait.Collections.Folders =(function (backbone,TraitFolder,adobe) {var api;if (arguments.length ==0) {TraitFolder =ADOBE.AM.Trait.Models.Folder;api =ADOBE.AM.API;backbone =Backbone;} else {api =adobe.AM.API;}
    return backbone.Collection.extend({model:TraitFolder,url:function () {return api.TRAITS.folders.url();},parse:function (response) {var folderArr =[{folderId:response[0].folderId,path:response[0].path}];var parseSubFolders =function (parentFolder) {if (parentFolder.subFolders.length) {$(parentFolder.subFolders).each(function (idx,subFolder) {folderArr.push({folderId:subFolder.folderId,path:subFolder.path});if (subFolder.subFolders.length) {parseSubFolders(subFolder);}
    });}
    };parseSubFolders(response[0]);return folderArr;}});}
());ADOBE.AM.Trait.Collections.Traits =(function (backbone,Trait,adobe,globals) {var pid,api;if (arguments.length ==0) {Trait =ADOBE.AM.Trait.Models.Trait;api =ADOBE.AM.API;backbone =Backbone;pid =ADOBE.AM.pid;} else {pid =globals.pid;api =adobe.AM.API;}
    return backbone.Collection.extend({model:Trait,query_string_args:{},addQueryStringArgs:function (qs) {_.extend(this.query_string_args,qs);},url:function () {var sids ="";if (this.sids) {sids =this.sids.join(",");}
        return api.TRAITS.trait.url() + sids;},sync:function (method,model,options) {var data =options.data ||{};_.extend(data,this.query_string_args);options.data =data;options.url =this.url();return backbone.sync(method,model,options);}});}
());ADOBE.AM.Behaviors ={};ADOBE.AM.Behaviors.BackbonePaging ={};ADOBE.AM.Behaviors.BackbonePaging =(function (_) {"use strict";return {name:"BackbonePaging",setup:function () {this.totalPages =null;this.total =0;this.search ="";this.lastFetchedPage =0;this.paging_data ={};},resetPagination:function () {_.extend(this.paging_data,{page:0});this.lastFetchedPage =0;this.totalPages =null;},morePages:function () {return this.totalPages ===null ||parseInt(this.paging_data.page,10) < parseInt(this.totalPages,10);},parse:function (response) {this.totalPages =Math.ceil(response.total / response.pageSize);this.lastFetchedPage =response.page;if (typeof this.hook_parse ==="function") {response =this.hook_parse(response);}
    return response.list;},getLastFetchedPage:function () {return this.lastFetchedPage;},setPagingData:function (pd) {this.paging_data =pd;},getPagingData:function () {if (this.search !=="") {return _.extend({search:this.search},this.paging_data);}
    return this.paging_data;},setSearch:function (s) {this.search =s;},getSearch:function () {return this.search;},setSort:function (s) {this.paging_data.sort =s;},getSort:function () {return this.paging_data.sort;},setPage:function (p) {this.paging_data.page =p;},getPage:function () {return this.paging_data.page;},setPageSize:function (ps) {this.paging_data.pageSize =ps;},getPageSize:function () {return this.paging_data.pageSize;},getTotal:function () {return this.total;},setDescending:function (d) {this.paging_data.descending =d;},getDescending:function () {return this.paging_data.descending;},getTotalPages:function () {return this.totalPages;}};}
());ADOBE.AM.Behaviors.BehaviorSupport ={};ADOBE.AM.Behaviors.BehaviorSupport =(function (_) {"use strict";return {decorate:function (obj) {if (typeof obj._behaviors ==="undefined") {obj._behaviors ={};}
    _.extend(obj,{addBehavior:this.addBehavior,hasBehavior:this.hasBehavior});},addBehavior:function (behavior) {if (behavior.name ===undefined) {throw new Error("A behavior must have a name");}
    this._behaviors[behavior.name] =behavior;delete behavior.name;_.extend(this,behavior);behavior.setup.call(this);},hasBehavior:function (name) {return this._behaviors.hasOwnProperty(name);}};}
());ADOBE.AM.Behaviors.InfiniteCollection ={};ADOBE.AM.Behaviors.InfiniteCollection =(function (backbone,_,$,BackbonePaging,BehaviorSupport) {"use strict";return {name:"InfiniteCollection",setup:function () {this.request_queue =[];this.fetching =false;if (!(this instanceof backbone.Collection)) {throw new Error("Context object must be a backbone collection");}
    BehaviorSupport.addBehavior.call(this,BackbonePaging);},refresh:function () {this.reset();this.resetPagination();},isFetching:function () {return this.fetching;},getRequestQueue:function () {return this.request_queue;},refreshFetch:function () {this.fetching =true;this.refresh();this.fetchMore();},fetchMore:function () {var self =this;var BB =backbone.Collection.extend({parse:_.bind(this.parse,self)});var bb =new BB();if (!this.morePages()) {var deferred =$.Deferred();setTimeout(deferred.resolve,0);return deferred;}
    this.request_queue.push(_.clone(this.getPagingData()));this.setPage(this.getPage() + 1);this.fetching =true;return bb.fetch({url:this.url(),data:this.request_queue.shift()}).done(function () {self.fetching =false;if (bb.length) {self.add(bb.toJSON());} else {self.trigger("reset");}
    }).always(function () {self.fetching =false;if (self.request_queue.length) {self.fetchMore();}
    });}};}
());ADOBE.AM.DataSource.Collections.DataSourcesForSegments =(function (backbone,DataSources,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;DataSources =ADOBE.AM.DataSource.Collections.DataSources;} else {pid =globals.pid;api =adobe.AM.API;}
    return DataSources.extend({url:function () {return api.DATASOURCES.dataSources_segments.url();}});}
());ADOBE.AM.DataSource.Collections.DataSourcesForTraits =(function (backbone,DataSources,adobe,globals) {var pid,api;if (arguments.length ==0) {pid =ADOBE.AM.pid;api =ADOBE.AM.API;backbone =Backbone;DataSources =ADOBE.AM.DataSource.Collections.DataSources;} else {pid =globals.pid;api =adobe.AM.API;}
    return DataSources.extend({url:function () {return api.DATASOURCES.dataSources_traits.url();}});}
());ADOBE.AM.Destination.Models.DestinationPermission =(function (permission) {if (permission ==undefined) {permission =ADOBE.AM.Permission.Models.Permission;}
    return permission.extend({name:"DestinationPermission"});}
());ADOBE.AM.Group.Collections.GroupPermissionObjects =(function (adobe,backbone,GroupPermission,Group) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Collection.extend({initialize:function (options) {var activeGroup =new Group().constructor.activeGroup;if (activeGroup) {this.groupId =activeGroup.get("id");}
    },model:GroupPermission,groupId:null,url:function () {return adobe.AM.API.GROUPS.permissions.url(this.groupId);},updateAll:function () {var collection =this,options ={success:function (model) {collection.reset(model);}};return backbone.sync("update",this,options);}});}
());ADOBE.AM.Group.Models.GroupPermissionObject =(function (backbone,adobe) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Model.extend({defaults:{objectId:null,objectType:"",permissions:[]},url:function () {return adobe.AM.API.GROUPS.permissions.url();}});}
());ADOBE.AM.Model.Views ={};ADOBE.AM.Model.Views.ModelsModal =(function (backbone,marionette,PaginatedModels,Algorithms,SearchField,PaginatedTable2,PaginatedView,AlgoModel,ModelPermission,adobe,vent) {if (arguments.length ==0) {return;}
    var gk =new adobe.AM.UTILS.GATEKEEPER();gk.setPermissionClass(ModelPermission);gk.setErrorTypes(adobe.AM.UTILS.ERRORS.TYPES);gk.setSchemes(adobe.AM.PERMS.permission_schemes);var PaginatedModels =new PaginatedModels({hook_parse:function (response) {var filtered_resp =_.filter(response.list,function (model) {var modelPermissions =new ModelPermission({permissions:model.permissions});return gk.checkPermissions([modelPermissions],"can_view_model");});response.list =filtered_resp;return response;}});var add_button =document.createElement("button");var cancel_button =document.createElement("button");var div =document.createElement("div");add_button.className ="primary";add_button.innerHTML ="Add Selected Model to Trait";cancel_button.className ="secondary";cancel_button.innerHTML ="Cancel";AUI.addListener(add_button,"click",function (event) {var selected_id =$("input[name=selected_model]:radio:checked").val();var model =PaginatedModels.get(selected_id);if (model &&!model.wasLastRunSuccessfulWithData()) {vent.trigger("modal:show",{type:"notice",message:adobe.AM.MESSAGES.getMessage("model_run_once").message});return false;}
        if (!selected_id) {vent.trigger("modal:show",{type:"notice",message:"You have not selected a model to add."});return false;}
        var selected_model =PaginatedModels.get(selected_id);vent.trigger("modal:model:selected",selected_model);});AUI.addListener(cancel_button,"click",function () {vent.trigger("modal:models:hide");});div.appendChild(add_button);div.appendChild(cancel_button);var models_modal =new AUI.Dialog({header:"Browse All Models",width:"1026px",height:"780px",footer:div,center:true,zIndex:1003});var rendered =false;var algorithms_collections =new Algorithms({});var showDialog =function () {$("body").addClass("disableMainScroll");if (rendered) {models_modal.render().show();return;}
        algorithms_collections.fetch().always(showModal);};var showModal =function () {models_modal.render().show();models_modal.append("content",APP.templates.browse_models_modal);$(".AUI_CloseButton").click(function () {$("body").removeClass("disableMainScroll");});var SearchBar =new SearchField({el:$(".models_search"),collection:PaginatedModels,query_string_args:{includeMetrics:true,includePermissions:true},beforeSearch:function () {showTableLoading(true);},afterSearch:function (resp) {showTableLoading(false);if (resp.status ==404) {vent.trigger("modal:show",{type:"notice",message:adobe.AM.MESSAGES.getMessage("generic_404").message});vent.trigger("modal:models:hide");return false;}
    }});var ModelsTable =new PaginatedTable2({el:$("#models_table"),query_params:{includeMetrics:true},collection:PaginatedModels,new_row:backbone.View.extend({initialize:function () {_.bindAll(this,"checkbox");this.model.bind("change",this.render,this);},tagName:"tr",events:{"click .result_checkbox":"checkbox"},checkbox:function (event) {},template:APP.templates.model_table_row,templateHelpers:{formatTimestamp:function (ts) {var date ="";if (ts) {try {date =adobe.AM.UTILS.HELPERS.formatDate(ts,function (m,d,y) {return (m[1] ?m :"0"+ m[0]) + "/"+ (d[1] ?d :"0"+ d[0]) + "/"+ y;});}
    catch (__ERR__) {adobe.AM.UTILS.LOGGER.log("ModelsTable:formatTimestamp: "+ __ERR__.message);date ="";}
    }
        return date;},displayAlgorithm:function (algoTypeId) {var model =algorithms_collections.get(algoTypeId);if (model) {return model.getName();}
        return algoTypeId;},displayStatus:function (status) {return AlgoModel.getStatusName(status);}},render:function () {var model_model =this.model;var data ={t:model_model};_.extend(data,this.templateHelpers);this.$el.html(_.template(this.template,data));return this;}}),onBeforeSort:function () {showTableLoading(true);},onAfterSort:function () {showTableLoading(false);},checkedRows:[]});var ModelsPagination =new PaginatedView({parent_element:$(".AUI_Dialog_footer div"),collection:PaginatedModels,beforeEventClick:function () {showTableLoading(true);},afterRender:function () {showTableLoading(false);}});SearchBar.triggerSearch();rendered =true;};var loading =0;var showTableLoading =function (show) {var loading_obj =adobe.AM.LoadingOverlay.config({id:"models_modal_table",parent_element:$(".models_list"),message:"Loading..."});if (show) {if (loading ==0) {loading_obj.show();loading =1;} else {loading +=1;}
    } else {if (loading ==1) {loading_obj.hide();loading =0;} else {if (loading ==0) {return false;}
        loading -=1;}
    }
    };vent.on("modal:models:show",function () {showDialog();});vent.on("modal:models:hide",function () {$("body").removeClass("disableMainScroll");models_modal.hide();});}
());ADOBE.AM.Permission.Collections ={};ADOBE.AM.Permission.Collections.ObjectTypes =(function (backbone,ObjectType) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Collection.extend({model:ObjectType});}
());ADOBE.AM.Permission.Models.ObjectType =(function (backbone) {if (backbone ==undefined) {backbone =Backbone;}
    return backbone.Model.extend({defaults:{type:"",sources:[],wildcards:[],permissions:[]}});}
());ADOBE.AM.Segment.Models.Limits =(function (backbone,adobe,globals,Limits) {var api;if (arguments.length ==0) {backbone =Backbone;api =ADOBE.AM.API;Limits =ADOBE.AM.Limits.Models.Limits;} else {api =adobe.AM.API;}
    var LimitsModel =Limits.extend({url:api.SEGMENTS.limits.url});return LimitsModel;}
());ADOBE.AM.Trait.Views ={};ADOBE.AM.Trait.Views.BasicInfo =(function (backbone,marionette,app,templates,adobe) {if (arguments.length ==0) {return;}
    return backbone.Marionette.ItemView.extend({tagName:"dl",template:_.template(templates.trait.views.basic_info),templateHelpers:{formatTimestamp:function (ts) {var date ="-";if (typeof ts !=undefined) {try {date =adobe.AM.UTILS.HELPERS.formatDate(ts,function (m,d,y) {return (m[1] ?m :"0"+ m[0]) + "/"+ (d[1] ?d :"0"+ d[0]) + "/"+ y;});}
    catch (__ERR__) {adobe.AM.UTILS.LOGGER.log("BasicInfo:templateHelpers:formatTimestamp: "+ __ERR__.message);}
    }
        return date;},isAlgoTrait:function () {return this.traitType ==="ALGO_TRAIT";}},render:function () {var names ={_datasource:"",_folder:"",_category:""},datasource =null,folder =null,category =null,expires =null,type =null,self =this,data ={d:{}};data.d =this.model.toJSON();if (this.model.dataSourceExists()) {names._datasource =this.model.getDataSource2().get("name");}
        if (this.model.folderExists()) {names._folder =this.model.getFolder2().get("name");}
        category =this.model.getCategory2();if (this.model.categoryExists()) {names._category =this.model.getCategory2().get("name");}
        var more_props ={_comments:self.model.get("comments") ||"",_integrationCode:self.model.get("integrationCode") ||"",_expires:self.model.get("ttl") ||""};var combineAndPassData =function () {_.extend(data.d,names,more_props,self.templateHelpers);self.$el.html(self.template(data));};var jqxhr_pxType =this.model.getType();jqxhr_pxType.done(function (type) {names._type =type.name;}).always(combineAndPassData);return true;}});}
());ADOBE.AM.Trait.Views.TraitsFolderTree =(function (backbone,adobe,jstree,vent,mediator) {var eventAdapter =null;if (arguments.length ==0) {backbone =Backbone;adobe_am =ADOBE.AM;mediator =Mediator;eventAdapter =function (event,args) {mediator.broadcast(event,{folderNode:args.folderNode,folderId:args.folderId});};} else {adobe_am =adobe.AM;eventAdapter =function (event,args) {vent.trigger(event,{folderId:args.folderId});};}
    return backbone.View.extend({tagName:"div",className:"trait_storage",isRendered:false,render:function (args) {this.isRendered =true;$(this.el).addClass("folder_tree");$(this.parentElement).append($(this.el));this.addFolderWidget();this.loadFolders(args);},addFolderWidget:function () {var traitsTree =null,that =this;this.traitsFolderTree =new adobe_am.hierarchy_tree();traitsTree =this.traitsFolderTree;traitsTree.treeElement =this.el;traitsTree.initially_open =["#0_folder"];traitsTree.initially_select =this.tree_options.initially_select;traitsTree.showCheckboxes =false;traitsTree.folderThemeSrc ="/portal/Segments/themes/default/style.css";traitsTree.folderSrc =this.tree_options.folderSrc;traitsTree.inc3rdParty =this.tree_options.inc3rdParty;traitsTree.foldersOnly =this.tree_options.foldersOnly;traitsTree.formatData =this.tree_options.formatData;this.traitsTree =traitsTree;},loadFolders:function (args) {var traitsTree =this.traitsFolderTree,loadedTree =this.traitsTree.loadTree(),that =this,args =args ||{},broadcast =args.broadcast ||false;$(traitsTree.treeElement).html("");loadedTree.bind("loaded.jstree",function (event,data) {Mediator.broadcast("TraitsTreeLoaded",{tree:that.$el});});loadedTree.bind("select_node.jstree",function (event,data) {var folderNode =$(traitsTree.treeElement).jstree("get_selected").attr("id");var folderId =parseInt(folderNode,10);eventAdapter("TraitFolderSelectReceived",{folderNode:folderNode,folderId:folderId});event.stopPropagation();});},makeJSTreeId:function (id) {return "#"+ id + "_trait_folder";},selectNode:function (id) {var tree_specific_id =id;if (!isNaN(id)) {tree_specific_id =this.makeJSTreeId(id);}
        this.$el.jstree("select_node",tree_specific_id);},clearFolders:function () {var traitTree =this.traitsFolderTree;$(traitTree.treeElement).jstree("get_selected").find("a.selectedNode").removeClass("selectedNode");},initialize:function (args) {_.bindAll(this,"render");_.bindAll(this,"addFolderWidget");_.bindAll(this,"loadFolders");_.bindAll(this,"selectNode");this.parentElement =args.parentElement;this.tree_options =args.tree_options;}});}
());ADOBE.AM.Utilities ={};ADOBE.AM.Utilities.ViewportHelper ={};ADOBE.AM.Utilities.ViewportHelper =(function () {"use strict";return {isElementInViewport:function (el) {var rect =el.getBoundingClientRect();return (rect.top >=0 &&rect.left >=0 &&rect.bottom <=(window.innerHeight ||document.documentElement.clientHeight) &&rect.right <=(window.innerWidth ||document.documentElement.clientWidth));}};}
());ADOBE.AM.Widget.Views.AccordionSetCui =(function (backbone,marionette) {if (arguments.length ==0) {return false;}
    return backbone.Marionette.CollectionView.extend({tagName:"ul",className:"accordion",appendHtml:function (collectionView,itemView,index) {var self =this;collectionView.$el.append(itemView.el);if (index ==this.collection.length - 1) {setTimeout(self.onRenderComplete,0);}
    },onRenderComplete:function () {var self =this;var accordion =new CUI.Accordion({element:self.el});$("h3",self.el).click(function () {var $content =$(this).next(".content:first");var toggleSelectAllNone =function () {$(this).parent().find(".select-all-none").fadeToggle("fast");};if ($content.height() ==0) {var newHeight =$content.find(".auto-height-container").height() + 20;$content.animate({height:newHeight},400,toggleSelectAllNone);} else {$content.animate({height:0},400,toggleSelectAllNone);}
    });}});}
());ADOBE.AM.Widget.Views.FolderTree =(function (backbone,adobe,adobe_am) {var utils;if (arguments.length ==0) {backbone =Backbone;utils =ADOBE.AM.UTILS;adobe_am =ADOBE.AM;} else {adobe_am =adobe.AM;utils =adobe_am.UTILS;}
    return backbone.View.extend({tree:null,tagName:"div",className:"",folder_api_url:"",$hoveredElement:null,tree_widget:null,tree_options:null,dialogs_parent:"body",dialogs:{rename:{id:"",name_id:"",instance:null,html:{icon:"<span class='edit btnIcon' title='Rename this folder'></span>",makeDialogHTML:function (id,name_id) {return "<div class=\"dialog\" style=\"display:none;\" id=\"" + id + "\" title=\"Rename Folder\">"+ "<ul class=\"formFields\">"+ "<li>Folder Name: <input type=\"text\" id=\"" + name_id + "\" size=\"20\" /></li>"+ "<li>Folder ID: <span class=\"folderId\"></span></li>"+ "</ul>"+ "<div class=\"buttons\">"+ "<button class=\"primary save\" >Save</button>  <button class=\"secondary cancel\">Cancel</button>"+ "</div>"+ "</div>";}}},add:{id:"",name_id:"",instance:null,html:{icon:"<span class='add btnIcon' title='Add a folder'></span>",makeDialogHTML:function (id,name_id) {return "<div class=\"dialog\" style=\"display:none;\" id=\"" + id + "\" title=\"Add Folder\">"+ "<ul class=\"formFields\">"+ "<li>Folder Name: <input type=\"text\" id=\"" + name_id + "\" size=\"20\" /></li>"+ "</ul>"+ "<div class=\"buttons\">"+ "<button class=\"primary save\" >Save</button>  <button class=\"secondary cancel\">Cancel</button>"+ "</div>"+ "</div>";}}},remove:{id:"",name_id:"",instance:null,html:{icon:"<span class='delete btnIcon' title='Delete this folder'></span>",makeDialogHTML:function (id) {return "<div class=\"dialog\" style=\"display:none;\" id=\"" + id + "\" title=\"Delete Folder\">"+ "Are you sure you want to delete this folder?"+ "<div><span class=\"folderName\"></span> (<span class=\"folderId\"></span>)</div>"+ "<div class=\"buttons\">"+ "<button class=\"primary delete\" >Delete</button>  <button class=\"secondary cancel\">Cancel</button>"+ "</div>"+ "</div>";}}}},unique_id:null,isRendered:false,folderActionsEnabled:false,render:function () {$(this.el).addClass("folder_tree");$(this.parentElement).append($(this.el));this.addFolderWidget();this.loadFolders();this.isRendered =true;},addFolderWidget:function () {var tree =null,that =this,folderHTML ="";tree =new this.tree_widget();tree.treeElement =this.el;if (this.tree_options.initially_open !=undefined) {var init_open =this.makeJSTreeId(this.tree_options.initially_open);}
        tree.initially_open =[init_open];tree.initially_select =this.tree_options.initially_select;tree.showCheckboxes =false;tree.folderThemeSrc ="/portal/Segments/themes/default/style.css";tree.folderSrc =this.tree_options.folderSrc ||this.folder_api_url();tree.inc3rdParty =this.tree_options.inc3rdParty;tree.foldersOnly =this.tree_options.foldersOnly;tree.formatData =this.tree_options.formatData;tree.two_state =typeof this.tree_options.two_state !="undefined"?this.tree_options.two_state :false;tree.dots =typeof this.tree_options.dots !="undefined"?this.tree_options.dots :false;tree.icons =typeof this.tree_options.icons !="undefined"?this.tree_options.icons :true;this.tree =tree;if (this.folderActionsEnabled) {if (this.dialogs.add.id &&$("#"+ this.dialogs.add.id).length ==0) {this.addFolderDialog();}
            if (this.dialogs.remove.id &&$("#"+ this.dialogs.remove.id).length ==0) {this.addRemoveDialog();}
            if (this.dialogs.rename.id &&$("#"+ this.dialogs.rename.id).length ==0) {this.addRenameDialog();}
        }
    },addFolderDialog:function () {var that =this,dialog =this.dialogs.add,folderHTML ="";folderHTML =dialog.html.makeDialogHTML(dialog.id,dialog.name_id);$(this.dialogs_parent).append(folderHTML);dialog.instance =$("#"+ dialog.id).dialog({autoOpen:false,modal:true,create:function () {var $dialog =$("#"+ dialog.id);$dialog.find(".cancel").click(function () {dialog.instance.dialog("close");});$dialog.find(".save").click(function () {var parentFolderID =null,folder_name ="",$name_element =null,newFolder ={domainid:0};try {parentFolderID =parseInt(that.$hoveredElement.parent().attr("id"),10);}
    catch (__ERR__) {throw new Error("Error getting the parent folder");return false;}
        dialog.instance.dialog("close");$name_element =$("#"+ dialog.name_id);folder_name =$name_element.val();_.extend(newFolder,{parentFolderId:parentFolderID,name:$.trim(folder_name)});$name_element.val("");$.ajax({url:that.folder_api_url(),type:"POST",dataType:"json",contentType:"application/json",data:JSON.stringify(newFolder),success:function (data) {var selectedFolder ="";try {selectedFolder ="#"+ $(that.tree.treeElement).jstree("get_selected").attr("id");}
        catch (__ERR__) {throw new Error("Could not select folder");}
            that.tree.initially_select =[selectedFolder];that.loadFolders();},error:function (obj,textStatus,errorThrown) {var alertObj ={title:that.constructor.error_messages.cannot_save_folder};if (obj.status ==409) {alertObj.errorMsg =that.constructor.error_messages.duplicate_name;alertObj.msg =that.constructor.error_messages.change_name_try_again;} else {alertObj.errorMsg =that.constructor.error_messages.unknown_error;alertObj.msg =errorThrown;}
            adobe_am.alertBox(alertObj);}});});$dialog.find("input").keypress(function (event) {if (utils.pressedEnter(event)) {$dialog.find(".save").click();}
    });}});},addRemoveDialog:function () {var that =this,dialog =that.dialogs.remove,folderHTML ="";folderHTML =dialog.html.makeDialogHTML(dialog.id,dialog.name_id);$(this.dialogs_parent).append(folderHTML);dialog.instance =$("#"+ dialog.id).dialog({autoOpen:false,modal:true,create:function () {$("#"+ dialog.id).find(".cancel").click(function () {dialog.instance.dialog("close");});$("#"+ dialog.id).find(".delete").click(function () {dialog.instance.dialog("close");var folderId =parseInt(that.$hoveredElement.parent().attr("id"),10);$.ajax({url:that.folder_api_url(folderId),type:"DELETE",dataType:"json",success:function () {var parentFolder =null;try {parentFolder =parseInt(that.$hoveredElement.parent().attr("id"),10);that.tree.initially_open =["#0_folder",parentFolder];that.tree.initially_select =[parentFolder];that.loadFolders();}
    catch (__ERR__) {throw new Error("The folder was delete but could not open a folder");}
    },error:function (obj,textStatus,errorThrown) {var alertObj ={title:that.constructor.error_messages.delete_folder};if (obj.status ==409) {alertObj.errorMsg =that.constructor.error_messages.cannot_delete_folder,alertObj.msg =that.constructor.error_messages.cannot_delete_folder_message;} else {alertObj.errorMsg =that.constructor.error_messages.unknown_error;alertObj.msg =errorThrown;}
        adobe_am.alertBox(alertObj);}});});}});},addRenameDialog:function () {var that =this,dialog =this.dialogs.rename,folderHTML ="";folderHTML =dialog.html.makeDialogHTML(dialog.id,dialog.name_id);$(this.dialogs_parent).append(folderHTML);dialog.instance =$("#"+ dialog.id).dialog({autoOpen:false,modal:true,create:function () {var $dialog =$("#"+ dialog.id);$dialog.find(".cancel").click(function () {dialog.instance.dialog("close");});$dialog.find(".save").click(function (e) {dialog.instance.dialog("close");var folderId =null,newName ="",$rename_input =null,getURL ="";try {$rename_input =$("#"+ that.dialogs.rename.name_id);folderId =parseInt(that.$hoveredElement.parent().attr("id"),10);newName =$.trim($rename_input.val());getURL =that.folder_api_url(folderId);}
    catch (__ERR__) {throw new Error("Rename folder error");}
        $rename_input.val("");$.getJSON(getURL,function (folderObj) {folderObj.name =newName;$.ajax({url:getURL,type:"PUT",dataType:"json",contentType:"application/json",data:JSON.stringify(folderObj),success:function () {var selectedFolder ="#"+ $(that.tree.treeElement).jstree("get_selected").attr("id");that.tree.initially_select =[selectedFolder];that.loadFolders();},error:function (obj,textStatus,errorThrown) {var alertObj ={title:that.constructor.error_messages.cannot_save_folder};if (obj.status ==409) {alertObj.errorMsg =that.constructor.error_messages.duplicate_folder_name;alertObj.msg =that.constructor.error_messages.change_name_try_again;} else {alertObj.errorMsg =that.constructor.error_messages.unknown_error;alertObj.msg =errorThrown;}
            adobe_am.alertBox(alertObj);}});});});$("#"+ that.dialogs.rename.id).find("input").keypress(function (event) {if (utils.pressedEnter(event)) {$("#"+ that.dialogs.rename.id).find(".save").click();}
    });}});},loadFolders:function (args) {var loadedTree =this.tree.loadTree(),that =this,args =args ||{};$(that.tree.treeElement).html("");loadedTree.bind("loaded.jstree",function (event,data) {that.hookTreeLoaded();});loadedTree.bind("hover_node.jstree",function (event,data) {var html ="";if (that.folderActionsEnabled) {if (that.dialogs.add.id) {html +=that.dialogs.add.html.icon;}
        if (that.dialogs.rename.id) {html +=that.dialogs.rename.html.icon;}
        if (that.dialogs.remove.id) {html +=that.dialogs.remove.html.icon;}
        var $element =$(data.args[0]);if ($element.prop("nodeName") !="A") {return;}
        that.$hoveredElement =$element;if ($element.find("span").length) {return;}
        $element.append(html).find("span").on("click",function (e) {e.stopPropagation();var dialogs =that.dialogs;var folderId =parseInt($(e.target).closest("li[id]").attr("id"),10);if ($(e.target).hasClass("add")) {dialogs.add.instance.dialog("open");} else {if ($(e.target).hasClass("edit")) {$("#"+ dialogs.rename.name_id).val($.trim($(e.target).parent().text()));$("#"+ dialogs.rename.id).find(".folderId").text(folderId);dialogs.rename.instance.dialog("open");} else {if ($(e.target).hasClass("delete")) {$("#"+ dialogs.remove.id + " .folderName").text($(e.target).parent().text());$("#"+ dialogs.remove.id).find(".folderId").text(folderId);dialogs.remove.instance.dialog("open");}
        }
        }
            $(".ui-dialog:visible").addClass("fixed-pos");return false;});}
    });loadedTree.bind("select_node.jstree",function (event,data) {var folderNode =$(that.tree.treeElement).jstree("get_selected").attr("id");var folderId =parseInt(folderNode,10);that.hookSelectNode({folderNode:folderNode,folderId:folderId});event.stopPropagation();});},hookTreeLoaded:function () {},hookSelectNode:function (args) {},makeJSTreeId:function (id,text) {return "#"+ id + (text ?text :"_folder");},selectNode:function (id,text) {var tree_specific_id =id;if (!isNaN(id)) {tree_specific_id =this.makeJSTreeId(id,text);}
        var $selected_id =null;var node =this.getSelectedNode();if (node) {$selected_id ="#"+ node.attr("id");}
        if ($selected_id !=tree_specific_id) {this.clearFolders();this.closeAllNodes();this.$el.jstree("select_node",tree_specific_id);}
    },openNode:function (id,text) {var tree_specific_id =id;if (!isNaN(id)) {tree_specific_id =this.makeJSTreeId(id,text);}
        this.$el.jstree("open_node",tree_specific_id);},closeAllNodes:function () {$(this.el).find("li.jstree-open").removeClass("open").addClass("jstree-closed");},clearFolders:function () {$(this.tree.treeElement).jstree("get_selected").find("a.selectedNode").removeClass("selectedNode");},getSelectedNode:function () {},getDialogId:function (type) {switch (type) {case "remove":case "delete":return this.dialogs.remove.id;break;case "rename":return this.dialogs.rename.id;break;case "add":return this.dialogs.add.id;break;default:return false;break;}
    },checkArguments:function (args) {if (args ==undefined) {throw new this.constructor.ArgError("arguments","certain arguments are required");}
        if (args &&args.className ==undefined) {throw new this.constructor.ArgError("className","className must be defined");}
        if (args &&args.folder_api_url ==undefined) {throw new this.constructor.ArgError("folder_api_url","folder_api_url must be defined");}
        if (args &&typeof args.folder_api_url !="function") {throw new this.constructor.ArgError("folder_api_url","folder_api_url must be a function");}
        if (args.tree_widget ==undefined) {throw new this.constructor.ArgError("tree_widget","tree_widget must be defined");}
        if (args &&args.tree_options ==undefined) {throw new this.constructor.ArgError("tree_options","tree_options must be defined");}
        return true;},initialize:function (args) {var dialogs =this.dialogs;if (!this.checkArguments(args)) {return false;}
        this.unique_id =new Date().getTime();if (args &&args.folder_actions) {this.folderActionsEnabled =true;if (args.folder_actions.rename) {dialogs.rename.id ="renameFolderDialog_"+ this.unique_id;dialogs.rename.name_id ="renameFolderName_"+ this.unique_id;}
            if (args.folder_actions.add) {dialogs.add.id ="addSubFolderDialog_"+ this.unique_id;dialogs.add.name_id ="subFolderName_"+ this.unique_id;}
            if (args.folder_actions.remove) {dialogs.remove.id ="deleteFolderDialog_"+ this.unique_id;}
            delete args.folder_actions;}
        _.bindAll(this,"render","addFolderWidget","loadFolders","selectNode","getSelectedNode","closeAllNodes","clearFolders","hookTreeLoaded","hookSelectNode","getDialogId","addFolderDialog","addRenameDialog","addRemoveDialog");_.extend(this,args);}},{ArgError:function (p,m) {this.param =p;this.message =m;},error_messages:{cannot_save_folder:"Cannot save folder",duplicate_name:"Duplicate name.",change_name_try_again:"Change the name and try again.",unknown_error:"An error occured.",delete_folder:"Delete Folder",cannot_delete_folder:"Cannot delete.",cannot_delete_folder_message:"You cannot delete this folder.  It contains traits or another folder.  Move or delete the contents first.",duplicate_folder_name:"Duplicate name."}});}
());ADOBE.AM.Widget.Views.LimitsUsage =(function (backbone,adobe,globals,templates) {var pid,api;if (arguments.length ==0) {backbone =Backbone;api =ADOBE.AM.API;templates =APP.templates;} else {pid =globals.pid;api =adobe.AM.API;}
    templates =templates.limits_widget;var LimitsUsage =Backbone.View.extend({initialize:function (args) {var supportListenTo =!!this.listenTo;if (args ==void 0) {throw new Error("No arguments defined");}
        if (args.model ==void 0 ||!(args.model instanceof Backbone.Model)) {throw new Error("Model argument is not a backbone model!");}
        if (args.templateType ==void 0 &&this.template ==void 0) {throw new Error("You must define a templateType");}
        if (args.templateType !=void 0) {var template =templates[args.templateType.toLowerCase()];if (template ==void 0) {throw new Error("The templateType you defined is not available");}
            this.template =_.template(template);}
        this.model =args.model;this.collections =args.collections;var deferreds =[$.Deferred()];if (this.model.isLoaded()) {deferreds[0].resolve();} else {if (supportListenTo) {this.listenTo(this.model,"change",deferreds[0].resolve);} else {this.model.on("change",deferreds[0].resolve);}
        }
        for (var i =0;i < this.collections.length;i++) {var _def =$.Deferred();deferreds.push(_def);if (this.collections[i].length > 0) {_def.resolve();} else {if (supportListenTo) {this.listenTo(this.collections[i],"reset",_def.resolve);} else {this.collections[i].on("reset",_def.resolve);}
        }
        }
        $.when.apply($,deferreds).then(function () {this.render();}.bind(this),function () {console.log("SOmething failed");});},render:function () {var totals =[];var data ={};totals =this.collections.map(function (col) {return col.total;});data =_.extend({totals:totals},this.model.attributes);this.$el.html(this.template(data));console.log(this.model.attributes);this.collections.forEach(function (c) {console.log(c);});}});return LimitsUsage;}
());ADOBE.AM.Widget.Views.ListTableAlphabetNav =(function (backbone,marionette,vent) {if (arguments.length ==0) {return false;}
    return backbone.Marionette.CompositeView.extend({className:"hasAlphabetNav",lastCharCode:"",initialize:function (options) {this.checked =[];this.lastChecked =null;this.type =options.type;this.template =_.template($("#"+ options.type.toLowerCase() + "ListTable").html());if (options.onCompositeCollectionRendered &&this.collection.length) {this.onCompositeCollectionRendered =options.onCompositeCollectionRendered;}
    },events:{"click .scrollTo.enabled":"scrollTo","click th input[name=checkAll]":"checkAll","click td input[name=checkOne]":"checkOne"},scrollTo:function (e) {$(".relativeFrame").scrollTo(this.$("#scroll-"+ $(e.currentTarget).text()),400,{axis:"y"});},check:function (lastChecked) {var checked =_.map(this.$("tbody input:checked"),function (checkbox) {return parseInt(checkbox.value,10);});this.checked =checked;this.lastChecked =lastChecked;var data ={checked:checked};if (lastChecked) {data.lastChecked =lastChecked;}
        vent.trigger("User:Table:check",data);},checkAll:function (e) {if (e.currentTarget.checked) {this.$("tbody input[name=checkOne]").prop("checked",true);} else {this.$("tbody input[name=checkOne]").prop("checked",false);}
        this.check();},checkOne:function (e) {if (e.currentTarget.checked) {$(e.currentTarget).prop("checked",true);this.check(parseInt(e.currentTarget.value,10));} else {$(e.currentTarget).prop("checked",false);this.check();}
    },appendHtml:function (collectionView,itemView,index) {if (!this.collection.length) {collectionView.$("tbody").append(new this.emptyView().render().el);this.$("table.data").addClass("no-results");return false;}
        var charCode =itemView.model.get(this.options.sortBy).toUpperCase().charCodeAt(0);if (this.lastCharCode !=charCode) {var letter =String.fromCharCode(charCode);collectionView.$("tbody").append("<tr class=\"letterAnchorRow\"><td colspan=\"6\">"+ "<div id=\"scroll-" + letter + "\" class=\"letterAnchor\"></div><div class=\"letter\">"+ letter + "</div>"+ "</td></tr>");this.lastCharCode =charCode;}
        collectionView.$("tbody").append(itemView.el);},itemViewOptions:function () {delete this.options.id;return this.options;},itemView:backbone.Marionette.ItemView.extend({initialize:function (options) {var self =this;this.templateData ={};this.template =_.template($("#"+ options.type + "ListTableRow").html());if (options.multiProps) {_.each(options.multiProps,function (multiProp,key) {var filteredColl =multiProp.filter(function (model) {if (_.indexOf(self.model.get(key),model.get("id")) > -1) {return true;}
    });self.templateData[key] =filteredColl;});}
    },tagName:"tr",render:function () {var self =this;this.$el.html(this.template(_.extend(self.model.toJSON(),self.templateData)));}}),emptyView:backbone.Marionette.ItemView.extend({tagName:"tr",template:_.template("<td colspan=\"6\"><span class=\"no-results-txt\">No results returned.</span></td>")}),getChecked:function () {return this.checked;}});}
());ADOBE.AM.Widget.Views.ListTableInfiniScroll =(function ($,_,backbone,marionette,vent,ViewPortHelper) {"use strict";if (arguments.length ===0) {return false;}
    return backbone.Marionette.CompositeView.extend({checkElementInViewport:function () {var el =this.$el.find("tr:last").eq(0);if (el.length ===0) {return;}
        el =el[0];if (this.isElementInViewport(el)) {this.collection.fetchMore();}
    },checkboxColumn:true,tagName:"form",isElementInViewport:ViewPortHelper.isElementInViewport,boundViewport:function () {return _.debounce(_.bind(this.checkElementInViewport,this),100);},isLoadingState:false,isEmptyState:false,boundViewportEvent:null,initialize:function (options) {var self =this;this.isLoadingState =false;this.isEmptyState =false;_.bindAll(this,"boundViewport","checkElementInViewport");this.boundViewportEvent =self.boundViewport();$(window).on({DOMContentLoaded:this.boundViewportEvent,load:this.boundViewportEvent,resize:this.boundViewportEvent});this.checked =[];if (options.checkboxCol ===false) {this.checkboxColumn =false;}
        if (options.compositeViewTemplateId) {this.template ="#"+ options.compositeViewTemplateId;} else {throw new Error("You must pass in a compositeViewTemplateId via options.");}
        if (typeof options.collection.fetchMore !=="function") {throw new Error("The collection must have a fetchMore method");}
        if (!options.itemViewTemplateId) {throw new Error("You must pass in a itemViewTemplateId via options.");}
        if (options.collection.length ===0) {options.collection.once("add",function () {self.clearTable();});}
    },collectionEvents:{reset:"clearTable"},events:{"click th input[name=checkAll]":"checkAll","click td input[name=checkOne]":"checkOne"},onShow:function () {this.$el.offsetParent().on("scroll",this.boundViewportEvent);},onClose:function () {var $window =$(window);$window.off("DOMContentLoaded",this.boundViewportEvent);$window.off("load",this.boundViewportEvent);$window.off("resize",this.boundViewportEvent);this.$el.offsetParent().off("scroll",this.boundViewportEvent);},clearTable:function () {this.$("tbody").html("");},check:function (lastChecked) {var checked =_.map(this.$("tbody input:checked"),function (checkbox) {return parseInt(checkbox.value,10);});this.checked =checked;this.lastChecked =lastChecked;var data ={checked:checked};if (lastChecked) {data.lastChecked =lastChecked;}
        vent.trigger(this.options.checkEvent,data);},checkAll:function (e) {this.$("tbody input[name=checkOne]").prop("checked",e.currentTarget.checked);this.check();},checkOne:function (e) {$(e.currentTarget).prop("checked",e.currentTarget.checked);if (e.currentTarget.checked) {this.check(parseInt(e.currentTarget.value,10));} else {this.check();}
    },appendHtml:function (collectionView,itemView) {var row =null;if (this.isLoadingState) {this.clearTable();this.isLoadingState =false;}
        if (this.isEmptyState) {this.clearTable();this.isEmptyState =false;}
        if (!this.collection.length) {if (this.collection.isFetching()) {row =new this.loadingView().render().el;this.isLoadingState =true;} else {row =new this.emptyView().render().el;this.$("table.data").addClass("no-results");this.isEmptyState =true;}
            collectionView.$("tbody").append(row);return false;}
        collectionView.$("tbody").append(itemView.el);},itemViewOptions:function () {var self =this;return {itemViewTemplateId:self.options.itemViewTemplateId};},itemView:backbone.Marionette.ItemView.extend({initialize:function (options) {var self =this;this.templateData ={};this.template =_.template($("#"+ options.itemViewTemplateId).html());if (options.multiProps) {_.each(options.multiProps,function (multiProp,key) {var filteredColl =multiProp.filter(function (model) {if (_.indexOf(self.model.get(key),model.get("id")) > -1) {return true;}
    });self.templateData[key] =filteredColl;});}
    },tagName:"tr"}),emptyView:backbone.Marionette.ItemView.extend({tagName:"tr",template:_.template("<td colspan=\"6\"><span class=\"no-results-txt\">No results returned.</span></td>")}),loadingView:backbone.Marionette.ItemView.extend({tagName:"tr",template:_.template("<td colspan=\"6\" class=\"loading-table-row\"><div class=\"wait\"></div></td>")}),alignTableCols:function () {var self =this;var $thead =self.$el.find("#thead"),$theadRow =$thead.find("tr:first"),$tbody =self.$el.find("#tbody"),$tbodyRow =$tbody.find("tr:first");var fixedWidthsTotal =self.checkboxColumn ?$tbodyRow.find(".checkbox").width() :0;_.each(self.options.fixedWidthCols,function (col) {fixedWidthsTotal +=$tbodyRow.find("."+ col).width();});var remainingWidthDivided =(self.$el.width() - fixedWidthsTotal) / self.options.variableWidthCols.length;_.each(self.options.variableWidthCols,function (col) {$tbodyRow.find("."+ col + ", ."+ col + ".wrap").width(remainingWidthDivided);$theadRow.find("."+ col + ", ."+ col + ".wrap").width($tbodyRow.find("."+ col).width());});},onCompositeCollectionRendered:function () {_.bind(function () {vent.trigger(this.options.listLoadCompleteEvent);this.alignTableCols();},this);$(window).resize(_.debounce(_.bind(this.alignTableCols,this),100));},checkElement:function () {this.alignTableCols();this.checkElementInViewport();},getChecked:function () {return this.checked;}});}
());ADOBE.AM.Widget.Views.LoadingModal =(function (adobe,backbone,_,CUI) {"use strict";var loading_modal =null;if (arguments.length ===0) {adobe =ADOBE;backbone =Backbone;}
    return backbone.View.extend({initialize:function (args) {var options ={};options.type ="default";options.buttons =[];options.heading ="<div class=\"spinner large\"></div><div class=\"msg\">"+ adobe.AM.MESSAGES.getMessage("loading").message + "</div>";options.element ="#loading_modal";if (args &&args.options) {_.extend(options,args.options);}
        this.options =options;_.bindAll(this,"show","hide");},show:function (args) {var options =_.extend(this.options,args);_.extend(options,args);loading_modal =new CUI.Modal(options);},hide:function () {if (loading_modal &&typeof loading_modal.hide ==="function") {loading_modal.hide();}
    },getElement:function () {return loading_modal.$element;}});}
());ModelBuilder =new Backbone.Marionette.Application();ModelBuilder.module("SegmentsModal",function(SegmentsModal,ModelBuilder,Backbone,Marionette,$,_,APP,AUI,ADOBE,Mediator) {var AAM =ADOBE.AM;var add_button =document.createElement('button');var cancel_button =document.createElement('button');var div =document.createElement('div');add_button.className ='primary';add_button.innerHTML ="Add Selected Segment to Model";cancel_button.className ='secondary';cancel_button.innerHTML ="Cancel";AUI.addListener(add_button,'click',function() {var selected_sid =$('#form_segments :radio:checked').val();if (!selected_sid) {ModelBuilder.vent.trigger("modal:show",{type :'notice',message :'You have not selected any segment(s) to add.'});return false;}
    var selected_segment =PaginatedSegments.get(selected_sid);ModelBuilder.vent.trigger("modal:trait_or_segment:selected",selected_segment);});AUI.addListener(cancel_button,'click',function() {ModelBuilder.vent.trigger("modal:segments:hide");});div.appendChild(add_button);div.appendChild(cancel_button);var segments_modal =new AUI.Dialog({header :'Select Segment',width :'1026px',height :'780px',footer :div,center :true,zIndex :1003
}).render();ModelBuilder.segments_modal =segments_modal;var PaginatedSegments =new AAM.Segment.Collections.PaginatedSegments();PaginatedSegments.setParams({includeMetrics :true
});var rendered =false;var showDialog =function() {segments_modal.show();if (rendered) {return;}
    segments_modal.append('content',APP.templates.browse_segments_modal);var SearchBar =new AAM.Widget.Views.SearchField({el :$('.segment_storage .segment_search'),collection :PaginatedSegments,beforeSearch :function() {this.collection.setParams({folderId :null
    });showTableLoading(true);},afterSearch :function() {showTableLoading(false);}
    });var SegmentsFolderTree =new AAM.Segment.Views.SegmentsFolderTree({tree_options :{folderSrc :AAM.API.FOLDERS.folders.url('segments'),inc3rdParty :true,foldersOnly :true,formatData :function(data) {var newDataArr =[];$.each(data,function(i,folder) {var obj =DEMDEX.UTILS.formatFolderHierarchy(folder);newDataArr.push(obj);});return newDataArr;}
    },parentElement :'#segment_folder_tree'});SegmentsFolderTree.render();var SegmentsTable =new AAM.Widget.Views.PaginatedTable2({el :$('#segments_table'),query_params :{includeMetrics :true
    },collection :PaginatedSegments,new_row :Backbone.View.extend({initialize :function() {_.bindAll(this,'checkbox');this.model.bind('change',this.render,this);},tagName :'tr',events :{"click .result_checkbox":"checkbox"},checkbox :function(event) {},template :APP.templates.segment_table_row,render :function() {var segment_model =this.model;var compiled_template =_.template(this.template,{t :segment_model
    });this.$el.html(compiled_template);return this;}
    }),onBeforeSort :function() {showTableLoading(true);},onAfterSort :function() {showTableLoading(false);},checkedRows:[]
    });var SegmentsPagination =new AAM.Widget.Views.PaginatedView({parent_element :$('#segments_pagination'),collection :PaginatedSegments,beforeEventClick :function() {showTableLoading(true);},afterRender :function() {showTableLoading(false);}
    });SearchBar.triggerSearch();rendered =true;};Mediator.add("SegmentsModal",{onSegmentFolderSelectReceived :function(args) {showTableLoading(true);PaginatedSegments.setParams({query :null,folderId :args.folderId
});PaginatedSegments.resetPagination();PaginatedSegments.fetch({success :function() {showTableLoading(false);},error :function() {showTableLoading(false);}
});}
});var loading =0;var showTableLoading =function(show) {var loading_obj =ADOBE.AM.LoadingOverlay.config({id :'segment_modal_table',parent_element :$('.segments_list'),message :"Loading..."});if (show) {if (loading ==0) {loading_obj.show();loading =1;} else {loading +=1;}
}
else {if (loading ==1) {loading_obj.hide();loading =0;} else {if (loading ==0) {return false;}
    loading -=1;}
}
};ModelBuilder.vent.bindTo("modal:segments:show",function() {showDialog();});ModelBuilder.vent.bindTo("modal:segments:hide",function() {ModelBuilder.segments_modal.hide();});},APP,AUI,ADOBE,Mediator);ModelBuilder.module("TraitsModal",function(TraitsModal,ModelBuilder,Backbone,Marionette,$,_,APP,AUI,ADOBE,Mediator) {var AAM =ADOBE.AM;var add_button =document.createElement('button');var cancel_button =document.createElement('button');var div =document.createElement('div');add_button.className ='primary';add_button.innerHTML ="Add Selected Trait";cancel_button.className ='secondary';cancel_button.innerHTML ="Cancel";AUI.addListener(add_button,'click',function() {var selected_sid =$('#form_traits :radio:checked').val();if (!selected_sid) {ADOBE.AM.AlertModal({type:'notice',message:'You have not selected any trait(s) to add.'});return false;}
    var selected_trait =PaginatedTraits.get(selected_sid);ModelBuilder.vent.trigger("modal:trait_or_segment:selected",selected_trait);});AUI.addListener(cancel_button,'click',function() {ModelBuilder.vent.trigger("modal:traits:hide");});div.appendChild(add_button);div.appendChild(cancel_button);var traits_modal =new AUI.Dialog({header :'Select Trait',width :'1026px',height :'780px',footer :div,center :true,zIndex :1003
}).render();ModelBuilder.traits_modal =traits_modal;var PaginatedTraits =new AAM.Trait.Collections.PaginatedTraits();PaginatedTraits.setParams({includeMetrics :true
});var rendered =false;var showDialog =function() {traits_modal.show();if (rendered) {return;}
    traits_modal.append('content',APP.templates.browse_traits_modal);var SearchBar =new AAM.Widget.Views.SearchField({el :$('.trait_storage .trait_search'),collection :PaginatedTraits,beforeSearch :function() {this.collection.setParams({folderId :null
    });showTableLoading(true);},afterSearch :function() {showTableLoading(false);}
    });var TraitsFolderTree =new AAM.Trait.Views.TraitsFolderTree({tree_options :{folderSrc :AAM.API.TRAITS.folders.url(),inc3rdParty :true,foldersOnly :true,formatData :function(data) {var newDataArr =[];$.each(data,function(i,folder) {var obj =DEMDEX.UTILS.formatFolderHierarchy(folder);newDataArr.push(obj);});return newDataArr;}
    },parentElement :'#traits_folder_tree'});TraitsFolderTree.render();var TraitsTable =new AAM.Widget.Views.PaginatedTable2({el :$('#traits_table'),collection :PaginatedTraits,new_row :Backbone.Marionette.ItemView.extend({initialize :function() {_.bindAll(this,'radioBtn');this.model.bind('change',this.render,this);},tagName :'tr',events :{"click .radioBtn":"radioBtn"},radioBtn :function(event) {},template :APP.templates.trait_table_row,templateHelpers :{getTraitTypeName :ADOBE.AM.Trait.Models.Trait.getTraitTypeName
    },render :function() {var trait_model =this.model,dataSourceId =trait_model.get('dataSourceId');var datasources =new Backbone.Collection(window._globalDataSourcesForTraits);var dataSource =datasources.where({dataSourceId:dataSourceId})[0];var dataSourceName =dataSource ===Object(dataSource) ?(dataSource.get('name') ||'') :'';if (dataSourceName) {dataSourceName +=' ';}
        var compiled_template =_.template(this.template,{t :trait_model,dataSourceName :dataSourceName,getTraitTypeName :ADOBE.AM.Trait.Models.Trait.getTraitTypeName
        });this.$el.html(compiled_template);return this;}
    }),onBeforeSort :function() {showTableLoading(true);},onAfterSort :function() {showTableLoading(false);}
    });var TraitsPagination =new AAM.Widget.Views.PaginatedView({parent_element :$('#traits_pagination'),collection :PaginatedTraits,beforeEventClick :function() {showTableLoading(true);},afterRender :function() {showTableLoading(false);}
    });SearchBar.triggerSearch();rendered =true;};Mediator.add("TraitsModal",{onTraitFolderSelectReceived :function(args) {showTableLoading(true);PaginatedTraits.setParams({query :null,folderId :args.folderId
});PaginatedTraits.resetPagination();PaginatedTraits.fetch({success :function() {if (loading)
    showTableLoading(false);},error :function() {showTableLoading(false);}
});}
});var loading =0;var showTableLoading =function(show) {var loading_obj =ADOBE.AM.LoadingOverlay.config({id :'trait_modal_table',parent_element :$('.traits_list'),message :"Loading..."});if (show) {if (loading ==0) {loading_obj.show();loading =1;} else {loading +=1;}
}
else {if (loading ==1) {loading_obj.hide();loading =0;} else {if (loading ==0) {return false;}
    loading -=1;}
}
};ModelBuilder.vent.bindTo("modal:traits:show",function() {showDialog();});ModelBuilder.vent.bindTo("modal:traits:hide",function() {ModelBuilder.traits_modal.hide();});},APP,AUI,ADOBE,Mediator);ModelBuilder.module("InfluentialTraitsModal",function(InfluentialTraitsModal,ModelBuilder,Backbone,Marionette,$,_,APP,AUI,ADOBE,Mediator) {var AAM =ADOBE.AM;var cancel_button =document.createElement('button');var div =document.createElement('div');cancel_button.className ='primary';cancel_button.innerHTML ="Close";AUI.addListener(cancel_button,'click',function() {ModelBuilder.vent.trigger("modal:influential_traits:hide");});div.appendChild(cancel_button);var influential_traits_modal =new AUI.Dialog({header :'Influential Traits',width :'1026px',height :'780px',footer :div,center :true,zIndex :1004
}).render();ModelBuilder.influential_traits_modal =influential_traits_modal;var PaginatedTraits =new AAM.Trait.Collections.PaginatedTraits();var rendered =false;var showDialog =function() {influential_traits_modal.show();var tempFixForChrome =function() {var $el =$('.AUI_Dialog_outerContainer');var absoluteTop =$el.position().top;var fixedTop =$el.offset().top;$el.css({top:absoluteTop }).addClass('chromeFix');$(window).resize(function() {$el.removeClass('chromeFix');});};if (rendered) {tempFixForChrome();return;}
    influential_traits_modal.set('content',APP.templates.model_builder.page.influential_traits_modal);var InfluentialTraitsTable =new AAM.Widget.Views.PaginatedTable2({el :$('#influential_traits_table'),query_params :{includeMetrics :true
    },collection :PaginatedTraits,new_row :Backbone.View.extend({initialize :function() {this.model.bind('change',this.render,this);},tagName :'tr',template :APP.templates.model_builder.page.influential_trait_table_row,render :function() {var trait_model =this.model;var compiled_template =_.template(this.template,{t :trait_model
    });this.$el.html(compiled_template);return this;}
    }),onBeforeSort :function() {showTableLoading(true);},onAfterSort :function() {showTableLoading(false);}
    });var InfluentialTraitsPagination =new AAM.Widget.Views.PaginatedView({parent_element :$('#influential_traits_pagination'),collection :PaginatedTraits,beforeEventClick :function() {showTableLoading(true);},afterRender :function() {showTableLoading(false);}
    });PaginatedTraits.setParams({sortField :'rank',customParam1 :false
    });PaginatedTraits.url =ADOBE.AM.API.MODELS.influential_traits.url(ModelBuilder.LoadedModel.AlgoModel.get('algoModelId'));PaginatedTraits
        .fetch()
        .always(function() {showTableLoading(false);});showTableLoading(true);$('.AUI_CloseButton').click(function() {$('body').removeClass('disableMainScroll');});setTimeout(tempFixForChrome,0);rendered =true;};var loading =0;var showTableLoading =function(show) {var loading_obj =ADOBE.AM.LoadingOverlay.config({id :'influential_traits_table_loading',parent_element :$('#influential_traits_table'),message :"Loading..."});if (show) {if (loading ==0) {loading_obj.show();loading =1;} else {loading +=1;}
}
else {if (loading ==1) {loading_obj.hide();loading =0;} else {if (loading ==0) {return false;}
    loading -=1;}
}
};ModelBuilder.vent.bindTo("modal:influential_traits:show",function() {$('body').addClass('disableMainScroll');showDialog();});ModelBuilder.vent.bindTo("modal:influential_traits:hide",function() {$('body').removeClass('disableMainScroll');$('.AUI_Dialog_outerContainer').removeClass('chromeFix').css({top:'50%'});ModelBuilder.influential_traits_modal.hide();rendered =false;});},APP,AUI,ADOBE,Mediator);ModelBuilder.addRegions({content_region :'#modelbuilder'});ModelBuilder.vent.on("layout:rendered",function() {if (!Backbone.History.started) {Backbone.history.start();}
});ModelBuilder.module("LoadedModel",function(LoadedModel,ModelBuilder,Backbone,Marionette,$,_) {LoadedModel.AlgoModel =new ADOBE.AM.Model.Models.AlgoModel({});ModelBuilder.vent.bindTo("model:new",function() {LoadedModel.AlgoModel.clear();});return LoadedModel;});ModelBuilder.module("Routing",function(Routing,ModelBuilder,Backbone,Marionette,$,_) {Routing.showRoute =function() {var route =getRoutePath(arguments);Backbone.history.navigate(route,{trigger :true});};var getRoutePath =function(routeParts) {var base =routeParts[0];var length =routeParts.length;var route =base;if (length > 1){for(var i =1;i < length;i++) {var arg =routeParts[i];if (arg){route =route + "/"+ arg;}
}
}
    return route;};});ModelBuilder.module("Routing.CreateEditAppRouting",function(CreateEditAppRouting,ModelBuilder,Backbone,Marionette,$,_) {CreateEditAppRouting.Router =Marionette.AppRouter.extend({appRoutes :{"new":"showNew","new/segment/:sid":"showNewWithSegment","new/trait/:sid":"showNewWithTrait","edit/:mid":"showEdit","clone/:mid":"showClone"}
});ModelBuilder.vent.on("new:show",function() {ModelBuilder.Routing.showRoute("new");});ModelBuilder.vent.on("new/segment:show",function(sid) {ModelBuilder.Routing.showRoute("new",sid);});ModelBuilder.vent.on("new/trait:show",function(sid) {ModelBuilder.Routing.showRoute("new",sid);});ModelBuilder.vent.on("edit:show",function(mid) {ModelBuilder.Routing.showRoute("edit",mid);});ModelBuilder.vent.on("clone:show",function(mid) {ModelBuilder.Routing.showRoute("clone",mid);});ModelBuilder.addInitializer(function() {CreateEditAppRouting.router =new CreateEditAppRouting.Router({controller :ModelBuilder.CreateEditApp
});});});ModelBuilder.module("Routing.ViewAppRouting",function(ViewAppRouting,ModelBuilder,Backbone,Marionette,$,_) {ViewAppRouting.Router =Marionette.AppRouter.extend({appRoutes :{"view/:mid":"showView"}
});ModelBuilder.vent.on("view:show",function(modelId) {ModelBuilder.Routing.showRoute("view",modelId);});ModelBuilder.addInitializer(function() {ViewAppRouting.router =new ViewAppRouting.Router({controller :ModelBuilder.ViewPageApp
});});});ModelBuilder.module("Routing.ListAppRouting",function(ListAppRouting,ModelBuilder,Backbone,Marionette,$,_) {ListAppRouting.Router =Marionette.AppRouter.extend({appRoutes :{"":"showList","list":"showList"}
});ModelBuilder.vent.bindTo("list:show",function() {ModelBuilder.Routing.showRoute("list");});ModelBuilder.addInitializer(function() {ListAppRouting.router =new ListAppRouting.Router({controller :ModelBuilder.ListPageApp
});});});ModelBuilder.vent.bindTo("modal:show",function(args) {var modal =ADOBE.AM.AlertModal(args);ModelBuilder.modal =modal;});ModelBuilder.vent.bindTo("modal:hide",function() {if (ModelBuilder.modal) {ModelBuilder.modal.hide();}
});$(function() {ADOBE.AM.Model.Collections.RunStats.MAX_REACH_AUDIENCE_SIZE =APP.state.vars.globals.max_reach_audience_size;ModelBuilder.GateKeeper =new ADOBE.AM.UTILS.GATEKEEPER();ModelBuilder.GateKeeper.setPermissionClass(ADOBE.AM.Permission.Models.Permission);ModelBuilder.GateKeeper.setErrorTypes(ADOBE.AM.UTILS.ERRORS.TYPES);ModelBuilder.GateKeeper.setSchemes(ADOBE.AM.PERMS.permission_schemes);ModelBuilder.User ={permissions :new ADOBE.AM.User.Models.UserPermission({permissions :window.userRoles
}),actions :{can_create_models :false,can_delete_models :false,can_create_trait :false,can_create_trait_with_current_model :false
}
};ModelBuilder.DataProviders ={segments :new ADOBE.AM.DataSource.Collections.DataSources(window._globalDataSourcesForSegments),traits :new ADOBE.AM.DataSource.Collections.DataSources(window._globalDataSourcesForTraits)
};if (ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions],'can_create_model')) {ModelBuilder.User.actions.can_create_models =true;}
    if (ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions],'can_delete_model')) {ModelBuilder.User.actions.can_delete_models =true;}
    var firstPartyDataSourcesSegments =ModelBuilder.DataProviders.segments.getFirstParty(ADOBE.AM.pid);var firstPartyDataSourcesTraits =ModelBuilder.DataProviders.traits.getFirstParty(ADOBE.AM.pid);if (firstPartyDataSourcesSegments.length > 0 ||firstPartyDataSourcesTraits.length > 0) {_.each([firstPartyDataSourcesSegments,firstPartyDataSourcesTraits],function(datasources) {_.each(datasources,function(datasource) {if (ModelBuilder.User.actions.can_create_models ===false) {ModelBuilder.User.actions.can_create_models =ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,datasource.relational.permissions],'can_create_model');}
        if (ModelBuilder.User.actions.can_delete_models ===false) {ModelBuilder.User.actions.can_delete_models =ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,datasource.relational.permissions],'can_delete_model');}
    });});}
    if (firstPartyDataSourcesTraits.length) {_.each(firstPartyDataSourcesTraits,function(datasource) {if (ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,datasource.relational.permissions],'can_create_trait')) {ModelBuilder.User.actions.can_create_trait =true;}
    });}
    ModelBuilder.start();if (!Backbone.History.started) {Backbone.history.start();}
});ModelBuilder.module("ListPageApp",function(ListPageApp,ModelBuilder,Backbone,Marionette,$,_,APP,AUI,ADOBE) {var MainLayout =Backbone.Marionette.Layout.extend({template :_.template(APP.templates.model_builder.page.list_page),model :ModelBuilder.LoadedModel.AlgoModel,regions :{toolbar :'.toolbar',storage :'.model_storage',models_list :'.models_list'},events :{"click li.new_model":"newModel","click li.new_trait":"newTrait","click li.delete_model":"deleteModels"},newModel :function() {ModelBuilder.vent.trigger("new:show");},newTrait :function() {var message;if (ModelRow.checked_models.length ==1) {var id =ModelRow.checked_models[0],model =PaginatedModels.where({algoModelId:id})[0];if (model) {if (!model.get('lastSuccessfulRunTimestamp')) {message =ADOBE.AM.MESSAGES.getMessage('model_run_once').message;} else if (_.indexOf(ModelRow.traitable_models,id) < 0) {message =ADOBE.AM.MESSAGES.getMessage('cannot_create_trait_from_model_simple').message;} else {document.location =APP.state.vars.urls.algotraits_page + '#new/model/'+ id;return false;}
}
} else {message ='You must select one model';}
    if (message) {ModelBuilder.vent.trigger('modal:show',{message:message,height:'140px'});}
},deleteModels :function(evt) {var algoModelIds =ModelRow.checked_models;var message ="";var error =false;var algomodels_permissions_valid =[];var algomodels_permissions_invalid =[];if (algoModelIds ==undefined ||algoModelIds.length ==0) {ModelBuilder.vent.trigger("modal:show",{message :ADOBE.AM.MESSAGES.getMessage('delete_models_invalid').message
});return false;}
    var algomodel_models =PaginatedModels.filter(function(model) {return _.indexOf(algoModelIds,model.get("algoModelId")) > -1;});_.each(algomodel_models,function(model) {try {if (ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,model.relational.permissions],'can_delete_single_model')) {algomodels_permissions_valid.push(model.get('algoModelId'));}
    else {algomodels_permissions_invalid.push(model.get('name'));}
    }
    catch (_Err) {ADOBE.AM.UTILS.LOGGER.log("Error in bulk delete"+ _Err.message);error =true;}
    });if (error) {ModelBuilder.vent.trigger('modal:show',{type :'error',message :ADOBE.AM.MESSAGES.getMessage('error_in_model_bulk_delete').message
    });return;}
    if (algomodels_permissions_invalid.length > 0) {message +=ADOBE.AM.MESSAGES.getMessage('models_cannot_be_deleted').message;_.each(algomodels_permissions_invalid,function(val) {message +="<br /> - "+ val;});message +="<br /><br />";}
    if (algomodels_permissions_valid.length ===0) {message +=ADOBE.AM.MESSAGES.getMessage('models_cannot_be_deleted_no_permissions').message;ModelBuilder.vent.trigger('modal:show',{type :'error',message :message
    });return;}
    message +=ADOBE.AM.MESSAGES.getMessage('delete_models').message;ModelBuilder.vent.trigger("modal:show",{message :message,type :'notice',buttons :[{text :"OK",className :"primary",onClick :function() {ModelBuilder.vent.trigger('modal:show',{type:'loading'});ModelBuilder.vent.trigger('models:bulkDelete',algomodels_permissions_valid);}
    },{text :"Cancel",onClick :function() {ModelBuilder.vent.trigger("modal:hide");}
    }]
    });},onShow:function() {ADOBE.AM.UTILS.HELPERS.bindContextHelp();},templateHelpers :function() {var that =this;return {can_show_create_trait_button :function() {return that.actions.can_show_create_trait_button;},can_show_create_button :function() {return that.actions.user_can_create_model;},can_show_delete_button :function() {return that.actions.user_can_delete_models;},can_show_edit_button :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_edit_model');}
};},initialize :function() {this.actions ={user_can_create_model :ModelBuilder.User.actions.can_create_models,user_can_delete_models :ModelBuilder.User.actions.can_delete_models
};}
});var algorithms =new ADOBE.AM.Algorithm.Collections.Algorithms();var PaginatedModels =new ADOBE.AM.Model.Collections.PaginatedModels();PaginatedModels.setParams({includeDataSources :true,includePermissions :true
});ModelBuilder.vent.on("models:bulkDelete",function(model_ids) {var $jqxhr =PaginatedModels.bulkDelete(model_ids);if (!$jqxhr) {ModelBuilder.vent.trigger('modal:show',{message:ADOBE.AM.MESSAGES.getMessage('unexpected_error').message});return;}
    $jqxhr
        .done(function() {ModelBuilder.vent.trigger('modal:show',{type:'success',message:'Models deleted!'});ModelRow.checked_models =[];PaginatedModels.pager();})
        .fail(function(resp) {var responseText =JSON.parse(resp.responseText),message =responseText.message,childMessages =responseText.childMessages;if (childMessages) {var errorList ='<ul>';_.each(childMessages,function() {errorList +='<li>'+ this +'</li>';});errorList +='</ul>';message +=errorList;}
            ModelBuilder.vent.trigger('modal:show',{message:message});});});var ModelRow =Backbone.Marionette.ItemView.extend({initialize :function() {_.bindAll(this,"deleteRow","checkBox","changeStatus");if (!ModelBuilder.User.actions.can_create_trait) {return false;}
    var modelPerms =this.model.relational.permissions;if (!modelPerms) {return false;}
    if (ModelBuilder.GateKeeper.checkPermissions([modelPerms],'can_create_trait_with_current_model')) {ModelRow.traitable_models.push(this.model.get('algoModelId'));}
},tagName :'tr',events :{'click img.delete':"deleteRow",'click span.result_checkbox':"checkBox",'click img.pause':"changeStatus",'click img.play':"changeStatus",'click a':'showLoading'},isChecked :function(id) {var index_of_id =_.indexOf(ModelRow.checked_models,id);return index_of_id >=0;},checkBox :function(event) {var id =this.model.get("algoModelId");if (this.isChecked(id)) {ModelRow.checked_models.splice(_.indexOf(ModelRow.checked_models,id),1);}
else {ModelRow.checked_models.push(id);}
    this.render();},deleteRow :function() {var self =this;ModelBuilder.vent.trigger("modal:show",{type :'notice',message :ADOBE.AM.MESSAGES.getMessage('delete_model').message,buttons :[{text :"OK",className :"primary",onClick :function() {ModelBuilder.vent.trigger("modal:show",{type:'loading',header :"Message",message:"Please wait..."});self.model
    .destroy()
    .done(function() {ModelBuilder.vent.trigger('modal:show',{type:'success',message:'Model deleted!'});})
    .fail(function(resp) {var responseText =null,message =ADOBE.AM.MESSAGES.getMessage('generic_error').message,errorList ="",childMessages =[];if (resp &&resp.responseText) {try {responseText =JSON.parse(resp.responseText);message =responseText.message;childMessages =responseText.childMessages;if (childMessages) {errorList ='<ul>';_.each(childMessages,function() {errorList +='<li>'+ this +'</li>';});errorList +='</ul>';message +=errorList;}
    }
    catch (__err__) {message ="Error.  Please try again.";}
    }
        PaginatedModels.pager();ModelBuilder.vent.trigger('modal:show',{type:'error',message:message});});}
},{text :"Cancel",className :"secondary",onClick :function() {ModelBuilder.vent.trigger("modal:hide");}
}]
});},changeStatus :function() {var self =this;var active_status =this.model.constructor.getActiveStatus();var status_to_save =this.model.get('status') ==active_status ?this.model.constructor.getInactiveStatus() :active_status;this.model
    .setStatus(status_to_save)
    .done(function() {self.render();})
    .fail(function() {ModelBuilder.vent.trigger('modal:show',{message :ADOBE.AM.MESSAGES.getMessage('model_status_error').message,height :'140px'});});},showLoading :function() {ModelBuilder.vent.trigger("modal:show",{type:'loading',header :"Message",message:"Please wait..."});},templateHelpers :function() {var self =this;return {can_show_pause_play_buttons :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_pause_play_model');},can_show_edit_button :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_edit_model');},can_show_clone_button :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_clone_model');},show_delete_button :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_delete_single_model');},formatTimestamp :function(ts) {var date ="-";if (ts !=undefined) {try {date =ADOBE.AM.UTILS.HELPERS.formatDate(ts,function(m,d,y) {return (m.charAt(1) ?m :"0"+ m.charAt(0)) + "/"+ (d.charAt(1) ?d :"0"+ d.charAt(0)) + "/"+ y;});}
catch (__ERR__) {ADOBE.AM.UTILS.LOGGER.log("ModelRow:templateHelpers:formatTimestamp: "+ __ERR__.message);}
}
    return date;},displayCheckbox :function() {return self.isChecked(this.algoModelId)
    ?'<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_checked.png" class="result_checkbox_enabled" />':'<img src="https://www.omniture-static.com/aui/1.0.2/images/ui/Checklist/checkbox_unchecked.png" class="result_checkbox_disabled" />';},getStatusImage :function() {if (this.status ==self.model.constructor.getActiveStatus()) {return '<img class="pause btn_action" src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Pause_Standard.png" alt="Pause" title="Pause" />';}
    return '<img class="play btn_action" src="'+ APP.state.vars.images.play_standard + '" alt="Play" title="Play" />';},displayStatus :function(status) {return self.model.constructor.getStatusName(status);},displayAlgorithm :function() {var algorithm =algorithms.get(this.algoTypeId);if (!_.isEmpty(algorithm)) {return algorithm.get('name');}
    return "";}
};},template :_.template(APP.templates.makeTemplate(['model_builder','page','list_models_table_row'],{"%%IMG_PLAY_STANDARD%%":APP.state.vars.images.play_standard,"%%IMG_CLONE_STANDARD%%":APP.state.vars.images.clone_standard
}))
},{checked_models :[],traitable_models :[]
});var ModelsTable =Backbone.Marionette.CompositeView.extend({template :_.template(APP.templates.model_builder.page.list_models_table),className :'content',tagName :'div',events :{"click th:not(:first-child)":"doSort","change th:first-child input":"checkbox"},onRender :function() {this.$table_col_headers =this.$el.find('th');ListPageApp.showTableLoading(false);},checkbox :function(event) {if ($(event.currentTarget).prop("checked")) {this.itemView.checked_models =this.collection.pluck("algoModelId");}
else {this.itemView.checked_models =[];}
    this.renderCollection();},doSort :function(event) {var $element =$(event.currentTarget);var clicked =$element.data('sortby');var descendingOrder =true;if ($element.hasClass("asc")) {this.$table_col_headers.removeClass("desc asc");$element.addClass("desc");}
else {descendingOrder =false;this.$table_col_headers.removeClass("desc asc");$element.addClass("asc");}
    this.collection.setParams({customParam1 :descendingOrder,sortField :clicked
    });this.collection.pager();ListPageApp.showTableLoading(true);},itemView :ModelRow,appendHtml :function(collectionView,itemView) {collectionView.$("#models_table tbody").append(itemView.el);}
});var modelTable =null;var showListPage =function() {var layout =new MainLayout();ModelBuilder.content_region.show(layout);var SearchField =new ADOBE.AM.Widget.Views.SearchField({template :_.template('<div id="model_search"></div>'),el :'.model_storage',collection :PaginatedModels,aui_args :{parent :'model_search'},beforeSearch :function() {ListPageApp.showTableLoading(true);ModelRow.traitable_models =[];},afterSearch :function() {ListPageApp.showTableLoading(false);if (ModelRow.traitable_models.length) {$('.toolbar .new_trait').show();}
}
});modelTable =new ModelsTable({collection :PaginatedModels});layout.models_list.show(modelTable);var ModelPagination =new ADOBE.AM.Widget.Views.PaginatedView({parent_element :$('#model_pagination'),collection :PaginatedModels,beforeEventClick :function() {ListPageApp.showTableLoading(true);},afterRender :function() {ListPageApp.showTableLoading(false);}
});ModelPagination.render();var algorithms_jqxhr =algorithms.fetch().fail(function() {ModelBuilder.vent.trigger("modal:show",{message :ADOBE.AM.MESSAGES.getMessage('model_list_page_problem').message
});});$.when(algorithms_jqxhr).then(SearchField.triggerSearch);};ListPageApp.showTableLoading =function(show) {var loading_obj =ADOBE.AM.LoadingOverlay.config({id :'model_table',parent_element :modelTable.$el,message :"Loading..."});if (show) {loading_obj.show();}
else {loading_obj.hide();}
};APP.listPageApp =ListPageApp;ListPageApp.showList =function() {showListPage();};return ListPageApp;},APP,AUI,ADOBE);ModelBuilder.module("ViewPageApp",function(ViewPageApp,ModelBuilder,Backbone,Marionette,$,_,APP,AUI,ADOBE) {'use strict';var MAX_REACH_AUDIENCE =APP.state.vars.globals.max_reach_audience_size;var MainLayout =Backbone.Marionette.Layout.extend({template :_.template(APP.templates.makeTemplate(['model_builder','page','view_page'],{"%%IMG_CLONE_STANDARD%%":APP.state.vars.images.clone_standard
})),model :ModelBuilder.LoadedModel.AlgoModel,initialize :function() {_.bindAll(this,'renderStatusButton');},regions :{toolbar :'.toolbar',basic_info :'.basic_info_view',graph :'.reach_accuracy_view',model_processing_history :'.model_processing_history',influential_traits :'.influential_traits',traits_using_model_name :'.traits_using_model_name'},events :{"click li.new_model":"newModel","click li.edit_model":"editModel","click li.clone_model":"cloneModel","click li.delete_model":"deleteModel","click li.status":"changeStatus"},newModel :function() {ModelBuilder.vent.trigger("new:show");},editModel :function() {ModelBuilder.vent.trigger("edit:show",ModelBuilder.LoadedModel.AlgoModel.get("algoModelId"));},cloneModel :function() {ModelBuilder.vent.trigger("clone:show",ModelBuilder.LoadedModel.AlgoModel.get("algoModelId"));},deleteModel :function() {ModelBuilder.vent.trigger("modal:show",{type :'notice',message :ADOBE.AM.MESSAGES.getMessage('delete_model').message,buttons :[{text :"OK",className :"primary",onClick :function() {ModelBuilder.vent.trigger("modal:show",{type:'loading',header :"Message",message:"Please wait..."});ModelBuilder.LoadedModel.AlgoModel
    .destroy()
    .done(function() {ModelBuilder.vent.trigger('list:show');ModelBuilder.vent.trigger('modal:show',{type:'success',message:'Model deleted!'});})
    .fail(function(resp) {var responseText =null,message =ADOBE.AM.MESSAGES.getMessage('generic_error').message,errorList ="",childMessages =[];if (resp &&resp.responseText) {try {responseText =JSON.parse(resp.responseText);message =responseText.message;childMessages =responseText.childMessages;if (childMessages) {errorList ='<ul>';_.each(childMessages,function() {errorList +='<li>'+ this +'</li>';});errorList +='</ul>';message +=errorList;}
    }
    catch (__err__) {message ="Error.  Please try again.";}
    }
        ModelBuilder.vent.trigger("modal:show",{type:'error',message:message
        });});}
},{text :"Cancel",className :"secondary",onClick :function() {ModelBuilder.vent.trigger("modal:hide");}
}]
});},changeStatus :function(event) {var $elem =$(event.currentTarget);var nodeName =$elem.prop('nodeName');var self =this;if (nodeName &&nodeName.toUpperCase() !=="IMG") {$elem =$elem.find('img');}
    var status_to_save =$elem.data("status");if (typeof status_to_save ==="undefined") {ADOBE.AM.UTILS.LOGGER.log("MainLayout:changeStatus: could not find data-status attribute");return;}
    ModelBuilder.LoadedModel.AlgoModel
        .setStatus(status_to_save)
        .done(self.renderStatusButton)
        .fail(function() {ModelBuilder.vent.trigger('modal:show',{message :ADOBE.AM.MESSAGES.getMessage('model_status_error').message,height :'140px'});});},templateHelpers :{getStatusImage :function(s) {var status =s ||this.status;var inactive ='<img src="https://www.omniture-static.com/aui/1.0.2/images/icons/12x12/Pause_Standard.png" alt="Pause" title="Pause" class="pause" data-status="'+ ModelBuilder.LoadedModel.AlgoModel.constructor.getInactiveStatus()
    + '" />Deactivate';var active ='<img src="'+ APP.state.vars.images.play_standard
    + '" data-status="'+ ModelBuilder.LoadedModel.AlgoModel.constructor.getActiveStatus()
    + '" class="play" title="Play" alt="Play" />Activate';if (status ===ModelBuilder.LoadedModel.AlgoModel.constructor.getActiveStatus()) {return inactive;}
    return active;},getModelName :function() {var model_name =ModelBuilder.LoadedModel.AlgoModel.get('name');return model_name ||"";},can_show_pause_play_buttons :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_pause_play_model');},can_show_create_button :function() {return ModelBuilder.User.actions.can_create_models;},show_delete_button :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_delete_single_model');},can_show_edit_button :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_edit_model');},can_show_clone_button :function() {var mp =new ADOBE.AM.Model.Models.ModelPermission({permissions :this.permissions
});return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions,mp],'can_clone_model');}
},renderStatusButton :function() {var $elem =this.$el.find('li.status');var html ="";html =this.templateHelpers.getStatusImage(ModelBuilder.LoadedModel.AlgoModel.get("status"));$elem.html(html);},onShow :function() {ADOBE.AM.UTILS.HELPERS.bindContextHelp();}
});var plotGraph =function(data) {var html ="";if (data instanceof Array) {if (data.length ===0) {if (!ModelBuilder.LoadedModel.AlgoModel.hasBeenRunSuccessfullyOnce()) {html =APP.templates.graph_not_run;}
else if (ModelBuilder.LoadedModel.AlgoModel.didLastRunHaveNoData()) {html =APP.templates.graph_no_data;} else {html =APP.templates.makeTemplate('graph_reach_exceeded',{'%%NUM%%':ADOBE.AM.UTILS.HELPERS.formatNumber(MAX_REACH_AUDIENCE)
});}
    $('#model_graph_container').html(html);return;}
} else {$('#model_graph_container').html(APP.templates.graph_no_data);return;}
    var series =[];var max =data.length,datum;for (var i =0;i < max;i++) {datum =data[i];series.push([datum.AccuracyValue,datum.ReachValue]);}
    var ticks =(function() {var arr =[1];var pow =1;var start =1;var num =start;while (num < MAX_REACH_AUDIENCE) {arr.push(num);num =Math.pow(10,pow++);}
        arr.push(num);return arr;}());$.plot('#model_graph_container',[{label:'Reach',data:series}],{yaxis:{ticks:ticks,transform:function (v) {if (v < 1) {v =1;}
        return Math.log(v);},inverseTransform:function (v) {return Math.exp(v);},alignTicksWithAxis :0,tickFormatter:function(val) {var label =ADOBE.AM.UTILS.HELPERS.formatNumber(val);return label;}
    },crosshair:{mode:"x"},series:{lines:{show:true },points:{show:false }
    }
    });};var BasicInfo =Backbone.Marionette.ItemView.extend({className :'widget',model :ModelBuilder.LoadedModel.AlgoModel,template :_.template(APP.templates.model_builder.page.model_basic_information),initialize :function() {var self =this;_.bindAll(this,'render');ModelBuilder.vent.bindTo("model:loaded",function() {self.render();});},templateHelpers :{displayValue :function(val) {if (typeof val !=="undefined") {return val;}
    ADOBE.AM.UTILS.LOGGER.log('BasicInfo:templateHelpers:The model property trying to be displayed is undefined');return "";},formatTimestamp :function(ts) {var date ="-";if (ts) {try {date =ADOBE.AM.UTILS.HELPERS.formatDate(ts,function(m,d,y) {return (m[1] ?m :"0"+ m[0]) + "/"+ (d[1] ?d :"0"+ d[0]) + "/"+ y;});}
catch (__ERR__) {ADOBE.AM.UTILS.LOGGER.log("BasicInfo:templateHelpers:formatTimestamp: "+ __ERR__.message);}
    return date;}
    return ADOBE.AM.MESSAGES.getMessage('model_has_not_run').message;},getBaselineName :function() {return this.baseline.name;},getBaselineType :function() {return ADOBE.AM.UTILS.HELPERS.isTrait(this.baselineTraitType) ?'trait':'segment';}
},render :function() {var modelData =this.model ?this.model.toJSON() :null;_.extend(modelData,this.templateHelpers,this.model.getRelationalData());$(this.el).html(this.template(modelData));return this;}
});var ReachAccuracyGraph =Backbone.Marionette.ItemView.extend({className :'widget',model :ModelBuilder.LoadedModel.AlgoModel,template :_.template(APP.templates.model_builder.page.model_reach_accuracy_graph),initialize :function() {var self =this;_.bindAll(this,'render');ModelBuilder.vent.bindTo("model:loaded",function() {self.render();});},onShow :function() {plotGraph(this.model.getRunStats().toJSON());},render :function() {$(this.el).html(this.template(null));return true;}
});var ModelProcessingHistoryRow =Backbone.Marionette.ItemView.extend({template :_.template(APP.templates.model_builder.page.model_processing_history_row),tagName :"tr",render :function() {var timestamp,meridien,date,dataGenerated;try {timestamp =this.model.get("modelRunTimestamp");dataGenerated =this.model.get('modelRunStatus') ==='SUCCEEDED'?'Yes':'No';date =ADOBE.AM.UTILS.HELPERS.formatDate(timestamp,function(m,d,y,h,min) {if (h > 12) {h =h - 12;meridien ='PM';} else {meridien ='AM';}
    return (m[1] ?m :"0"+ m[0]) + "/"+ (d[1] ?d :"0"+ d[0]) + "/"+ y + ' &nbsp; '+ h + ':'+ (min[1] ?min :"0"+ min[0]) + ' '+ meridien;});this.$el.append(this.template({datetime:date,dataGenerated:dataGenerated
}));}
catch(__err__) {ADOBE.AM.UTILS.LOGGER.log("ModelProcessingHistRow threw an error: "+ __err__.message);}
    return this;}
});var ModelProcessingHistory =Backbone.Marionette.CompositeView.extend({className :'content',template :_.template(APP.templates.model_builder.page.model_processing_history),tagName :'div',noData :false,algoModel :ModelBuilder.LoadedModel.AlgoModel,limit :10,initialize :function() {if (this.collection.length ===0) {this.noData =true;}
},onRender :function() {this.$table_col_headers =this.$el.find('th');},onShow :function() {if (this.noData) {if (this.algoModel.didLastRunHaveNoData()) {this.template =_.template(APP.templates.model_builder.page.model_processing_history_nodata);}
else {this.template =_.template(APP.templates.model_builder.page.model_processing_history_not_run);}
    this.$el.find('.history_list').append(this.template());}
},itemView :ModelProcessingHistoryRow,appendHtml :function(collectionView,itemView,index) {if (index < this.limit) {collectionView.$(".history_list").append(itemView.el);}
}
});var TraitRow =Backbone.Marionette.ItemView.extend({tagName :'tr',template :_.template(APP.templates.model_builder.page.influential_traits_row)
});var displayTraitModal =function(event) {event.preventDefault();var sid =$(event.target).data('sid');var modal =null;var trait =this.collection.where({sid:sid })[0];modal =new AUI.Dialog({header :trait.get('name'),content :'<p>Loading...</p>',width :'580px',height :'400px',center :true
}).render();window.modal =modal;modal.show();event.stopImmediatePropagation();var attrs =$.extend({sid:sid },trait.toJSON());var trait_model =new ADOBE.AM.Trait.Models.Trait(attrs);var $jqxhr =trait_model.fetch({data :{includeMetrics :true
}
});var $deferreds =$jqxhr.pipe(function() {var $calls =[];$calls.push(trait_model.getFolder());if (trait_model.get("categoryId")) {$calls.push(trait_model.getCategory());}
    if (trait_model.get("type")) {$calls.push(trait_model.getType());}
    if (trait_model.get("dataSourceId")) {$calls.push(trait_model.getDataSource());}
    return $.when.apply(this,$calls);});$deferreds.done(function() {var datasource ="";var folder ="";var category ="";var type ="";var dataSourceId =trait_model.get("dataSourceId");var folderId =trait_model.get("folderId");var categoryId =trait_model.get("categoryId");var typeId =trait_model.get("type");var trait_name =trait_model.constructor.getTraitTypeName(trait_model.get("traitType"));if (folderId) {folder =trait_model.getFolder2().get("path");}
    if (categoryId) {category =trait_model.get("categoryModel").get("name");}
    if (typeId) {type =trait_model.get("typeModel").get("name");}
    if (dataSourceId) {datasource =trait_model.getDataSource2().get("name");}
    var compiled_template =_.template(APP.templates.segment_builder_widget.trait_modal,{t :trait_model,category :category,type :trait_name,folder :folder,datasource :datasource
    });modal.set('content',compiled_template);});};var InfluentialTraits =Backbone.Marionette.CompositeView.extend({template :_.template(APP.templates.model_builder.page.influential_traits),className :'content',tagName :'div',algoModel :ModelBuilder.LoadedModel.AlgoModel,events :{"click button.primary":"viewAllTraits","click th":"doSort","click td.sid a, td.name a":"displayTraitModal"},viewAllTraits :function() {if (this.noData) {return;}
    ModelBuilder.vent.trigger("modal:influential_traits:show");},noData :false,initialize :function() {this.collection.comparator =function(a,b) {if (a.get('weight') ===b.get('weight')) {return 0;}
else if (a.get('weight') > b.get('weight')) {return -1;}
else {return 1;}
};this.collection.sort();if (this.collection.length ===0) {this.noData =true;}
},onShow :function() {},showEmptyTableRow :function() {if (this.algoModel.didLastRunHaveNoData()) {this.template =_.template(APP.templates.model_builder.page.influential_traits_nodata);}
else {this.template =_.template(APP.templates.model_builder.page.influential_traits_not_run);}
    this.$el.find('tbody').append(this.template());},disableButton :function() {this.$el.find('button.primary').addClass('disabled');},onRender :function() {this.$table_col_headers =this.$el.find('th');if (this.noData) {this.showEmptyTableRow();this.disableButton();}
},doSort :function(event) {var $element =$(event.currentTarget);var clicked =$element.data('sortby');var comparator_func;if ($element.hasClass("asc")) {this.$table_col_headers.removeClass("desc asc");$element.addClass("desc");comparator_func =function(a,b) {if (a.get(clicked) ===b.get(clicked)) {return 0;}
else if (a.get(clicked) < b.get(clicked)) {return -1;}
else {return 1;}
};}
else {this.$table_col_headers.removeClass("desc asc");$element.addClass("asc");comparator_func =function(a,b) {if (a.get(clicked) ===b.get(clicked)) {return 0;}
else if (a.get(clicked) < b.get(clicked)) {return 1;}
else {return -1;}
};}
    this.collection.comparator =comparator_func;this.collection.sort();},itemView :TraitRow,appendHtml :function(collectionView,itemView) {collectionView.$(".influential_trait_list").append(itemView.el);},displayTraitModal :function(event) {displayTraitModal.call(this,event);}
});var TraitsUsingModelNameRow =Backbone.Marionette.ItemView.extend({tagName :'tr',template :_.template(APP.templates.model_builder.page.traits_using_model_name_row),templateHelpers :{displayReach :function() {var value ="-";if (this.thresholdType ===ADOBE.AM.Model.Models.RunStat.ReachThresholdName) {value =ADOBE.AM.UTILS.HELPERS.formatNumber(this.accuracy);}
    return value;},displayAccuracy :function() {var value ="-";if (this.thresholdType ===ADOBE.AM.Model.Models.RunStat.AccuracyThresholdName) {value =this.accuracy;}
    return value;}
}
});var TraitsUsingModelName =Backbone.Marionette.CompositeView.extend({template :_.template(APP.templates.model_builder.page.traits_using_model_name),className :'content',tagName :'div',events :{"click button.primary":"createTrait","click th":"doSort","click td.sid a, td.name a":"displayTraitModal"},noData :false,initialize :function() {if (this.collection.length ===0) {this.noData =true;}
},createTrait :function() {if (!ModelBuilder.LoadedModel.AlgoModel.wasLastRunSuccessfulWithData()) {ModelBuilder.vent.trigger("modal:show",{message :ADOBE.AM.MESSAGES.getMessage('cannot_create_trait_from_model').message,height :'180px'});return;}
    document.location =APP.state.vars.urls.algotraits_page + '#new/model/'+ ModelBuilder.LoadedModel.AlgoModel.get('algoModelId');return;},onRender :function() {this.$table_col_headers =this.$el.find('th');},doSort :function(event) {var self =this,$element =$(event.currentTarget),clicked =$element.data('sortby'),comparator_func =null;if (clicked ==='reach'||clicked ==='accuracy') {var mode =clicked.toUpperCase();if ($element.hasClass("asc")) {self.$table_col_headers.removeClass("desc asc");$element.addClass("desc");} else {self.$table_col_headers.removeClass("desc asc");$element.addClass("asc");}
    comparator_func =function(a,b) {var aVal =0,bVal =0;aVal =a.get('thresholdType') ===mode ?a.get('accuracy') :-1;bVal =b.get('thresholdType') ===mode ?b.get('accuracy') :-1;if ($element.hasClass("desc")) {if (aVal ===bVal) {return 0;}
    else if (aVal < bVal) {return -1;}
    else {return 1;}
    } else {if (aVal ===bVal) {return 0;}
    else if (aVal < bVal) {return 1;}
    else {return -1;}
    }
    };} else {if ($element.hasClass("asc")) {this.$table_col_headers.removeClass("desc asc");$element.addClass("desc");comparator_func =ADOBE.AM.UTILS.HELPERS.comparator(clicked,'desc');}
else {this.$table_col_headers.removeClass("desc asc");$element.addClass("asc");comparator_func =ADOBE.AM.UTILS.HELPERS.comparator(clicked,'asc');}
}
    this.collection.comparator =comparator_func;this.collection.sort();},itemView :TraitsUsingModelNameRow,appendHtml :function(collectionView,itemView) {collectionView.$("tbody.traits_using_model_name").append(itemView.el);},displayTraitModal :function(event) {displayTraitModal.call(this,event);},onShow :function() {if (this.noData) {var template =_.template(APP.templates.model_builder.page.traits_using_model_name_empty_row);this.$el.find('tbody.traits_using_model_name').html(template({}));}
},templateHelpers :{canCreateTrait :function() {return ModelBuilder.User.actions.can_create_trait_with_current_model;}
}
});var showViewPage =function(id) {var algo_model =ModelBuilder.LoadedModel.AlgoModel;var $jqxhr_loaded_basic_model =algo_model
    .set({id :id},{silent :true})
    .fetch();var $jqxhr_loaded_model =$jqxhr_loaded_basic_model
    .pipe(function() {var run_stats_def =$.Deferred();algo_model
        .loadRunStats()
        .always(run_stats_def.resolve)
        .fail(function() {algo_model.relational.run_stats.reset();});var model_history_def =$.Deferred();algo_model
        .loadModelHistory()
        .always(model_history_def.resolve)
        .fail(function() {algo_model.relational.processing_history.reset();});return $.when(run_stats_def,model_history_def,algo_model.loadAlgorithm(),algo_model.loadTraitsUsingModelName(),algo_model.loadInfluentialTraits({page :0,pageSize :10,sortField :'rank',descending :false
    }),algo_model.loadBaseline(algo_model.get('baselineTraitType')));});$.when($jqxhr_loaded_model)
    .then(function() {var layout =new MainLayout();ModelBuilder.content_region.show(layout);layout.basic_info.show(new BasicInfo());layout.graph.show(new ReachAccuracyGraph());var history_collection =algo_model.getModelHistory();history_collection.comparator =function(a,b) {var a_time =a.get("modelRunTimestamp");var b_time =b.get("modelRunTimestamp");if (b_time < a_time) {return -1;}
    else if (b_time > a_time) {return 1;}
        return 0;};history_collection.sort();layout.model_processing_history.show(new ModelProcessingHistory({collection :history_collection
    }));layout.influential_traits.show(new InfluentialTraits({collection :new Backbone.Collection(algo_model.getInfluentialTraits().toJSON())
    }));if (algo_model.wasLastRunSuccessfulWithData()
        &&ModelBuilder.User.actions.can_create_trait
        &&ModelBuilder.GateKeeper.checkPermissions([algo_model.relational.permissions],'can_create_trait_with_current_model'))
    {ModelBuilder.User.actions.can_create_trait_with_current_model =true;}
        layout.traits_using_model_name.show(new TraitsUsingModelName({collection :algo_model.getTraitsUsingModelName()
        }));window.scrollTo(0,0);ModelBuilder.vent.trigger('modal:hide');});};ModelBuilder.vent.bindTo("model:delete:failed",function() {ModelBuilder.vent.trigger("modal:show",{message :ADOBE.AM.MESSAGES.getMessage('delete_model_error').message
});});ViewPageApp.showView =function(id) {showViewPage(id);};},APP,AUI,ADOBE);ModelBuilder.module("CreateEditApp",function(CreateEditApp,ModelBuilder,Backbone,Marionette,$,_,APP,AUI,ADOBE,LoadedModel) {var showTitle =null;var showAccordions =function() {};var MainLayout =Backbone.Marionette.Layout.extend({tagName:'form',id:'form_save_model',template :_.template(APP.templates.model_builder.page.create_edit),regions :{accordion_bi :'#basic_info_accordion',accordion_conf :'#configuration_accordion'},events :{"click button.save":"eventSave","click button.cancel":"eventCancel"},eventSave :function(event) {event.preventDefault();var theForm =$(event.target).closest('form')[0],post_data =null,selected_datasources ={},algoModel =ModelBuilder.LoadedModel.AlgoModel;if (CreateEditApp.Mode =='edit') {selected_datasources =$.map(theForm.dataSources.value.split(','),function(val,idx){return parseInt(val,10);});} else {selected_datasources =_.map($('td input:checkbox:checked',theForm),function(datasrc,key) {return parseInt(datasrc.value,10);});}
    var validator ={required:{name:['notEmpty','Name'],dataSources:['notEmpty','Data Sources'],sid:['notEmpty','Trait or Segment']
    }
    };post_data =$.extend($('#form_save_model').serializeJSON(),{validator:validator,dataSources:selected_datasources
    });algoModel.set(post_data,{silent:true });if (!algoModel.isValid()) {var message ='<ul>\n'+ '<li>'+ algoModel.validationErrors.join('</li>\n<li>')
        + '</li>\n</ul>\n';ModelBuilder.vent.trigger("modal:show",{type:'error',message:message });return false;}
    algoModel.unset('validator',{silent :true });algoModel.save()
        .done(function() {var modal =new ADOBE.AM.AlertModal({type:'success',message:'Model saved.'});ModelBuilder.vent.trigger('view:show',algoModel.get('algoModelId'));})
        .fail(function(resp) {ADOBE.AM.AlertModal({message:ADOBE.AM.MESSAGES.getAPIErrorMessage(resp) });});},eventCancel :function() {$('#modelbuilder').removeClass();ModelBuilder.vent.trigger("list:show");}
});var algorithms =new ADOBE.AM.Algorithm.Collections.Algorithms();var datasources =new ADOBE.AM.DataSource.Collections.DataSourcesForModeling();var BasicInfoView =Backbone.Marionette.ItemView.extend({className:'acc_panel',template :_.template(APP.templates.model_builder.basic_info_accordion),model:ModelBuilder.LoadedModel.AlgoModel,templateHelpers :{isSelected :function(optionVal) {if (ModelBuilder.LoadedModel.AlgoModel.get('status') ==optionVal) {return 'selected="selected"';}
    return "";}
},onShow:function() {ADOBE.AM.UTILS.HELPERS.bindContextHelp();}
});var ConfLayout =Backbone.Marionette.Layout.extend({className:"conf_layout",template:_.template(APP.templates.model_builder.configuration_accordion),regions:{basic_info :".trait_or_segment",lookback_and_algorithms :".lookback_and_algorithms",datasources :".datasources"}
});var TraitOrSegmentView =Backbone.Marionette.ItemView.extend({className:'acc_panel',template :_.template(APP.templates.model_builder.page.trait_or_segment),initialize :function() {var self =this;_.bindAll(this,'render');ModelBuilder.vent.bindTo("model:trait_or_segment:populated",function(loadedModel) {self.model =loadedModel.TraitOrSegmentModel;self.model.set({c_folderPath:loadedModel.FolderPath });self.render();plotGraph(loadedModel.GraphData);$('#configuration_accordion').height('auto');self.$('.traitsegment_inner').height(280);self.$('#traitsegment_wrapper').removeClass().addClass(loadedModel.BaseType).slideDown('slow');$('input[name=sid]').val(self.model.get('sid'));});},events :{'click button#browse_all_traits':'browseAllTraits','click button#browse_all_segments':'browseAllSegments'},browseAllTraits:function(event) {event.preventDefault();ModelBuilder.vent.trigger("modal:traits:show");},browseAllSegments:function(event) {event.preventDefault();ModelBuilder.vent.trigger("modal:segments:show");},model:ModelBuilder.LoadedModel.AlgoModel,templateHelpers :{can_show_view_traits :function() {return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions],'can_view_traits');},can_show_view_segments :function() {return ModelBuilder.GateKeeper.checkPermissions([ModelBuilder.User.permissions],'can_view_segments');}
},render:function() {var modelData =this.model ?this.model.toJSON() :null;_.extend(modelData,this.templateHelpers);$(this.el).html(this.template(modelData));return this;}
});var AlgorithmRow =Backbone.Marionette.ItemView.extend({template:_.template(APP.templates.model_builder.page.algorithm_row),tagName:'div',className:'algorithms_list'});var LookbackAlgorithmsCreateView =Backbone.Marionette.CompositeView.extend({className:'acc_panel',template :_.template(APP.templates.model_builder.page.lookback_algorithms_create),tagName :'div',itemView :AlgorithmRow,appendHtml :function(collectionView,itemView) {collectionView.$("#algorithms").append(itemView.el);},onRender:function() {if (this.collection.length ==1) {this.$el.find(".algorithms_list").find('input').attr({checked:'checked'});}
},initialize :function() {_.bindAll(this,'render');var self =this;ModelBuilder.vent.bindTo("model:loaded",function(loadedModel) {self.template(ModelBuilder.LoadedModel.AlgoModel.toJSON());self.render();});}
});var LookbackAlgorithmsReadOnlyView =Backbone.Marionette.ItemView.extend({className:'acc_panel',template :_.template(APP.templates.model_builder.page.lookback_algorithms_readonly),tagName :'div',templateHelpers :{getAlgorithmName :function(algoTypeId) {var algos =algorithms.where({algoTypeId :algoTypeId
});if (algos.length > 0) {return algos[0].get("name");}
    return "";}
},model:ModelBuilder.LoadedModel.AlgoModel
});var DataSourceRow =Backbone.Marionette.ItemView.extend({template :_.template(APP.templates.model_builder.page.datasource_create_row),tagName :"tr",initialize :function() {_.bindAll(this,'checkbox');},events :{'click td.checkbox':'checkbox'},checkbox :function() {this.$('td.checkbox input:checkbox').attr('checked',function() {return $(this).attr('checked') !='checked'?true :false;});this.$('td.checkbox div').toggleClass('checked');},templateHelpers :{isFirstParty :function(pid) {return pid ==ADOBE.AM.pid;}
}
});var DataSourcesCreateView =Backbone.Marionette.CompositeView.extend({className:'acc_panel',template :_.template(APP.templates.model_builder.page.datasources_create),tagName :"div",itemView :DataSourceRow,appendHtml :function(collectionView,itemView) {collectionView.$("tbody").append(itemView.el);},events :{"click th.sortable":"doSort","click th.checkbox":"checkAll"},onRender :function() {this.$table_col_headers =this.$el.find('th');},doSort :function(event) {var $element =$(event.currentTarget);var clicked =$element.data('sortby');var comparator_func;if ($element.hasClass("asc")) {this.$table_col_headers.removeClass("desc asc");$element.addClass("desc");comparator_func =function(a,b) {if (clicked =='first_third') {if (a.get('pid') ==ADOBE.AM.pid) {return -1;} else {return 1;}
}
    if (a.get(clicked) ==b.get(clicked)) {return 0;}
    else if (a.get(clicked) < b.get(clicked)) {return -1;}
    else {return 1;}
};}
else {this.$table_col_headers.removeClass("desc asc");$element.addClass("asc");comparator_func =function(a,b) {if (clicked =='first_third') {if (a.get('pid') ==ADOBE.AM.pid) {return 1;} else {return -1;}
}
    if (a.get(clicked) ==b.get(clicked)) {return 0;}
    else if (a.get(clicked) < b.get(clicked)) {return 1;}
    else {return -1;}
};}
    this.collection.comparator =comparator_func;this.collection.sort();},checkAll:function() {var $checkAllCheckbox =this.$('th.checkbox input[type=checkbox]'),table =$checkAllCheckbox.closest('table'),checkStatus =$checkAllCheckbox.is(':checked');$('.checkbox input[type=checkbox]',table).prop('checked',!checkStatus);$('.checkbox div',table).toggleClass('checked',!checkStatus);}
});var DataSourceReadyOnlyRow =Backbone.Marionette.ItemView.extend({tagName :'tr',template :_.template(APP.templates.model_builder.page.datasource_readonly_row),templateHelpers :{isFirstParty :function(pid) {return pid ==ADOBE.AM.pid;}
}
});var DataSourcesReadOnlyView =Backbone.Marionette.CompositeView.extend({className:'acc_panel',template :_.template(APP.templates.model_builder.page.datasources_readonly),tagName :"div",itemView :DataSourceReadyOnlyRow,appendHtml :function(collectionView,itemView) {collectionView.$("tbody").append(itemView.el);}
});var plotGraph =function(dataRaw) {if(dataRaw.metrics !==Object(dataRaw.metrics) ||Object.keys(dataRaw.metrics).length ===0){$('#cloudVizChart').addClass('no_results').html(DEMDEX.UTILS.noDataMsg);return;}
    var dataSegmentFormat =[{'Real-time':'instantUniques'},{'Total':'totalUniques'}];var dataTraitFormat =[{'Uniques':'uniques'}];var data =dataRaw.metrics,dataFormat;var cloudvizOptions ={parent :d3.select("#cloudVizChart").node(),filled :false,autoResize :true,interactive :true
    };if (ModelBuilder.LoadedModel.BaseType =='trait') {dataFormat =dataTraitFormat;}
    else {dataFormat =dataSegmentFormat;cloudvizOptions.normalized =true;}
    var dataParsed =ADOBE.AM.UTILS.HELPERS.parseDataFormatForCloudViz(dataRaw.metrics,dataFormat);var dataGraph =ADOBE.AM.UTILS.HELPERS.transformDataToCloudViz(dataParsed);cloudvizOptions.data =dataGraph;var chart =cloudViz.line(cloudvizOptions);chart.on('mouseover',function() {this.label(function(d) {return ADOBE.AM.UTILS.HELPERS.formatTimestampToUTC(d,'MM/DD/YYYY');});});setTimeout(function() {chart.render();},0);};ModelBuilder.vent.bindTo("modal:trait_or_segment:selected",function(selected_base) {var loadedModel =ModelBuilder.LoadedModel.TraitOrSegmentModel =selected_base;var baseType =ModelBuilder.LoadedModel.BaseType =ADOBE.AM.UTILS.HELPERS.isTrait(selected_base.get("traitType")) ?'trait':'segment';var graph_jqxhr,folder_jqxhr,folder_prefix,folder_str,url;var latestDateInUTC =moment(this.latestDate).utc().hours(0).minutes(0).minutes(0).seconds(0).milliseconds(0);var latestDateInUTCMS =latestDateInUTC.valueOf();if (baseType =='trait') {url =ADOBE.AM.API.TRAITS.trend.sid.url(loadedModel.get('sid'),latestDateInUTC.subtract('days',90).valueOf(),latestDateInUTCMS,'1D');graph_jqxhr =$.getJSON(url);folder_prefix ='traits';folder_str ='folderId';} else {url =ADOBE.AM.API.SEGMENTS.trend.sid.url(loadedModel.get('sid'),latestDateInUTC.subtract('days',90).valueOf(),latestDateInUTCMS,'1D');graph_jqxhr =$.getJSON(url);folder_prefix ='segments';folder_str ='folderId';}
    folder_jqxhr =$.getJSON(ADOBE.AM.API.FOLDERS.folder.url(folder_prefix,loadedModel.get(folder_str)));$.when(graph_jqxhr,folder_jqxhr).then(function(graphArgs,folderArgs) {ModelBuilder.LoadedModel.GraphData =graphArgs[0];ModelBuilder.LoadedModel.FolderPath =folderArgs[0].path;ModelBuilder.vent.trigger("modal:traits:hide modal:segments:hide");ModelBuilder.vent.trigger("model:trait_or_segment:populated",ModelBuilder.LoadedModel);},function(err) {$('#graph_container').html(DEMDEX.UTILS.noDataMsg);}
    );});ModelBuilder.vent.bind("new:show",function() {ModelBuilder.vent.trigger("model:new");});CreateEditApp.showNew =function() {CreateEditApp.Mode ='create';CreateEditApp.showCreateEditPage();};CreateEditApp.showNewWithSegment =function(sid) {CreateEditApp.Mode ='createWithSeg';CreateEditApp.showCreateEditPage(sid);};CreateEditApp.showNewWithTrait =function(sid) {CreateEditApp.Mode ='createWithTrait';CreateEditApp.showCreateEditPage(sid);};CreateEditApp.showEdit =function(mid) {CreateEditApp.Mode ='edit';CreateEditApp.showCreateEditPage(mid);};CreateEditApp.showClone =function(mid) {CreateEditApp.Mode ='clone';CreateEditApp.showCreateEditPage(mid);};CreateEditApp.showCreateEditPage =function(mid) {var layout =new MainLayout(),confLayout =new ConfLayout();ModelBuilder.content_region.show(layout);var acc_basic =new ADOBE.AM.Widget.Views.Accordion({title :'Basic Information<span class="context-help" title="Help" data-id="r_model_basic.html">&nbsp;</span>',parent :'basic_info_accordion',aui_args :{panel :'basic_info_accordion'}
});var acc_configuration =new ADOBE.AM.Widget.Views.Accordion({title :'Configuration<span class="context-help" title="Help" data-id="r_model_configuration.html">&nbsp;</span>',parent :'configuration_accordion',aui_args :{panel :'configuration_accordion'}
});acc_basic.render();acc_configuration.panel.set('expanded',false);acc_configuration.render();layout.accordion_conf.show(confLayout);confLayout.basic_info.show(new TraitOrSegmentView());CreateEditApp.Layout =layout;var algorithms_jqxhr =algorithms.fetch(),datasources_jqxhr =datasources.fetch();if (CreateEditApp.Mode =='edit'||CreateEditApp.Mode =='clone') {$('#modelbuilder').removeClass().addClass(function(){return CreateEditApp.Mode =='edit'?'mode_edit':'mode_clone';});var algoModel_jqxhr =ModelBuilder.LoadedModel.AlgoModel
    .clear({silent:true })
    .set({id:mid },{silent:true })
    .fetch()
    .done(function(resp) {var baseType =ADOBE.AM.UTILS.HELPERS.isTrait(resp.baselineTraitType) ?'trait':'segment',baseline =null;if (baseType =='trait') {baseline =new ADOBE.AM.Trait.Models.Trait({sid:resp.sid
    });} else {baseline =new ADOBE.AM.Segment.Models.Segment({sid:resp.sid });}
        baseline
            .fetch({data :{includeMetrics :true
            }
            })
            .done(function() {ModelBuilder.vent.trigger("modal:trait_or_segment:selected",baseline);});if (CreateEditApp.Mode =='clone') {ModelBuilder.LoadedModel.AlgoModel.set({id:null,name:'Copy of '+ ModelBuilder.LoadedModel.AlgoModel.previousAttributes().name
        });}
        layout.accordion_bi.show(new BasicInfoView());confLayout.lookback_and_algorithms.show(new LookbackAlgorithmsReadOnlyView());ModelBuilder.vent.trigger("model:loaded");});$.when(algoModel_jqxhr,algorithms_jqxhr,datasources_jqxhr).then(function(algoModelArgs,algorithmsArgs,dsArgs) {var datasources_models =datasources.filter(function(ds) {return _.indexOf(ModelBuilder.LoadedModel.AlgoModel.get('dataSources'),ds.get('dataSourceId')) >=0;});var new_datasources =new ADOBE.AM.DataSource.Collections.DataSources(datasources_models);if (CreateEditApp.Mode =='edit') {confLayout.lookback_and_algorithms.show(new LookbackAlgorithmsReadOnlyView({collection :algorithms }));confLayout.datasources.show(new DataSourcesReadOnlyView({collection:new_datasources }));} else {confLayout.lookback_and_algorithms.show(new LookbackAlgorithmsCreateView({collection :algorithms }));confLayout.datasources.show(new DataSourcesCreateView({collection:new_datasources }));}
    ModelBuilder.vent.trigger("create_edit_page:show");window.scrollTo(0,0);ModelBuilder.vent.trigger('modal:hide');});} else if (CreateEditApp.Mode =='create') {ModelBuilder.LoadedModel.AlgoModel.clear({silent:true });$('#modelbuilder').removeClass().addClass('mode_create');layout.accordion_bi.show(new BasicInfoView());$.when(algorithms_jqxhr,datasources_jqxhr).then(function() {confLayout.lookback_and_algorithms.show(new LookbackAlgorithmsCreateView({collection :algorithms }));confLayout.datasources.show(new DataSourcesCreateView({collection :datasources }));ModelBuilder.vent.trigger("create_edit_page:show");});} else if (CreateEditApp.Mode =='createWithSeg'||CreateEditApp.Mode =='createWithTrait') {ModelBuilder.LoadedModel.AlgoModel.clear({silent:true });$('#modelbuilder').removeClass().addClass('mode_create');layout.accordion_bi.show(new BasicInfoView());var url,sid =mid;if (CreateEditApp.Mode =='createWithSeg') {url =ADOBE.AM.API.SEGMENTS.segment.url(sid);} else {url =ADOBE.AM.API.TRAITS.trait.url(sid);}
    $.getJSON(url)
        .done(function(attrs) {attrs.idAttribute ='sid';var selected_base;if (CreateEditApp.Mode =='createWithSeg') {selected_base =new ADOBE.AM.Segment.Models.Segment(attrs);} else {selected_base =new ADOBE.AM.Trait.Models.Trait(attrs);}
            ModelBuilder.vent.trigger("modal:trait_or_segment:selected",selected_base);});$.when(algorithms_jqxhr,datasources_jqxhr).then(function() {confLayout.lookback_and_algorithms.show(new LookbackAlgorithmsCreateView({collection :algorithms }));confLayout.datasources.show(new DataSourcesCreateView({collection :datasources }));acc_configuration.panel.set('expanded',true);ModelBuilder.vent.trigger("create_edit_page:show");});}
};},APP,AUI,ADOBE);